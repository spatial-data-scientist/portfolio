import { CompositeLayer, Layer, LayersList } from '@deck.gl/core';
type Constructor<T> = (new (...args: any[]) => T) & {
    layerName: string;
};
type DrawableCompositeLayer = CompositeLayer & {
    renderLayers(): Layer<{}> | null | LayersList;
};
/**
 * Modifier that marks a layer for Render-to-Target rendering.
 * Resulting layer must be used as a sublayer of a layer created
 * with `PostProcessModifier`
 */
export declare function RTTModifier(BaseLayer: any): {
    new (): {
        [x: string]: any;
        draw(this: any, opts: any): void;
    };
    [x: string]: any;
    layerName: string;
};
/**
 * Modifier that returns the a modified Layer, which applies a
 * postprocess effect to all subLayers created using `RTTModifier`
 */
export declare function PostProcessModifier<T extends Constructor<DrawableCompositeLayer>>(BaseLayer: T, effect: any): T;
export {};
//# sourceMappingURL=post-process-utils.d.ts.map