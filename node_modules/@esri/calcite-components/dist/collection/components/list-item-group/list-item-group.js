/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
 * v2.10.1
 */
import { h, Host } from "@stencil/core";
import { connectInteractive, disconnectInteractive, InteractiveContainer, updateHostInteraction, } from "../../utils/interactive";
import { MAX_COLUMNS } from "../list-item/resources";
import { CSS } from "./resources";
/**
 * @slot - A slot for adding `calcite-list-item` and `calcite-list-item-group` elements.
 */
export class ListItemGroup {
    constructor() {
        // --------------------------------------------------------------------------
        //
        //  Private Methods
        //
        // --------------------------------------------------------------------------
        this.handleDefaultSlotChange = () => {
            this.calciteInternalListItemGroupDefaultSlotChange.emit();
        };
        this.disabled = false;
        this.filterHidden = false;
        this.heading = undefined;
    }
    // --------------------------------------------------------------------------
    //
    //  Lifecycle
    //
    // --------------------------------------------------------------------------
    connectedCallback() {
        connectInteractive(this);
    }
    componentDidRender() {
        updateHostInteraction(this);
    }
    disconnectedCallback() {
        disconnectInteractive(this);
    }
    // --------------------------------------------------------------------------
    //
    //  Render Methods
    //
    // --------------------------------------------------------------------------
    render() {
        const { disabled, heading } = this;
        return (h(Host, { key: '49d0c6f86c120af1e07940706ae7209d9bfe8505' }, h(InteractiveContainer, { key: 'ad13451f3d785e38f18ef5e70863da34e6156a92', disabled: disabled }, h("tr", { key: '05c409b57cfb750738bda992941ef3fa2af55e55', class: CSS.container }, h("td", { key: 'b55ddbc0165d0725a2ff768787956ce8a6c684ec', class: CSS.heading, colSpan: MAX_COLUMNS }, heading)), h("slot", { key: '9eed41b10f61dc047ded58ecb0ca5b96beac2cca', onSlotchange: this.handleDefaultSlotChange }))));
    }
    static get is() { return "calcite-list-item-group"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() {
        return {
            "$": ["list-item-group.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["list-item-group.css"]
        };
    }
    static get properties() {
        return {
            "disabled": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "When `true`, interaction is prevented and the component is displayed with lower opacity."
                },
                "attribute": "disabled",
                "reflect": true,
                "defaultValue": "false"
            },
            "filterHidden": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [{
                            "name": "internal",
                            "text": undefined
                        }],
                    "text": "Hides the component when filtered."
                },
                "attribute": "filter-hidden",
                "reflect": true,
                "defaultValue": "false"
            },
            "heading": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "The header text for all nested `calcite-list-item` rows."
                },
                "attribute": "heading",
                "reflect": true
            }
        };
    }
    static get events() {
        return [{
                "method": "calciteInternalListItemGroupDefaultSlotChange",
                "name": "calciteInternalListItemGroupDefaultSlotChange",
                "bubbles": true,
                "cancelable": false,
                "composed": true,
                "docs": {
                    "tags": [],
                    "text": "Fires when changes occur in the default slot, notifying parent lists of the changes."
                },
                "complexType": {
                    "original": "DragEvent",
                    "resolved": "DragEvent",
                    "references": {
                        "DragEvent": {
                            "location": "global",
                            "id": "global::DragEvent"
                        }
                    }
                }
            }];
    }
    static get elementRef() { return "el"; }
}
//# sourceMappingURL=list-item-group.js.map
