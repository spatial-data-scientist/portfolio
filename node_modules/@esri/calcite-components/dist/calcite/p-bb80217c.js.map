{"version":3,"names":["customConfig","globalThis","focusTrapStack","version","stampVersion","console","warn","target","Object","defineProperty","value","writable"],"sources":["src/utils/config.ts"],"sourcesContent":["/**\n * This module allows custom configuration for components.\n */\n\nimport { FocusTrap } from \"./focusTrapComponent\";\n\nexport interface CalciteConfig {\n  /**\n   * Defines the global trap stack to use for focus-trapping components.\n   *\n   * This is useful if your application uses its own instance of `focus-trap` and both need to be aware of each other.\n   *\n   * @see https://github.com/focus-trap/focus-trap#createoptions\n   */\n  focusTrapStack: FocusTrap[];\n\n  /**\n   * Contains the version of the Calcite components.\n   *\n   * @readonly\n   */\n  version?: string;\n}\n\nconst customConfig: CalciteConfig = globalThis[\"calciteConfig\"];\n\nexport const focusTrapStack: FocusTrap[] = customConfig?.focusTrapStack || [];\n\nconst version = \"__CALCITE_VERSION__\"; // version number is set by build\n\n/**\n * Stamp the version onto the global config.\n */\nexport function stampVersion(): void {\n  if (customConfig && customConfig.version) {\n    console.warn(\n      `[calcite-components] while initializing v${version}, an existing configuration with version \"${customConfig.version}\" was found. This may cause unexpected behavior. The version will not be added to the existing global configuration.`,\n    );\n    return;\n  }\n\n  const target = customConfig || globalThis[\"calciteConfig\"] || {};\n\n  Object.defineProperty(target, \"version\", {\n    value: version,\n    writable: false,\n  });\n\n  globalThis[\"calciteConfig\"] = target;\n}\n"],"mappings":";;;;;AAwBA,MAAMA,EAA8BC,WAAW,iB,MAElCC,EAA8BF,GAAcE,gBAAkB,GAE3E,MAAMC,EAAU,S,SAKAC,IACd,GAAIJ,GAAgBA,EAAaG,QAAS,CACxCE,QAAQC,KACN,4CAA4CH,8CAAoDH,EAAaG,+HAE/G,M,CAGF,MAAMI,EAASP,GAAgBC,WAAW,kBAAoB,GAE9DO,OAAOC,eAAeF,EAAQ,UAAW,CACvCG,MAAOP,EACPQ,SAAU,QAGZV,WAAW,iBAAmBM,CAChC,Q","ignoreList":[]}