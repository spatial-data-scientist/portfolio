/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import e from"../../Graphic.js";import t from"../../core/Logger.js";import{getOrCreateMapValue as r}from"../../core/MapUtils.js";import o from"../../geometry/Extent.js";import n from"../../geometry/Mesh.js";import s from"../../geometry/Point.js";import a from"../../geometry/SpatialReference.js";import i from"../../geometry/support/MeshTransform.js";import{ServiceAssetPart as u,ServiceAsset as f}from"../../geometry/support/meshUtils/External.js";import{getFormatIdMimeType as c}from"../../layers/support/infoFor3D.js";import l from"./FeatureSet.js";const m=()=>t.getLogger("esri.rest.support.meshFeatureSet");function p(t,r,o){const n=o.features;o.features=[],delete o.geometryType;const s=l.fromJSON(o);if(s.geometryType="mesh",!o.assetMaps)return s;const i=d(r,o.assetMaps),u=t.sourceSpatialReference??a.WGS84,f=o.globalIdFieldName,{outFields:c}=t,m=null!=c&&c.length>0?g(c.includes("*")?null:new Set(c)):()=>({});for(const a of n){const t=y(a,f,u,r,i);s.features.push(new e({geometry:t,attributes:m(a)}))}return s}function g(e){return({attributes:t})=>{if(!t)return{};if(!e)return t;for(const r in t)e.has(r)||delete t[r];return t}}function y(e,t,r,s,a){const i=e.attributes[t],u=a.get(i);if(null==u||!e.geometry)return null;const f=E(e,r,s),c=o.fromJSON(e.geometry);c.spatialReference=r;const l=h(e.attributes,s),m=r.isGeographic?"local":"georeferenced",p=D(u);return p?n.createWithExternalSource(f,p,{extent:c,transform:l,vertexSpace:m}):n.createIncomplete(f,{extent:c,transform:l,vertexSpace:m})}function E({attributes:e},t,{transformFieldRoles:r}){const o=e[r.originX],n=e[r.originY],a=e[r.originZ];return new s({x:o,y:n,z:a,spatialReference:t})}function h(e,{transformFieldRoles:t}){return new i({translation:[e[t.translationX],-e[t.translationZ],e[t.translationY]],rotationAxis:[e[t.rotationX],-e[t.rotationZ],e[t.rotationY]],rotationAngle:e[t.rotationDeg],scale:[e[t.scaleX],e[t.scaleZ],e[t.scaleY]]})}var S;function d(e,t){const o=new Map;for(const n of t){const t=n.parentGlobalId;if(null==t)continue;const s=n.assetName,a=n.assetType,i=n.assetHash,u=n.assetURL,f=n.conversionStatus,l=n.seqNo,p=c(a,e.supportedFormats);if(!p){m().error("mesh-feature-set:unknown-format",`Service returned an asset of type ${a}, but it does not list it as a supported type`);continue}const g=r(o,t,(()=>({files:new Map})));r(g.files,s,(()=>({name:s,type:a,mimeType:p,status:M(f),parts:[]}))).parts[l]={hash:i,url:u}}return o}function D(e){const t=Array.from(e.files.values()),r=new Array;for(const o of t){if(o.status!==S.COMPLETED)return null;const e=new Array;for(const t of o.parts){if(!t)return null;e.push(new u(t.url,t.hash))}r.push(new f(o.name,o.mimeType,e))}return r}function M(e){switch(e){case"COMPLETED":case"SUBMITTED":return S.COMPLETED;case"INPROGRESS":return S.PENDING;default:return S.FAILED}}!function(e){e[e.FAILED=0]="FAILED",e[e.PENDING=1]="PENDING",e[e.COMPLETED=2]="COMPLETED"}(S||(S={}));export{d as assetMapFromAssetMapsJSON,y as extractMesh,p as meshFeatureSetFromJSON};
