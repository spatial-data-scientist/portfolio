/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{ShaderOutput as e}from"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js";import{SliceDraw as r}from"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js";import{Transform as o}from"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js";import{ObjectAndLayerIdColor as i}from"../views/3d/webgl-engine/core/shaderLibrary/attributes/ObjectAndLayerIdColor.glsl.js";import{VertexColor as l}from"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexColor.glsl.js";import{OutputHighlight as t}from"../views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js";import{multipassTerrainTest as s}from"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js";import{VisualVariables as a}from"../views/3d/webgl-engine/core/shaderLibrary/shading/VisualVariables.glsl.js";import{symbolAlphaCutoff as d}from"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js";import{ColorConversion as n}from"../views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js";import{addProjViewLocalOrigin as g}from"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js";import{Float4PassUniform as p}from"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js";import{glsl as u}from"../views/3d/webgl-engine/core/shaderModules/interfaces.js";import{ShaderBuilder as c}from"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js";import{TransparencyPassType as b}from"../views/3d/webgl-engine/lib/TransparencyPassType.js";import{VertexAttribute as v}from"../views/3d/webgl-engine/lib/VertexAttribute.js";function f(f){const m=new c,{vertex:w,fragment:h,attributes:C,varyings:y}=m;g(w,f),m.include(o,f),m.include(l,f),m.include(a,f),m.include(i,f),C.add(v.POSITION,"vec3"),f.vvColor&&C.add(v.COLORFEATUREATTRIBUTE,"float"),y.add("vColor","vec4"),y.add("vpos","vec3");const j=f.multipassEnabled&&f.output===e.Color;j&&y.add("depth","float"),w.uniforms.add(new p("eColor",(e=>e.color))),w.code.add(u`
    void main(void) {
      vpos = position;
      forwardNormalizedVertexColor();
      forwardObjectAndLayerIdColor();

      ${f.hasVertexColors?"vColor *= eColor;":f.vvColor?"vColor = eColor * interpolateVVColor(colorFeatureAttribute);":"vColor = eColor;"}
      ${j?"depth = (view * vec4(vpos, 1.0)).z;":""}
      gl_Position = transformPosition(proj, view, vpos);
    }
  `),m.include(r,f),j&&m.include(s,f),h.include(n);const L=f.output===e.Highlight;return L&&m.include(t,f),f.transparencyPassType===b.ColorAlpha&&(m.outputs.add("fragColor","vec4",0),m.outputs.add("fragAlpha","float",1)),h.code.add(u`
  void main() {
    discardBySlice(vpos);
    ${j?"terrainDepthTest(depth);":""}
    vec4 fColor = vColor;

    ${f.output===e.ObjectAndLayerIdColor?u`fColor.a = 1.0;`:""}

    if (fColor.a < ${u.float(d)}) {
      discard;
    }

    ${f.output===e.Color?u`fragColor = highlightSlice(fColor, vpos); ${f.transparencyPassType===b.ColorAlpha?u`
                  fragColor = premultiplyAlpha(fragColor);
                  fragAlpha = fragColor.a;`:""}`:""}
    ${L?u`outputHighlight();`:""};
    ${f.output===e.ObjectAndLayerIdColor?u`outputObjectAndLayerIdColor();`:""}
  }
  `),m}const m=Object.freeze(Object.defineProperty({__proto__:null,build:f},Symbol.toStringTag,{value:"Module"}));export{m as C,f as b};
