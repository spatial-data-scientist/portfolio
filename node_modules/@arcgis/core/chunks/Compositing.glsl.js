/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{ScreenSpacePass as e}from"../views/3d/webgl-engine/core/shaderLibrary/ScreenSpacePass.glsl.js";import{ReadDepth as r}from"../views/3d/webgl-engine/core/shaderLibrary/output/ReadDepth.glsl.js";import{RgbaFloatEncoding as a}from"../views/3d/webgl-engine/core/shaderLibrary/util/RgbaFloatEncoding.glsl.js";import{Float2PassUniform as o}from"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js";import{FloatPassUniform as t}from"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js";import{NoParameters as i,glsl as s}from"../views/3d/webgl-engine/core/shaderModules/interfaces.js";import{ShaderBuilder as n}from"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js";import{Texture2DPassUniform as d}from"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js";class l extends i{constructor(){super(...arguments),this.opacity=1}}function m(i){const l=new n;return l.include(e),l.fragment.uniforms.add(new d("tex",(e=>e.texture))),i.hasOpacityFactor&&l.fragment.uniforms.add(new t("opacity",(e=>e.opacity))),i.isDepthBlit&&(l.fragment.uniforms.add(new o("nearFar",((e,r)=>r.camera.nearFar))),l.fragment.include(r),l.fragment.include(a)),l.fragment.code.add(s`
    void main() {
      ${i.isDepthBlit?s`
              float normalizedLinearDepth = (-linearDepthFromTexture(tex, uv) - nearFar[0]) / (nearFar[1] - nearFar[0]);
              fragColor = float2rgba(normalizedLinearDepth);`:s`
              fragColor = texture(tex, uv) ${i.hasOpacityFactor?"* opacity":""};`}
    }`),l}const c=Object.freeze(Object.defineProperty({__proto__:null,CompositingPassParameters:l,build:m},Symbol.toStringTag,{value:"Module"}));export{l as C,c as a,m as b};
