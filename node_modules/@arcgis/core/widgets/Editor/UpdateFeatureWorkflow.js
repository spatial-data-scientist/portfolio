/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../core/Error.js";import{makeHandle as i}from"../../core/handleUtils.js";import"../../core/has.js";import{destroyMaybe as s}from"../../core/maybe.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{subclass as r}from"../../core/accessorSupport/decorators/subclass.js";import a from"../../layers/GraphicsLayer.js";import{hasEffectiveFeatureExpressionInfo as l}from"../../support/elevationInfoUtils.js";import{highlightsSupported as h}from"../../views/support/layerViewUtils.js";import n from"./UpdateFeatureWorkflowData.js";import{handleKeys as d,UpdateRecordWorkflow as c}from"./UpdateRecordWorkflow.js";import{getVisualVariableAttributes as p,setUpGeometryUpdate as m,isTerminalUpdateEventType as u,updateGraphicSymbolWhenRequired as w,swapForEditingSession as y,cloneGraphicExceptMesh as f,canCreateInteractiveEditSession as k}from"./workflowUtils.js";import g from"../Sketch/SketchViewModel.js";var _;const V={...d,highlights:Symbol(),sketchGraphics:Symbol(),sketchViewModel:Symbol()};let v=_=class extends c{constructor(e){super(e),this.type="update-feature",this._layerViewEditSession=null,this._sketchGraphicClone=null,this._sketchViewModel=null,this._webStyleCache=new Map}destroy(){this._layerViewEditSession?.rollback()}async commit(){this.removeHandles(V.sketchGraphics);try{const e=this.data.edits.stagedForDelete;await super.commit();const t=this._layerViewEditSession;e?t?.rollback():t?.commit()}catch(e){throw await this._configureSketchViewModel(),new t("editor-workflow:failed-to-commit","An error occurred when sending the updates to the service",{error:e})}}async start(){return await super.start(),await this._initializeSketchViewModel()}_initializeFeatureFormViewModel(){super._initializeFeatureFormViewModel(),this.addHandles(this._featureFormViewModel.on("value-change",(e=>{this._layerViewEditSession?.setAttribute(e.fieldName,e.value)})))}_configureHighlight(){const{edits:e,layerView:t}=this.data;h(t)&&this.addHandles(t.highlight(e.feature),V.highlights)}async _configureSketchViewModel(){const e=this._sketchViewModel;if(!e)return;const{data:t,_featureFormViewModel:i,_sketchGraphicClone:s}=this,{edits:o,viewModel:r}=t,a=o.feature,{view:l}=r,h=p(a),n=await m({feature:a,featureClone:s,visualVariableAttributes:h,sketchViewModel:e,view:l,onUpdate:({geometry:e,attributes:t},s)=>{if(o.updateAttributes(t),o.updateGeometry(e),i.feature.geometry=e,null!=h.rotation){const{field:e}=h.rotation;i.setValue(e,t[e])}if(null!=h.size){const{field:e}=h.size;i.setValue(e,t[e])}("undo"===s.type||"redo"===s.type||"update"===s.type&&null!=s.toolEventInfo&&u(s.toolEventInfo.type))&&i.notifyFeatureGeometryChanged()},webStyleCache:this._webStyleCache});this.addHandles(n,V.sketchGraphics),e.addHandles(n)}async _initializeSketchViewModel(){const{data:e,_sketchGraphicClone:t}=this,o=e.edits.feature,{capabilities:r,layer:h}=e.editorItem,{view:n}=e.viewModel;if(this.removeHandles([V.highlights,V.sketchGraphics,V.sketchViewModel]),!r.update.geometry||"3d"===n?.type&&l(h.elevationInfo))return{enter:async()=>{this.hasHandles(V.highlights)||this._configureHighlight()},exit:()=>this.removeHandles([V.highlights])};const d=new a({elevationInfo:h.elevationInfo,internal:!0,listMode:"hide"}),c=new g({allowDeleteKey:!1,layer:d,sketchOptions:e.sketchOptions,snappingManager:e.snappingManager,updateOnGraphicClick:!1,view:n});return this._sketchViewModel=c,n?.map.add(d),this.addHandles(i((()=>{n?.destroyed||n?.map.remove(d),d.destroy(),this._sketchViewModel=s(c)})),V.sketchViewModel),await w(t,this._webStyleCache,"2d"===n?.type?n.scale:null),this.addHandles([await y(c,o,t)]),{enter:async()=>{this.hasHandles(V.sketchGraphics)||await this._configureSketchViewModel()},exit:()=>this.removeHandles([V.sketchGraphics]),viewModel:c}}_onFullFeatureLoaded(e){super._onFullFeatureLoaded(e);const t=this._sketchGraphicClone=f(e),{edits:i,layerView:s}=this.data;i.updateGeometry(e.geometry),i.trackChanges(),k(s)&&(this._layerViewEditSession=s.createInteractiveEditSession(t))}static async create(e){const t=new _({data:await n.create(e),onCommit:this._onCommitFactory(e.applyEdits)});return t._set("steps",this._createWorkflowSteps(t)),t}get test(){}};e([o()],v.prototype,"_layerViewEditSession",void 0),e([o()],v.prototype,"_sketchGraphicClone",void 0),e([o()],v.prototype,"_sketchViewModel",void 0),v=_=e([r("esri.widgets.Editor.UpdateFeatureWorkflow")],v);export{v as UpdateFeatureWorkflow,V as handleKeys};
