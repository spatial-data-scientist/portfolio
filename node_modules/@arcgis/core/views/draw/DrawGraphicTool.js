/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import e from"../../Graphic.js";import{UndoRedo as o}from"../../UndoRedo.js";import{createTask as r}from"../../core/asyncUtils.js";import i from"../../core/Evented.js";import{makeHandle as s}from"../../core/handleUtils.js";import{destroyMaybe as n}from"../../core/maybe.js";import{watch as a,syncAndInitial as p}from"../../core/reactiveUtils.js";import{property as l}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{subclass as c}from"../../core/accessorSupport/decorators/subclass.js";import{load as h}from"../../geometry/coordinateFormatter.js";import d from"../../layers/GraphicsLayer.js";import{pointEquals as u}from"../../layers/graphics/dehydratedFeatureComparison.js";import{CreateOperationGeometry as m}from"./support/CreateOperationGeometry.js";import{createCircle as y,createEllipse as g,createSquare as v,createRectangle as f,createPolygon as _,createPolyline as O,createMultipoint as w}from"./support/createUtils.js";import{createViewAlignedCoordinateSystem as C}from"./support/surfaceCoordinateSystems.js";import{createTooltipInfos as G,initializeConstraints as x,unlockConstraintsOnVertexAddOrRemove as V,lockElevationOnVertexAdd as b,getActiveTooltipInfo as j,updateTooltipInfo as S,getConstraintZ as T}from"./support/tooltipUtils.js";import{InteractiveToolBase as U}from"../interactive/InteractiveToolBase.js";import k from"../interactive/sketch/SketchOptions.js";import{Tooltip as H}from"../interactive/tooltip/Tooltip.js";import{pasteLocation as R,enterInputModeIfAvailable as L}from"../interactive/tooltip/tooltipCommonUtils.js";import{autorun as z}from"../../core/accessorSupport/trackingUtils.js";let E=class extends(i.EventedMixin(U)){constructor(t){super(t),this._graphic=null,this._coordinateFormatterLoadTask=null,this._createOperationGeometry=null,this.defaultZ=0,this.directionOptions=null,this.geometryType=null,this.hasZ=!0,this.geometryToPlace=null,this.snappingManager=null,this.snapToScene=!1,this.sketchOptions=new k}initialize(){const{view:t}=this;this.internalGraphicsLayer=new d({listMode:"hide",internal:!0}),this.view.map.layers.add(this.internalGraphicsLayer);const e=this.drawOperation=this.makeDrawOperation();this.tooltipInfos=G(t.type,this.sketchOptions);const o=this.tooltip=new H({view:t});x(this._tooltipsContext),this._coordinateFormatterLoadTask=r((()=>h())),this.addHandles([e.on("vertex-add",(t=>this.onVertexAdd(t))),e.on("vertex-remove",(t=>this.onVertexRemove(t))),e.on("vertex-update",(t=>this.onVertexUpdate(t))),e.on("cursor-update",(t=>this.onCursorUpdate(t))),e.on("cursor-remove",(()=>this._updateGraphic())),e.on("complete",(t=>this.onComplete(t))),this._coordinateFormatterLoadTask,o.on("paste",(t=>R(t,this.activeTooltipInfo))),a((()=>this.cursor),(t=>{e.cursor=t}),p),z((()=>{const{activeTooltipInfo:t,sketchOptions:e}=this;S(t,this._tooltipsContext),o.info=e.tooltips.effectiveEnabled?t:null})),z((()=>{e.constraintZ=T(this._tooltipsContext)}))]),this.finishToolCreation()}destroy(){this.drawOperation=n(this.drawOperation),this.tooltip=n(this.tooltip),this._destroyAllVisualizations(),this.view.map.remove(this.internalGraphicsLayer),this.internalGraphicsLayer=n(this.internalGraphicsLayer),this._set("view",null)}get _drawSpatialReference(){return this.drawOperation.coordinateHelper.spatialReference}get _tooltipsContext(){return{createOperationGeometry:this._createOperationGeometry,defaultZ:this.defaultZ,directionOptions:this.directionOptions,drawOperation:this.drawOperation,forceUniformSize:this.forceUniformSize,geometryType:this.geometryType,graphic:this.graphic,sketchOptions:this.sketchOptions,tooltipInfos:this.tooltipInfos,view:this.view}}get canRedo(){return this.drawOperation.canRedo}get canUndo(){return this.drawOperation.canUndo}set centered(t){this._set("centered",t),this._updateGraphic()}get cursor(){return this._get("cursor")}set cursor(t){this._set("cursor",t)}set enabled(t){this.drawOperation.interactive=t,this._set("enabled",t)}set forceUniformSize(t){this._set("forceUniformSize",t),this._updateGraphic()}get graphic(){return this._graphic}set graphicSymbol(t){this._set("graphicSymbol",t),null!=this._graphic&&(this._graphic.symbol=t)}set mode(t){const e=this.drawOperation;e&&(e.drawingMode=t),this._set("mode",t)}get updating(){return this.drawOperation?.updating??!1}get undoRedo(){const{view:{type:t,map:e}}=this;return"2d"===t&&e&&"undoRedo"in e&&e.undoRedo instanceof o?e.undoRedo:null}set undoRedo(t){this._override("undoRedo",t)}completeCreateOperation(){this.drawOperation.complete()}onInputEvent(t){this.destroyed||L(t,this.tooltip)||this.drawOperation.onInputEvent(t)}redo(){this.drawOperation.redo()}reset(){}undo(){this.drawOperation.undo(),0===this.drawOperation.numCommittedVertices&&x(this._tooltipsContext)}_destroyAllVisualizations(){this.removeHandles(A.outline),this.removeHandles(A.regularVertices),this.removeHandles(A.activeVertex),this.removeHandles(A.activeEdge),this.removeHandles(I)}_createOrUpdateGraphic(t){if(null!=this._graphic)return this.updateGraphicGeometry(t),this._graphic;const o=new e({...this.graphicProperties,symbol:this.graphicSymbol});return this._graphic=o,this.updateGraphicGeometry(t),this.internalGraphicsLayer.add(o),this.addHandles(this.initializeGraphic(o)),this.notifyChange("graphic"),this.addHandles(s((()=>{this.internalGraphicsLayer.remove(o),this._graphic===o&&(this._graphic=null)})),I),o}updateGraphicGeometry(t){this._graphic.geometry=t}_getCreateOperationGeometry(t={operationComplete:!1}){if(null==this.drawOperation)return;const{coordinateHelper:e,view:o,visualizationCursorVertex:r,lastVertex:i,committedVertices:s,geometryIncludingUncommittedVertices:n,numCommittedVertices:a}=this.drawOperation;if(!(a>0||null!=r))return;const p=t.operationComplete?s:n,l=p.length,c=null!=r?e.pointToArray(r):null,h=this._drawSpatialReference,d="3d"===o.type&&"global"===o.viewingMode,G=new m;G.committedVertices=s,G.cursorVertex=c;const{geometryType:x}=this;switch(x){case"point":case"mesh":G.full=e.arrayToPoint(p[0]);break;case"multipoint":G.full=l>0?w(p,h):null;break;case"polyline":case"polygon":l>0&&(G.full="polygon"===x?_([p],h,d,!0):O([p],h,d),G.cursorEdge=null!=c&&i&&!u(r,i)?O([[c,e.pointToArray(i)]],h,d):null,G.outline=l>1?G.full:null);break;case"circle":case"rectangle":{if(G.committedVertices=G.cursorVertex=null,!l)break;const e=C(o,p[0]),r=p[0],i=e.makeMapPoint(r[0]+M*o.resolution,r[1]);"circle"===x?1===l&&t.operationComplete?G.circle=y([r,i],e,!0):2===l&&(this.forceUniformSize?G.circle=y(p,e,this.centered):G.rectangle=g(p,e,this.centered)):1===l&&t.operationComplete?G.rectangle=v([r,i],e,!0):2===l&&(G.rectangle=this.forceUniformSize?v(p,e,this.centered):f(p,e,this.centered)),G.full=null!=G.circle?G.circle.geometry:G.rectangle?.geometry,G.outline="polygon"===G.full?.type?G.full:null;break}default:return null}return G}initializeGraphic(t){return s()}onComplete(t){if(!this.drawOperation)return;this._updateGraphic();let e=null;if(this.drawOperation.isCompleted){const t=this._getCreateOperationGeometry({operationComplete:!0});null!=t&&(e=this._createOrUpdateGraphic(t.full))}this._createOperationGeometry=null,this.emit("complete",{graphic:e,...t})}onCursorUpdate(t){this._updateGraphic(),this.emit("cursor-update",t)}onDeactivate(){const{drawOperation:t}=this;t&&(t.isCompleted||t.cancel())}onOutlineChanged(t){return s()}onCursorEdgeChanged(t){return s()}onVertexAdd(t){V(this._tooltipsContext),this._updateGraphic(),b(t.vertices.at(0)?.coordinates,this._tooltipsContext),this.emit("vertex-add",t)}onVertexRemove(t){V(this._tooltipsContext),this._updateGraphic(),this.emit("vertex-remove",t)}onVertexUpdate(t){this._updateGraphic(),this.emit("vertex-update",t)}_updateGraphic(){const t=this._getCreateOperationGeometry();this._createOperationGeometry=t,null!=t?(null!=t.cursorEdge?this.addHandles(this.onCursorEdgeChanged(t.cursorEdge),A.activeEdge):this.removeHandles(A.activeEdge),null!=t.outline?this.addHandles(this.onOutlineChanged(t.outline),A.outline):this.removeHandles(A.outline),null!=t.committedVertices?this.addHandles(this.onRegularVerticesChanged(t.committedVertices),A.regularVertices):this.removeHandles(A.regularVertices),null!=t.cursorVertex?this.addHandles(this.onActiveVertexChanged(t.cursorVertex),A.activeVertex):this.removeHandles(A.activeVertex),null!=t.full?this._createOrUpdateGraphic(t.full):this.removeHandles(I)):this._destroyAllVisualizations()}get activeTooltipInfo(){return this._coordinateFormatterLoadTask?.finished?j(this._tooltipsContext):null}};t([l()],E.prototype,"_coordinateFormatterLoadTask",void 0),t([l()],E.prototype,"_createOperationGeometry",void 0),t([l()],E.prototype,"_tooltipsContext",null),t([l({value:!0})],E.prototype,"centered",null),t([l()],E.prototype,"cursor",null),t([l({nonNullable:!0})],E.prototype,"defaultZ",void 0),t([l({constructOnly:!0})],E.prototype,"directionOptions",void 0),t([l()],E.prototype,"drawOperation",void 0),t([l({value:!0})],E.prototype,"enabled",null),t([l({value:!0})],E.prototype,"forceUniformSize",null),t([l({constructOnly:!0})],E.prototype,"geometryType",void 0),t([l()],E.prototype,"graphic",null),t([l({constructOnly:!0})],E.prototype,"graphicProperties",void 0),t([l()],E.prototype,"graphicSymbol",null),t([l({constructOnly:!0})],E.prototype,"hasZ",void 0),t([l({constructOnly:!0})],E.prototype,"geometryToPlace",void 0),t([l()],E.prototype,"mode",null),t([l()],E.prototype,"snappingManager",void 0),t([l()],E.prototype,"snapToScene",void 0),t([l()],E.prototype,"tooltip",void 0),t([l()],E.prototype,"tooltipInfos",void 0),t([l({constructOnly:!0,type:k})],E.prototype,"sketchOptions",void 0),t([l()],E.prototype,"updating",null),t([l({constructOnly:!0,nonNullable:!0})],E.prototype,"view",void 0),t([l({constructOnly:!0})],E.prototype,"undoRedo",null),t([l()],E.prototype,"activeTooltipInfo",null),E=t([c("esri.views.draw.DrawGraphicTool")],E);const I=Symbol("create-operation-graphic"),A={outline:Symbol("outline-visual"),regularVertices:Symbol("regular-vertices-visual"),activeVertex:Symbol("active-vertex-visual"),activeEdge:Symbol("active-edge-visual")};function F(t){switch(t){case"point":case"polyline":case"polygon":case"multipoint":return t;case"circle":case"rectangle":return"segment";case"mesh":return"point"}}const M=48;export{E as DrawGraphicTool,F as geometryTypeToDrawOperationGeometryType};
