/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{createTask as t}from"../../../core/asyncUtils.js";import{handlesGroup as e,makeHandle as o}from"../../../core/handleUtils.js";import{floatEqualUlp as n}from"../../../core/mathUtils.js";import{createAngle as r,createScalar as a,valueInUnit as l}from"../../../core/quantityUtils.js";import{verticalLengthUnitFromSpatialReference as i}from"../../../core/unitUtils.js";import{k as s,j as u,G as c}from"../../../chunks/vec32.js";import{clone as p,ONES as f,create as m,UNIT_Z as y}from"../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{isLoaded as g,load as d}from"../../../geometry/coordinateFormatter.js";import v from"../../../geometry/Point.js";import x from"../../../geometry/support/MeshTransform.js";import{isRelativeVertexSpace as j}from"../../../geometry/support/meshVertexSpaceUtils.js";import{isWebMercator as b}from"../../../geometry/support/spatialReferenceUtils.js";import{lngLatToXY as S}from"../../../geometry/support/webMercatorUtils.js";import{tooltipKeys as h}from"../keybindings.js";import{parseLatitudeLongitude as U,parseXY as M}from"./fields/parsingAndFormattingUtils.js";import{getDegreesArithmetic as z,getDegreesGeographic as A}from"../../support/angularMeasurementUtils.js";function R(t,e){const o=j(e.vertexSpace),{scale:n,orientation:l}=t,{transform:i}=e,s=F(i);o&&null!=s?(l.actual=r(s,"degrees","arithmetic"),l.visible=!0):(l.actual=null,l.visible=!1),o?(n.actual=a(q(i)),n.visible=!0):(n.actual=null,n.visible=!1)}function k(t,e,o){if(!e||!j(e.vertexSpace))return;const n=e.transform??=new x,{rotationAngle:r,rotationAxis:a}=n,l=z(t.orientation.actual),i=E(a);if(null!=l&&null!=i&&l!==r){o?.onRotateStart?.(r);const t=l*i;n.rotationAngle=t,o?.onRotate?.(t),o?.onRotateStop?.(t)}const s=t.scale.actual?.value,c=q(n);if(null!=s&&s!==c){const{scale:t}=n;let e;if(o?.onScaleStart?.(t[0],t[1],t[2]),0===c)e=p(f);else{const o=s/c;e=u(m(),t,o)}n.scale=e,o?.onScale?.(e[0],e[1],e[2]),o?.onScaleStop?.(e[0],e[1],e[2])}}function w(t,e,o){if(!e||!j(e.vertexSpace))return;const{origin:n,spatialReference:r}=e,{x:a,y:l,z:i}=D(t,r),{dx:s,dy:u,dz:c}=V(t,n);0===s&&0===u&&0===c||(o.onMoveStart?.(),e.centerAt(new v({x:a??n.x,y:l??n.y,z:i??n.z,spatialReference:r})),o.onMove?.(s,u,c),o.onMoveStop?.())}function V(t,e){const{x:o,y:r,z:a}=e,{x:l,y:i,z:s}=D(t,e.spatialReference);return{dx:null==l||n(l,o)?0:l-o,dy:null==i||n(i,r)?0:i-r,dz:null==s||null==a||n(s,a)?0:s-a}}function D(t,e){let o,n,r;if(t.geographic){o=A(t.longitude.actual),n=A(t.latitude.actual),b(e)&&(null!=o&&null!=n?[o,n]=S(o,n,P):null!=o?o=S(o,0,P)[0]:null!=n&&(n=S(0,n,P)[1]));const a=t.elevation.actual,s=i(e);r=null!=s&&null!=a?l(a,s):void 0}else o=t.x.actual?.value,n=t.y.actual?.value,r=t.elevation.actual?.value;return{x:o,y:n,z:r}}const P=[0,0];function F(t){if(!t)return 0;const e=E(t.rotationAxis);return null!=e?e*t.rotationAngle:null}function E(t){return c(t,y)?1:c(t,I)?-1:null}const I=s(m(),y);function q(t){return t?Math.max(...t.scale):1}function G(t,e){return!("key-down"!==t.type||t.key!==h.enterInputMode||!e||!O(e.info))&&(e.enterInputMode(),t.stopPropagation(),!0)}function O(t){const e=t?.sketchOptions;if(!e)return!1;const{inputEnabled:o,visibleElements:n}=e.tooltips;return o&&!0===t.editableFields.some((({name:t})=>"x"===t||"y"===t?n.coordinates:n[t]))}function T(n){let r=null;return e([n.on("paste",(async e=>{r?.abort(),r=t((async()=>{g()||await d(),B(e,n.info)}))})),t((()=>d())),o((()=>r?.abort()))])}function B(t,e){if(!e||!("geographic"in e))return;const o=t.clipboardData?.getData("text");if(o)if(e.geographic){const n=U(o);n&&(e.longitude.applyValue(n.longitude),e.latitude.applyValue(n.latitude),t.stopPropagation(),t.preventDefault())}else{const n=M(o);n&&(e.x.applyValue(n.x),e.y.applyValue(n.y),t.stopPropagation(),t.preventDefault())}}export{T as connectPasteEvent,G as enterInputModeIfAvailable,V as getXYZDeltasFromTooltipInfo,B as pasteLocation,w as updateMeshOriginFromTooltipInfo,k as updateMeshTransformFromTooltipInfo,R as updateTooltipInfoFromMeshTransform};
