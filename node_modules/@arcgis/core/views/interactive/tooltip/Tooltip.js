/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import o from"../../../core/Evented.js";import{on as e}from"../../../core/events.js";import{destroyMaybe as n}from"../../../core/maybe.js";import{watch as i,syncAndInitial as s}from"../../../core/reactiveUtils.js";import{property as r}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/RandomLCG.js";import{subclass as c}from"../../../core/accessorSupport/decorators/subclass.js";import{setCalciteThemeClass as p}from"../../../support/themeUtils.js";import{base as l}from"./css.js";import{tooltipContentFactory as a}from"./content/tooltipContentFactory.js";import{isRTL as d}from"../../../widgets/support/widgetUtils.js";const u={base:`${l}`};let h=class extends o.EventedAccessor{constructor(t){super(t),this.info=null,this.position=null,this.content=null,this.contentContainer=(()=>{const t=document.createElement("div");return t.classList.add(u.base),p(t),t})()}initialize(){const{contentContainer:t}=this;this.addHandles([i((()=>this.view.overlay?.surface),(o=>{t.remove(),o?.appendChild(t)}),s),i((()=>this.info),((o,e)=>{if(null!=this.content&&null!=o&&null!=e&&o.type===e.type)this.content.info=o;else{this.content=n(this.content);const e=a(this,o);e&&(this.content=e,e.container&&t.appendChild(e.container),this.exitInputMode())}}),s),i((()=>({container:this.contentContainer,content:this.content,screenPoint:this._screenPoint,positionMode:this.positionMode,position:this.position})),m,s),e(this.contentContainer,"paste",(t=>{this.emit("paste",t)}))])}destroy(){this.info=null,this.content=n(this.content),this.contentContainer.remove()}get positionMode(){return"input"===this.content?.mode?"fixed":"follow-cursor"}get mode(){return this.content?.mode??"feedback"}get _screenPoint(){const{inputManager:t}=this.view;return t?.multiTouchActive?null:t?.latestPointerLocation}get visible(){return"none"!==this.contentContainer?.style.display}clear(){this.info=null}async enterInputMode(t){await(this.content?.enterInputMode(t))}async exitInputMode(t){await(this.content?.exitInputMode(t))}};function m(t){if("fixed"===t.positionMode&&!t.position)return;const{style:o}=t.container,e=t.position??t.screenPoint;if(null!=e&&null!=t.content){o.display="block";const n=d(t.container),i=`translate(${Math.round(e.x)+f[0]*(n?-1:1)}px, ${Math.round(e.y)+f[1]}px)`;o.transform=n?`translate(-100%, 0) ${i}`:i}else o.display="none"}t([r({nonNullable:!0})],h.prototype,"view",void 0),t([r()],h.prototype,"info",void 0),t([r()],h.prototype,"positionMode",null),t([r()],h.prototype,"position",void 0),t([r()],h.prototype,"content",void 0),t([r()],h.prototype,"mode",null),t([r()],h.prototype,"contentContainer",void 0),t([r()],h.prototype,"_screenPoint",null),h=t([c("esri.views.interactive.tooltip.Tooltip")],h);const f=[20,20];export{h as Tooltip};
