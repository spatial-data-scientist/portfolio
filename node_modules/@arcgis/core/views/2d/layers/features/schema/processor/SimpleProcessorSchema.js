/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{pt2px as e}from"../../../../../../core/screenUtils.js";import r from"../../../../../../layers/support/OrderByInfo.js";import{createLabelMatcherSchema as t}from"./LabelMatcherSchema.js";import{createMatcherSchema as i}from"./MatcherSchema.js";import{createStorageSchema as s}from"./StorageSchema.js";import{createVisualVariableUniforms as n}from"./VisualVariablesSchema.js";async function l(e,r){const s=r.renderer,l=n(s);return{symbology:await i(e,s),labels:await t(e,r,l)}}async function a(e,r,t,i){const n=t.featureReduction;if(n)switch(n.type){case"binning":return u(n,e,r,t,i);case"cluster":return f(n,e,r,t,i)}const a=d(t.orderBy,t.renderer,t.objectIdField),o=s(t.renderer,r.filters),c=await l(e,t),y=!1;return{storage:o,mesh:{properties:{sortKey:a,timeZone:r.timeZone,returnMeshObjectId:y,displayRefreshVersion:i},strategy:{type:"feature"},factory:c}}}function o(e,r){return e.fields.map((e=>({...e.toJSON(),type:c(e,r)})))}function c(e,r){const{onStatisticExpression:t,onStatisticField:i,statisticType:s}=e;switch(s){case"min":case"max":case"avg":case"avg_angle":case"sum":case"count":return"esriFieldTypeDouble";case"mode":{if(t){const{returnType:e}=t;return e?"string"===e?"esriFieldTypeString":"esriFieldTypeDouble":"esriFieldTypeString"}const e=r.find((e=>e.name===i));return e?e.type:"esriFieldTypeString"}}}async function u(r,l,a,c,u){const f=o(r,c.fields),d=r.renderer,y=await i(l,d),p=s(d,[null,null]),m=n(d),g=await t(l,{geometryType:"polygon",labelingInfo:r.labelingInfo,labelsVisible:r.labelsVisible},m),b=!1,h="geohash"===r.binType?{type:"geohash",fixBinLevel:r.fixedBinLevel??3}:{type:"grid",size:e(r.size),fixedBinLevel:r.fixedBinLevel};return{storage:p,mesh:{properties:{sortKey:null,timeZone:a.timeZone,returnMeshObjectId:b,displayRefreshVersion:u},strategy:{type:"binning",fields:f,index:h,featureFilter:a.filters[0]},factory:{labels:g,symbology:y}}}}async function f(r,l,a,c,u){const f=o(r,c.fields),d={type:"cluster",feature:await i(l,r.effectiveFeatureRenderer),cluster:await i(l,r.effectiveClusterRenderer)},y=n(r.effectiveFeatureRenderer),p={type:"cluster",feature:await t(l,c,y),cluster:await t(l,{geometryType:"point",labelingInfo:r.labelingInfo,labelsVisible:r.labelsVisible},y)},m=!1;return{storage:s(r.effectiveFeatureRenderer,[null,null]),mesh:{properties:{sortKey:null,timeZone:a.timeZone,displayRefreshVersion:u,returnMeshObjectId:m},strategy:{type:"cluster",fields:f,featureFilter:a.filters[0],clusterRadius:e(r.clusterRadius/2)},factory:{labels:p,symbology:d}}}}function d(e,t,i){const s=null!=t&&"unique-value"===t.type&&t.orderByClassesEnabled;if("default"!==e||s||(e=[new r({field:i,order:"descending"})]),"default"!==e&&e.length){e.length;const r=e[0],t="ascending"===r.order?"asc":"desc";return r.field?{field:r.field,order:t}:r.valueExpression?{expression:r.valueExpression,order:t}:null}if(s){return{byRenderer:!0,order:"asc"}}return null}export{a as createSimpleProcessorSchema,o as getAggregateFields};
