/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as t,a as e}from"../../../../../../../chunks/tslib.es6.js";import{location as i,option as o,uniform as s,ComputeVertexInput as l,input as r}from"../../GraphShaderModule.js";import{Vec3 as a,min as p,max as n,Float as u,Mat3 as d,Vec4 as m,ifElse as y,lessThan as h,equal as c,texture2D as x,clamp as v,abs as V,mix as w,distance as f,greaterThan as S,Vec2 as b,negate as g,step as z}from"../../graph/glsl.js";import{MarkerConstants as M}from"./markerConstants.js";import{FeatureVertexInput as C,FeatureFragmentInput as _,AFeatureShader as R}from"../shaders/AFeatureShader.js";import{c256ToRad as j,softEdgeRatio as U}from"../shaders/constants.js";import{distPointTriangle as N,xyToBarycentric as F,inTriangle as D,failHittest as I}from"../shaders/hittestUtils.js";import{MosaicInfo as O}from"../shaders/MosaicInfo.js";import{getBit as k,getBitBool as q,rgba2float as A}from"../shaders/utils.js";import{VisualVariableColor as P}from"../shaders/VisualVariableColor.js";import{VisualVariableOpacity as T}from"../shaders/VisualVariableOpacity.js";import{VisualVariableRotation as G}from"../shaders/VisualVariableRotation.js";import{VisualVariableSizeMinMaxValue as H}from"../shaders/VisualVariableSizeMinMaxValue.js";import{VisualVariableSizeScaleStops as L}from"../shaders/VisualVariableSizeScaleStops.js";import{VisualVariableSizeStops as B}from"../shaders/VisualVariableSizeStops.js";import{VisualVariableSizeUnitValue as E}from"../shaders/VisualVariableSizeUnitValue.js";import{getVisualVariableOpacity as J,getVisualVariableColor as K,getVisualVariableSize as Q,getVisualVariableRotation as W}from"../shaders/vvUtils.js";class X extends C{}t([i(3,m)],X.prototype,"color",void 0),t([i(4,m)],X.prototype,"outlineColor",void 0),t([i(5,b)],X.prototype,"offset",void 0),t([i(6,b)],X.prototype,"textureUV",void 0),t([i(7,m)],X.prototype,"sizing",void 0),t([i(8,u)],X.prototype,"placementAngle",void 0),t([i(9,u)],X.prototype,"sizeRatio",void 0),t([i(10,b)],X.prototype,"zoomRange",void 0);class Y extends l{}t([i(12,b)],Y.prototype,"offsetNextVertex1",void 0),t([i(13,b)],Y.prototype,"offsetNextVertex2",void 0),t([i(14,b)],Y.prototype,"textureUVNextVertex1",void 0),t([i(15,b)],Y.prototype,"textureUVNextVertex2",void 0);class Z extends _{}function $(t,e,i,o){return e.multiply(t.x).add(i.multiply(t.y)).add(o.multiply(t.z))}function tt(t){return t.multiply(t).divide(128)}class et extends R{constructor(){super(...arguments),this.computeAttributes={offset:["offsetNextVertex1","offsetNextVertex2"],textureUV:["textureUVNextVertex1","textureUVNextVertex2"]}}vertex(t,e){const i=tt(t.sizing.x),o=tt(t.sizing.y),s=tt(t.sizing.z),l=t.placementAngle,r=k(t.bitset,M.bitset.isSDF),y=k(t.bitset,M.bitset.isMapAligned),h=k(t.bitset,M.bitset.scaleSymbolsProportionally),c=q(t.bitset,M.bitset.colorLocked),x=J(this,t.id),v=K(this,t.id,t.color,c).multiply(x),V=this.view.displayViewScreenMat3.multiply(new a(t.pos.xy,1)),w=Q(this,t.id,s).divide(s),f=i.multiply(w),S=t.offset.xy.multiply(w);let b=o.multiply(h.multiply(w.subtract(1)).add(1));b=p(b,n(f.subtract(.99),new u(0)));const g=n(b,new u(1)),z=p(b,new u(1)),C=d.fromRotation(l.multiply(j)),_=W(this,t.id),R=this._getViewRotationMatrix(y).multiply(_).multiply(C).multiply(new a(S.xy,0)),U=this.clip(t.id,t.zoomRange),N=new m(V.xy.add(R.xy),U,1),F=t.textureUV.divide(this.mosaicInfo.size),D=t.outlineColor.multiply(z),I=k(t.bitset,M.bitset.overrideOutlineColor),O=t.sizeRatio.multiply(f).multiply(.5);return{glPosition:N,color:v,textureUV:F,outlineColor:D,outlineSize:g,distanceToPx:O,isSDF:r,overrideOutlineColor:I,...this.maybeRunHittest(t,e,{pos:t.pos,size:f,sizeCorrection:w,isMapAligned:y,vvRotationMat3:_,placementMat3:C,outlineSize:g,distanceToPx:O,isSDF:r})}}fragment(t){const e=this._getColor(t.textureUV,t);return this.getFragmentOutput(e,t)}hittest(t,e,i){return y(h(i.size,this.hittestRequest.smallSymbolSizeThreshold),this._hittestSmallMarker(t,e,i),this._hittestMarker(t,e,i))}_getViewRotationMatrix(t){const e=this.view.displayViewMat3,i=this.view.displayMat3,o=new u(1).subtract(t);return e.multiply(t).add(i.multiply(o))}_getViewScreenMatrix(t){const e=this.view.viewMat3.multiply(this.view.tileMat3),i=this.view.tileMat3,o=new u(1).subtract(t);return e.multiply(t).add(i.multiply(o))}_getColor(t,e){return y(c(e.isSDF,new u(1)),this._getSDFColor(t,e),this._getSpriteColor(t,e))}_getSpriteColor(t,e){return x(this.mosaicInfo.texture,t).multiply(e.color)}_getSDFColor(t,e){const i=x(this.mosaicInfo.texture,t),o=new u(.5).subtract(A(i)).multiply(e.distanceToPx).multiply(U),s=v(new u(.5).subtract(o),new u(0),new u(1)),l=e.color.multiply(s);let r=e.outlineSize;this.highlight&&(r=n(r,e.overrideOutlineColor.multiply(4)));const a=r.multiply(.5),p=V(o).subtract(a),d=v(new u(.5).subtract(p),new u(0),new u(1)),m=w(e.outlineColor,e.color,e.overrideOutlineColor).multiply(d);return new u(1).subtract(m.a).multiply(l).add(m)}_hittestSmallMarker(t,e,i){const{position:o,distance:s,smallSymbolDistance:l}=this.hittestRequest,r=s.subtract(l),{viewMat3:p,tileMat3:n}=this.view,u=p.multiply(n).multiply(new a(i.pos,1)).xy,d=i.size.multiply(.5);return f(u,o).subtract(d).add(r)}_hittestMarker(t,e,i){const{pos:o,sizeCorrection:s,isMapAligned:l}=i,r=new a(t.offset.multiply(s),0),p=new a(e.offsetNextVertex1.multiply(s),0),n=new a(e.offsetNextVertex2.multiply(s),0),{viewMat3:u,tileMat3:d}=this.view,m=u.multiply(d).multiply(new a(o,1)),h=this._getViewScreenMatrix(l).multiply(i.vvRotationMat3).multiply(i.placementMat3),c=m.add(h.multiply(r)).xy,x=m.add(h.multiply(p)).xy,v=m.add(h.multiply(n)).xy,V=this.hittestRequest.position,w=this.hittestRequest.distance,f=N(V,c,x,v);return y(S(f,w),f,this._hittestSamples(c,x,v,t,e,i))}_hittestSamples(t,e,i,o,s,l){const{outlineSize:r,isSDF:a,distanceToPx:p}=l,n=this.hittestRequest.position,d=this.hittestRequest.distance,y=F(n.add(new b(g(d),g(d))),t,e,i),h=F(n.add(new b(0,g(d))),t,e,i),c=F(n.add(new b(d,g(d))),t,e,i),x=F(n.add(new b(g(d),0)),t,e,i),v=F(n,t,e,i),V=F(n.add(new b(d,0)),t,e,i),w=F(n.add(new b(g(d),d)),t,e,i),f=F(n.add(new b(0,d)),t,e,i),S=F(n.add(new b(d,d)),t,e,i),M=o.textureUV.divide(this.mosaicInfo.size),C=s.textureUVNextVertex1.divide(this.mosaicInfo.size),_=s.textureUVNextVertex2.divide(this.mosaicInfo.size),R={color:new m(1),outlineColor:new m(1),overrideOutlineColor:new u(1),outlineSize:r,distanceToPx:p,isSDF:a};let j=new u(0);return j=j.add(D(y).multiply(this._getColor($(y,M,C,_),R).a)),j=j.add(D(h).multiply(this._getColor($(h,M,C,_),R).a)),j=j.add(D(c).multiply(this._getColor($(c,M,C,_),R).a)),j=j.add(D(x).multiply(this._getColor($(x,M,C,_),R).a)),j=j.add(D(v).multiply(this._getColor($(v,M,C,_),R).a)),j=j.add(D(V).multiply(this._getColor($(V,M,C,_),R).a)),j=j.add(D(w).multiply(this._getColor($(w,M,C,_),R).a)),j=j.add(D(f).multiply(this._getColor($(f,M,C,_),R).a)),j=j.add(D(S).multiply(this._getColor($(S,M,C,_),R).a)),z(j,new u(.05)).multiply(I(this.hittestRequest))}}t([o(P)],et.prototype,"visualVariableColor",void 0),t([o(T)],et.prototype,"visualVariableOpacity",void 0),t([o(G)],et.prototype,"visualVariableRotation",void 0),t([o(H)],et.prototype,"visualVariableSizeMinMaxValue",void 0),t([o(L)],et.prototype,"visualVariableSizeScaleStops",void 0),t([o(B)],et.prototype,"visualVariableSizeStops",void 0),t([o(E)],et.prototype,"visualVariableSizeUnitValue",void 0),t([s(O)],et.prototype,"mosaicInfo",void 0),t([e(0,r(X)),e(1,r(Y))],et.prototype,"vertex",null),t([e(0,r(Z))],et.prototype,"fragment",null);export{Z as MarkerFragmentInput,et as MarkerShader,X as MarkerVertexInput};
