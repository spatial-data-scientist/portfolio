/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{BufferObject as e}from"./BufferObject.js";import{TextureWrapMode as r,PixelType as t,SizedPixelFormat as o,TextureSamplingMode as n,Usage as i,DataType as s,PrimitiveType as a,BlendFactor as p}from"./enums.js";import{FramebufferObject as c}from"./FramebufferObject.js";import{makePipelineState as m,simpleBlendingParams as l}from"./renderState.js";import{TextureDescriptor as f}from"./TextureDescriptor.js";import{VertexArrayObject as u}from"./VertexArrayObject.js";import{VertexElementDescriptor as _}from"./VertexElementDescriptor.js";import{WebGLDriverTestModule as g}from"./WebGLDriverTestModule.js";class b extends g{constructor(e){if(super(),this._rctx=e,!e.gl)return;if(!(e.capabilities.colorBufferFloat?.textureFloat&&e.capabilities.colorBufferFloat?.floatBlend))return;const r="\n    precision highp float;\n    attribute vec2 a_pos;\n\n    void main() {\n      gl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\n    }\n    ",t="\n     precision highp float;\n\n     void main() {\n      gl_FragColor = vec4(0.5, 0.5, 0.5, 0.5);\n     }\n    ";this._program=e.programCache.acquire(r,t,new Map([["a_pos",0]]))}_test(g){const b=this._rctx,d=new f(1);d.wrapMode=r.CLAMP_TO_EDGE,d.dataType=t.FLOAT,d.internalFormat=o.RGBA32F,d.samplingMode=n.NEAREST;const A=new c(b,d),w=e.createVertex(b,i.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),T=new u(b,new Map([["a_pos",0]]),{geometry:[new _("a_pos",2,s.UNSIGNED_SHORT,0,4)]},{geometry:w});b.gl.getError(),b.useProgram(g);const E=b.getBoundFramebufferObject(),{x:j,y:O,width:x,height:h}=b.getViewport();b.bindFramebuffer(A),b.setViewport(0,0,1,1),b.bindVAO(T),b.drawArrays(a.TRIANGLE_STRIP,0,4);const F=m({blending:l(p.ZERO,p.ONE_MINUS_SRC_ALPHA)});b.setPipelineState(F),b.drawArrays(a.TRIANGLE_STRIP,0,4);const R=b.gl.getError();return b.setViewport(j,O,x,h),b.bindFramebuffer(E),T.dispose(),A.dispose(),R!==b.gl.INVALID_OPERATION||(console.warn("Device claims support for WebGL extension EXT_float_blend but does not support it. Using fall back."),!1)}}export{b as FloatBufferBlend};
