/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import"../../../../geometry.js";import t from"../../../../core/Accessor.js";import{deg2rad as r}from"../../../../core/mathUtils.js";import{property as o}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/has.js";import"../../../../core/Logger.js";import"../../../../core/RandomLCG.js";import{subclass as i}from"../../../../core/accessorSupport/decorators/subclass.js";import{fromRotation as s}from"../../../../core/libs/gl-matrix-2/math/mat4.js";import{create as n}from"../../../../core/libs/gl-matrix-2/factories/mat4f64.js";import{j as p,g as a,z as c,n as l,b as h,k as d,h as u}from"../../../../chunks/vec32.js";import{create as f,fromValues as g,fromArray as m}from"../../../../core/libs/gl-matrix-2/factories/vec3f64.js";import V from"../../../../geometry/Point.js";var S;let v=S=class extends t{constructor(e){super(e)}get observer(){return this.viewshed.observer??new V}get farDistance(){return this.viewshed.farDistance}get farDistanceRenderSpace(){return this.farDistance/this.metersPerUnit}get heading(){return this.viewshed.heading}get tilt(){return this.viewshed.tilt}get tiltParallelToSurface(){return this.tilt-90}get horizontalFieldOfView(){return this.viewshed.horizontalFieldOfView}get verticalFieldOfView(){return this.viewshed.verticalFieldOfView}get observerRenderSpace(){return this._pointToRenderSpace(this.observer,f())}get target(){const e=this.targetRenderSpace;return this.renderSpaceToPoint(e,this.observer.spatialReference)}get targetRenderSpace(){const{leftVector:e,northVector:t,upVector:o}=this,i=this.observerRenderSpace,s=this.farDistanceRenderSpace,n=f();return p(n,t,s),w(n,-r(this.heading),o,n),w(n,-r(this.tiltParallelToSurface),e,n),a(n,i,n),n}get targetDirection(){const e=c(f(),this.targetRenderSpace,this.observerRenderSpace);return l(e,e)}get tiltedUpVector(){const e=w(this.upVector,-r(this.tiltParallelToSurface),this.leftVector,f());return l(e,e)}get _basis(){return this.renderCoordsHelper.basisMatrixAtPosition(this.observerRenderSpace,n())}get upVector(){const e=this._basis;return g(e[8],e[9],e[10])}get northVector(){const e=this._basis;return g(e[4],e[5],e[6])}get leftVector(){const e=this.upVector,t=w(this.northVector,-r(this.heading),e,f());return h(t,e,t)}get rightVector(){return d(f(),this.leftVector)}clone(){return new S({renderCoordsHelper:this.renderCoordsHelper,viewshed:this.viewshed.clone()})}isValid(){return this.viewshed.isValid()}get metersPerUnit(){return this.renderCoordsHelper.spatialReference.metersPerUnit}pointOnSphere(e,t,o){const{observerRenderSpace:i,targetRenderSpace:s}=this,n=c(j,s,i);return w(n,-r(t),this.leftVector,n),w(n,-r(e),this.tiltedUpVector,n),a(o,n,i)}cornerPoints(e,t){const r=this.observerRenderSpace,o=this.horizontalFieldOfView/2,i=this.verticalFieldOfView/2,s=this.pointOnSphere(-o,i,H),n=this.pointOnSphere(o,i,_),l=this.pointOnSphere(-o,-i,x),h=this.pointOnSphere(o,-i,L),d=c(D,s,r),u=c(U,n,r),f=c(T,l,r),g=c(z,h,r),{horizontalFieldOfView:m}=this,V=C;b(d,u,s,l,r,e,m,t.topLeft,t.bottomLeft,V);const S=F;b(g,f,n,h,r,e,m,t.topRight,t.bottomRight,S),p(t.center,a(t.center,S,V),.5)}arcCentersPoints(e,t){const r=this.horizontalFieldOfView/2,o=this.verticalFieldOfView/2,i=this.pointOnSphere(0,o,t.top),s=this.pointOnSphere(0,-o,t.bottom),n=this.pointOnSphere(-r,0,t.left),p=this.pointOnSphere(r,0,t.right),{observerRenderSpace:a}=this;O(i,a,e),O(s,a,e),O(n,a,e),O(p,a,e)}parallelCenterPoints(e){const t=this.observerRenderSpace,o=this.farDistanceRenderSpace*Math.sin(r(this.verticalFieldOfView/2)),i=p(j,this.tiltedUpVector,o);a(e.top,t,i),c(e.bottom,t,i)}renderSpaceToPoint(e,t){const r=j;return this.renderCoordsHelper.fromRenderCoords(e,r,t),new V(r[0],r[1],r[2],t)}_pointToRenderSpace(e,t){const r=m(e.toArray());return this.renderCoordsHelper.toRenderCoords(r,e.spatialReference,t),t}};function b(e,t,r,o,i,s,n,p,c,l){const h=R(e,t,s,P);a(l,i,h),y(r,e,h,s,n,p),y(o,e,h,s,n,c)}function w(e,t,r,o){return s(k,t,r),u(o,e,k)}function R(e,t,r,o){const i=h(o,e,t);return l(i,i),p(i,i,r),i}function y(e,t,r,o,i,s){const n=l(j,t);return p(n,n,o),a(s,e,n),0!==i&&360!==i&&a(s,s,r),s}function O(e,t,r){const o=c(j,e,t);l(o,o),p(o,o,r),a(e,e,o)}e([o()],v.prototype,"renderCoordsHelper",void 0),e([o()],v.prototype,"viewshed",void 0),e([o()],v.prototype,"observer",null),e([o()],v.prototype,"farDistance",null),e([o()],v.prototype,"farDistanceRenderSpace",null),e([o()],v.prototype,"heading",null),e([o()],v.prototype,"tilt",null),e([o()],v.prototype,"tiltParallelToSurface",null),e([o()],v.prototype,"horizontalFieldOfView",null),e([o()],v.prototype,"verticalFieldOfView",null),e([o()],v.prototype,"observerRenderSpace",null),e([o()],v.prototype,"target",null),e([o()],v.prototype,"targetRenderSpace",null),e([o()],v.prototype,"targetDirection",null),e([o()],v.prototype,"tiltedUpVector",null),e([o()],v.prototype,"_basis",null),e([o()],v.prototype,"upVector",null),e([o()],v.prototype,"northVector",null),e([o()],v.prototype,"leftVector",null),e([o()],v.prototype,"rightVector",null),e([o()],v.prototype,"isValid",null),e([o()],v.prototype,"metersPerUnit",null),v=S=e([i("esri.views.3d.analysis.Viewshed.ViewshedComputedData")],v);const j=f(),P=f(),C=f(),F=f(),D=f(),U=f(),T=f(),z=f(),H=f(),_=f(),x=f(),L=f(),k=n();export{v as ViewshedComputedData};
