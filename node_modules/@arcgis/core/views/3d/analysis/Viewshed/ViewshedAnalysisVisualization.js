/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as s}from"../../../../chunks/tslib.es6.js";import i from"../../../../core/Accessor.js";import{destroyHandle as e}from"../../../../core/handleUtils.js";import{mapCollection as o,watch as t}from"../../../../core/reactiveUtils.js";import{property as a}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/has.js";import"../../../../core/Logger.js";import"../../../../core/RandomLCG.js";import{subclass as r}from"../../../../core/accessorSupport/decorators/subclass.js";import l from"./ViewshedVisualization.js";let n=class extends i{get visible(){return this.analysisViewData.visible}constructor(s){super(s)}initialize(){const s=this.analysisViewData,i=o((()=>this.analysisViewData.viewshedComputedDataHandles),(({viewshedComputedData:i})=>{const e=new l({view:this.view,viewshedComputedData:i,analysisViewData:s});return{visualization:e,remove:()=>e.destroy()}}));this._viewshedVisualizations=i,this.addHandles([e(i),t((()=>this.visible),(s=>this._viewshedVisualizations.forEach((({visualization:i})=>i.visible=s))))])}};s([a({constructOnly:!0})],n.prototype,"analysisViewData",void 0),s([a({constructOnly:!0,nonNullable:!0})],n.prototype,"view",void 0),s([a({constructOnly:!0})],n.prototype,"isDecoration",void 0),s([a()],n.prototype,"visible",null),n=s([r("esri.views.3d.analysis.Viewshed.ViewshedAnalysisVisualization")],n);export{n as ViewshedAnalysisVisualization};
