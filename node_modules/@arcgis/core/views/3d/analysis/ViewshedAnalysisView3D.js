/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import s from"../../../core/Accessor.js";import{abortMaybe as i,destroyMaybe as t}from"../../../core/maybe.js";import{mapCollection as o,watch as a,initial as d}from"../../../core/reactiveUtils.js";import{property as r}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/RandomLCG.js";import{subclass as l}from"../../../core/accessorSupport/decorators/subclass.js";import{AnalysisView3D as n}from"./AnalysisView3D.js";import{ViewshedAnalysisVisualization as h}from"./Viewshed/ViewshedAnalysisVisualization.js";import{ViewshedComputedData as p}from"./Viewshed/ViewshedComputedData.js";import m from"./Viewshed/ViewshedTool.js";import{Viewshed as w}from"../webgl-engine/lib/Viewshed.js";import{connectAnalysisViewToTool as c,removeAnalysisViewTool as u,activateAnalysisViewTool as V}from"../../analysis/analysisViewUtils.js";let v=class extends(n(s)){constructor(e){super(e),this.type="viewshed-view-3d",this.analysis=null,this.tool=null,this.viewshedComputedDataHandles=null,this._placementTask=null}get selectedViewshed(){return this.tool?.selectedViewshed}set selectedViewshed(e){const{tool:s}=this;null!=s&&(s.selectedViewshed=e)}get selectedViewshedComputedData(){return this.tool?.selectedViewshedComputedData}initialize(){this._initializeUpdateHandle(),this.viewshedComputedDataHandles=o((()=>this.analysis.viewsheds),(e=>{const s=new p({renderCoordsHelper:this.view.renderCoordsHelper,viewshed:e}),i=Symbol();return this.addHandles(a((()=>s.isValid()),((e,i)=>{this.visible&&(e?this._addViewshedsToRenderer(s):i&&this._removeViewshedsFromRenderer(s))}),d)),{viewshedComputedData:s,remove:()=>{this.removeHandles(i),this._removeViewshedsFromRenderer(s),s.destroy()}}})),this._analysisVisualization=new h({view:this.view,analysisViewData:this,isDecoration:!this.parent}),this.addHandles([a((()=>this.visible),(e=>{const s=this.viewshedComputedDataHandles.map((e=>e.viewshedComputedData)).filter((e=>e.isValid()));e?this._addViewshedsToRenderer(s):this._removeViewshedsFromRenderer(s)})),a((()=>this.view.renderCoordsHelper),(e=>{this.viewshedComputedDataHandles.forEach((({viewshedComputedData:s})=>s.renderCoordsHelper=e))})),c(this,m)])}destroy(){this._placementTask=i(this._placementTask),u(this),this._analysisVisualization=t(this._analysisVisualization),this._removeViewshedsFromRenderer(this.viewshedComputedDataHandles.map((e=>e.viewshedComputedData)))}async createViewsheds(e){return this._placementTask=i(this._placementTask),this._placementTask=V(this,e),null!=this.tool&&this.tool.createViewsheds(),await this._placementTask.promise}_initializeUpdateHandle(){const e=this.view._stage.renderer.plugins.plugins.find((e=>e instanceof w));e&&(this._updateHandleInRenderer=e.updateViewsheds.bind(e))}_addViewshedsToRenderer(e){this._updateHandleInRenderer({adds:e})}_removeViewshedsFromRenderer(e){this._updateHandleInRenderer({removes:e})}};e([r({readOnly:!0})],v.prototype,"type",void 0),e([r({constructOnly:!0,nonNullable:!0})],v.prototype,"analysis",void 0),e([r()],v.prototype,"tool",void 0),e([r()],v.prototype,"selectedViewshed",null),e([r()],v.prototype,"selectedViewshedComputedData",null),e([r()],v.prototype,"viewshedComputedDataHandles",void 0),e([r()],v.prototype,"_analysisVisualization",void 0),e([r()],v.prototype,"_placementTask",void 0),v=e([l("esri.views.3d.analysis.ViewshedAnalysisView3D")],v);const y=v;export{y as default};
