/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import"../../../../geometry.js";import{screenPointObjectToArray as e,castScreenPointArray as n,createScreenPointArray as r}from"../../../../core/screenUtils.js";import{l as t,c as o,b as l,f as s,m as c,j as a,g as i}from"../../../../chunks/vec32.js";import{create as u}from"../../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{projectPoint as p}from"../../../../geometry/projection.js";import{intersectRay as m,create as d,getNormal as f,fromPositionAndNormal as g}from"../../../../geometry/support/plane.js";import{create as E,closestPoints as y}from"../../../../geometry/support/ray.js";import{projectPoint as S}from"../../../../geometry/support/vector.js";import{sv2d as j}from"../../../../geometry/support/vectorStacks.js";import{getZForElevationMode as R}from"../../../../support/elevationInfoUtils.js";import{fromScreen as v}from"../../support/geometryUtils/ray.js";import{newIntersector as x}from"../../webgl-engine/lib/Intersector.js";import{StoreResults as b,IntersectorType as w}from"../../webgl-engine/lib/IntersectorInterfaces.js";import{terrainId as I}from"../../webgl-engine/lib/verticalOffsetUtils.js";import{EventPipeline as H}from"../../../interactive/dragEventPipeline.js";import U from"../../../../geometry/Point.js";function O(e,n){return P(e,(()=>n))}function C(e){return P(e,(e=>e.plane))}function P(r,t){const o=u(),l=u();let s=!1;return c=>{const a=t(c);if("start"===c.action){const t=e(c.screenStart,n(j.get())),l=v(r.state.camera,t,K);null!=l&&(s=m(a,l,o))}if(!s)return null;const i=e(c.screenEnd,n(j.get())),u=v(r.state.camera,i,K);return null==u?null:m(a,u,l)?{...c,renderStart:o,renderEnd:l,plane:a,ray:u}:null}}function T(e,n,t=0,o=null,l=null){let s=null;return c=>{if("start"===c.action&&(s=e.sceneIntersectionHelper.intersectElevationFromScreen(r(c.screenStart.x,c.screenStart.y),n,t,l),null!=s&&null!=o&&!p(s,s,o)))return null;if(null==s)return null;const a=e.sceneIntersectionHelper.intersectElevationFromScreen(r(c.screenEnd.x,c.screenEnd.y),n,t,l);return null!=a&&(null==o||p(a,a,o))?{...c,mapStart:s,mapEnd:a}:null}}function D(e,n,r,t=null,o=null){return T(e,r,R(n,e,r),t,o)}function M(e,n,r,t){const o=r.toMap(e.screenStart);return null!=o?D(n,o,r.elevationInfo,t):null}function N(e,n){const r=B,t=J,o=d();e.renderCoordsHelper.worldUpAtPosition(n,r);const c=l(f(o),r,s(t,n,e.state.camera.eye));return l(c,c,r),g(n,c,o)}function G(e,n,r){let t=null;const o=new H;return o.next(O(e,N(e,n))).next(h(e,n)).next(A(e,r)).next((e=>{e.mapEnd.x=e.mapStart.x,e.mapEnd.y=e.mapStart.y,t=e})),e=>(t=null,o.execute(e),t)}function h(e,n){const r=u(),l=t(n);e.renderCoordsHelper.worldUpAtPosition(n,r);const p=u(),m=u(),d=o=>{if(s(o,o,n),S(r,o,o),"global"===e.viewingMode){t(o)*Math.sign(c(r,o))<.001-l&&s(o,a(o,r,.001),n)}return i(o,o,n),o};return e=>(e.renderStart=d(o(p,e.renderStart)),e.renderEnd=d(o(m,e.renderEnd)),e)}function k(r,t){const o=o=>{const l=e(o,n(j.get())),s=v(r.state.camera,l,K);return null==s?null:y(t,s,B,J)[1]};return e=>{const n=o(e.screenStart);if(null==n)return null;const r=o(e.screenEnd);return null==r?null:{...e,renderStart:n,renderEnd:r}}}function A(e,n){const r=e.renderCoordsHelper;return e=>{const t=r.fromRenderCoords(e.renderStart,new U({spatialReference:n})),o=r.fromRenderCoords(e.renderEnd,new U({spatialReference:n}));return null!=t&&null!=o?{...e,mapStart:t,mapEnd:o}:null}}var F;function q(e){let n=null;return r=>{switch(r.action){case"start":n=e.disableDisplay();break;case"end":case"cancel":null!=n&&(n.remove(),n=null)}return r}}function z(n,t=null){const o=x(n.state.viewingMode);o.options.selectionMode=!0,o.options.store=b.MIN,o.options.hud=!1;const l=r(),s={requiresGroundFeedback:!0,enableDraped:!0,exclude:new Set},c=u(),a=t??n.spatialReference,i=r=>{n.map.ground&&n.map.ground.opacity<1?s.exclude.add(I):s.exclude.delete(I),n.sceneIntersectionHelper.intersectIntersectorScreen(e(r,l),o,s);const t=o.results.min;let i;if(t.getIntersectionPoint(c))i=t.intersector===w.TERRAIN?F.GROUND:F.OTHER;else{if(!o.results.ground.getIntersectionPoint(c))return null;i=F.GROUND}return{location:n.renderCoordsHelper.fromRenderCoords(c,new U({spatialReference:a})),surfaceType:i}};let p;return e=>{if("start"===e.action){const n=i(e.screenStart);p=null!=n?n.location:null}if(null==p)return null;const n=i(e.screenEnd);return null!=n?.location?{...e,mapStart:p,mapEnd:n.location,surfaceType:n.surfaceType}:null}}!function(e){e[e.GROUND=0]="GROUND",e[e.OTHER=1]="OTHER"}(F||(F={}));const B=u(),J=u(),K=E();export{F as SurfaceType,A as convertToMapCoordinates,q as hideManipulatorWhileDragging,h as projectToWorldUp,z as screenToMap3D,D as screenToMapXYAtLocation,M as screenToMapXYForManipulatedObject,O as screenToRenderPlane,C as screenToRenderPlaneFromEvent,k as screenToRenderRay,G as screenToZConstrained};
