/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../chunks/tslib.es6.js";import"../../../../../geometry.js";import t from"../../../../../core/Accessor.js";import{removeUnordered as i}from"../../../../../core/arrayUtils.js";import{unitRGBAFromColor as a}from"../../../../../core/colorUtils.js";import"../../../../../core/has.js";import n from"../../../../../core/Evented.js";import o from"../../../../../core/Handles.js";import{handlesGroup as s,makeHandle as r,destroyHandle as l}from"../../../../../core/handleUtils.js";import{destroyMaybe as p,removeMaybe as d}from"../../../../../core/maybe.js";import{watch as h,initial as u,on as c}from"../../../../../core/reactiveUtils.js";import{property as m}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/Logger.js";import{subclass as g}from"../../../../../core/accessorSupport/decorators/subclass.js";import{IDENTITY as _}from"../../../../../core/libs/gl-matrix-2/factories/mat4f64.js";import{l as f,f as v,o as M,s as b,g as x,j as y}from"../../../../../chunks/vec32.js";import{fromValues as O,create as E}from"../../../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{UpdatingHandles as j}from"../../../../../core/support/UpdatingHandles.js";import I from"../../../../../geometry/Polyline.js";import{makeDehydratedPoint as S}from"../../../../../layers/graphics/dehydratedPoint.js";import{isVolumetricSymbol as H}from"../../../../../symbols/support/utils.js";import{Manipulator3D as w}from"../../Manipulator3D.js";import{createManipulatorMaterial as V,createManipulatorOutlineMaterial as T,placeAtObject as A}from"../../manipulatorUtils.js";import{RenderObject as G}from"../../RenderObject.js";import{SegmentLabels3D as D}from"../../SegmentLabels3D.js";import{SnappingVisualizer3D as L}from"../../SnappingVisualizer3D.js";import{screenToMapXYAtLocation as P,screenToRenderPlaneFromEvent as C,convertToMapCoordinates as N}from"../dragEventPipeline3D.js";import{orientation as U}from"../geometryUtils.js";import{ManipulatorType as k}from"../ManipulatorType.js";import{canMoveZOperations as R}from"../manipulatorUtils.js";import{Settings as F}from"../settings.js";import{createVisualElements as z}from"../visualElementUtils.js";import{discRadiusSmall as Z}from"../manipulations/config.js";import{ManipulationType as X,MoveManipulation as Y}from"../manipulations/MoveManipulation.js";import{MoveXYObjectManipulation as q}from"../manipulations/MoveXYObjectManipulation.js";import{createEdgeOffsetIntersectionPlane as W,createEdgeOffsetOperation as K,edgeOffsetRotationMatrix as B,screenEdgeLengthSquared as J}from"./edgeOffsetUtils.js";import{createTooltipInfos as Q,connectTooltipToManipulatedObject as $,getUpdatedTranslateObjectTooltipInfo as ee,getUpdatedEdgeOffsetTooltipInfo as te}from"./reshapeTooltipUtils.js";import{OutlineVisualElement as ie}from"../../visualElements/OutlineVisualElement.js";import{createExtrudedTriangle as ae,createSphereGeometry as ne}from"../../../webgl-engine/lib/GeometryUtil.js";import{MouseButton as oe}from"../../../../input/IViewEvents.js";import{sceneSnappingAtLocation as se,addMapDelta as re,createManipulatorDragEventPipeline as le,dragAtLocation as pe,addScreenDelta as de}from"../../../../interactive/dragEventPipeline.js";import{ManipulatorStateCustomFlags as he,ManipulatorStateFlags as ue}from"../../../../interactive/interfaces.js";import{AccumulationBehavior as ce}from"../../../../interactive/editGeometry/interfaces.js";import{SnappingContext as me}from"../../../../interactive/snapping/SnappingContext.js";import{createSnapDragEventPipelineStep as ge}from"../../../../interactive/snapping/SnappingDragPipelineStep.js";import{Tooltip as _e}from"../../../../interactive/tooltip/Tooltip.js";import fe from"../../../../../geometry/SpatialReference.js";const ve=Symbol();let Me=class extends t{get grabbingOrDragging(){return this._numGrabbing+this._numDragging>0}get _operations(){return this.object.operations}constructor(e){super(e),this._selectedIndex=0,this._manipulatorHandles=new o,this._manipulatorInfos=[],this._numGrabbing=0,this._numDragging=0,this._reshapeEventState=Se.NONE,this._updatingHandles=new j,this._recreatingManipulators=!1,this._settings=new F({getTheme:()=>this.view.effectiveTheme}),this.events=new n,this.activeTooltipInfo=null,this._vertexLaserLineVisualElement=null}initialize(){const{view:e}=this,t=this._settings.manipulators,i=t.vertex;this.tooltipInfos=Q(this._sketchOptions,e),this._vertexManipulatorMaterial=V(a(i.color),i.renderOccluded),this._vertexManipulatorOutlineMaterial=T(a(i.outlineColor),i.renderOccluded),this._vertexManipulatorHoverOutlineMaterial=T(a(i.hoverOutlineColor),i.renderOccluded);const n=t.edge;this._edgeManipulatorMaterial=V(a(n.color),n.renderOccluded),this._edgeManipulatorOutlineMaterial=T(a(n.outlineColor),n.renderOccluded);const o=t.edgeOffset;this._edgeOffsetManipulatorMaterial=V(a(o.color),o.renderOccluded,!1),this._edgeOffsetManipulatorHoverMaterial=V(a(o.hoverColor),o.renderOccluded,!1);const s=t.selected;this._selectedManipulatorMaterial=V(a(s.color),s.renderOccluded),this._selectedManipulatorOutlineMaterial=T(a(s.outlineColor),s.renderOccluded),this._selectedManipulatorHoverOutlineMaterial=T(a(s.hoverOutlineColor),s.renderOccluded),this.tooltip=new _e({view:e}),this.addHandles([h((()=>{const e=this._settings.manipulators;return{vertexSettings:e.vertex,edgeSettings:e.edge,edgeOffsetSettings:e.edgeOffset,selectedSettings:e.selected}}),(({vertexSettings:e,edgeSettings:t,edgeOffsetSettings:i,selectedSettings:a})=>{e.applyColor(this._vertexManipulatorMaterial),e.applyOutline(this._vertexManipulatorOutlineMaterial),e.applyHoverOutline(this._vertexManipulatorHoverOutlineMaterial),t.applyColor(this._edgeManipulatorMaterial),t.applyOutline(this._edgeManipulatorOutlineMaterial),i.applyColor(this._edgeOffsetManipulatorMaterial),i.applyHover(this._edgeOffsetManipulatorHoverMaterial),a.applyColor(this._selectedManipulatorMaterial),a.applyOutline(this._selectedManipulatorOutlineMaterial),a.applyHoverOutline(this._selectedManipulatorHoverOutlineMaterial)})),h((()=>this.object.visible),(e=>{for(const t of this._manipulatorInfos)t.manipulator.available=e,"edge"===t.type&&"edgeManipulator"in t&&(t.edgeManipulator.available=e)})),h((()=>this._numGrabbing+this._numDragging===0),(e=>this._toggleAutoHideManipulators(e))),h((()=>({labels:this._segmentLabels,enabled:this._sketchOptions.labels.enabled,edgeOffsetEnabled:this.enableEdgeOffset})),(({labels:e,enabled:t,edgeOffsetEnabled:i})=>{null!=e&&(e.visible=t,e.edgeDistance=i?"far":"default")}),u),$(this.tooltip,this.object,(()=>this._tooltipsContext)),c((()=>this._operations),"vertex-update",(e=>{this._updateManipulatorPositions(e.vertices)}),{onListenerAdd:()=>this._recreateManipulators()}),c((()=>this._operations?.data),"change",(e=>{"undo"!==e.operation&&"redo"!==e.operation||this._recreateManipulators()}))])}destroy(){this._segmentLabels=p(this._segmentLabels),this.tooltip=p(this.tooltip),this._removeManipulators(),this._updatingHandles.destroy()}get updating(){return this._updatingHandles.updating}get manipulators(){return this.tool.manipulators}get view(){return this.tool.view}get object(){return this.tool.object}get enableZShape(){return this.tool.enableZShape}get enableDeleteVertices(){return this.tool.enableDeleteVertices}get enableZVertex(){return this.tool.enableZVertex}get autoHideManipulators(){return this.tool.autoHideManipulators}get enableMoveObject(){return this.tool.enableMoveObject}get enableMidpoints(){return this.tool.enableMidpoints}get enableEdgeOffset(){return this.tool.enableEdgeOffset}get _sketchOptions(){return this.tool.sketchOptions}get _accentColor(){return this.view.effectiveTheme.accentColor}removeSelectedVertices(){const e=this._manipulatorInfos.filter((e=>e.manipulator.selected&&"vertex"===e.type));return this._removeVertices(e),e.length}onManipulatorSelectionChanged(){this.events.emit("manipulators-changed")}_removeManipulators(){this._manipulatorHandles.removeAll(),this._moveManipulation=p(this._moveManipulation),this._objectMoveManipulation=p(this._objectMoveManipulation),this.manipulators.removeAll(),this._manipulatorInfos=[],this._numGrabbing=0,this._numDragging=0}_createManipulators(e){if(null==this._operations)return;const t=this.object.elevationInfo;for(const i of this._operations.data.components){const a=e?.byComponentIndex.get(i.index);for(const e of i.vertices){const i=a?.has(e.index);this._createVertexOrEdgeManipulator(e,t,i)}for(const e of i.edges)this._createVertexOrEdgeManipulator(e,t)}this._createObjectMoveManipulation(),this._createMoveManipulation(t),this._createVisualElements()}get canRedo(){return null!=this._operations&&this._operations.canRedo}get canUndo(){return null!=this._operations&&this._operations.canUndo}redo(){return this._operations?.redo()}undo(){return this.events.emit("undo"),this._operations?.undo()}_recreateManipulators(){if(!this._recreatingManipulators){if(this._recreatingManipulators=!0,this._removeManipulators(),this._resetTooltip(),this._operations&&this._segmentLabels?.context?.editGeometryOperations===this._operations||(this._segmentLabels=p(this._segmentLabels)),this._createManipulators(),!this._segmentLabels&&this._operations){const e=this._sketchOptions.labels;this._segmentLabels=new D({context:{view:this.view,editGeometryOperations:this._operations,elevationInfo:this.object.elevationInfo,labelOptions:e},visible:e.enabled})}this._recreatingManipulators=!1}}_perObjectManipulatorDragAction(e,t){if("end"===t.action)return t;let i=0;const a=[],n=this._manipulatorInfos.some((e=>"vertex"===e.type&&e.manipulator.selected)),o=e===He.SELECTED_OR_ALL&&n;for(const s of this._manipulatorInfos)"vertex"===s.type&&(s.manipulator.grabbing||o&&!s.manipulator.selected||a.push(s),i++);this._moveVertices(a,t);if(a.length===i){if(this._updateEventState(Se.MOVING),this.destroyed)return t;this.events.emit("move",{type:"move",dx:t.screenDeltaX,dy:t.screenDeltaY,object:this.object})}else{if(this._updateEventState(Se.RESHAPING),this.destroyed)return t;this.events.emit("reshape",{type:"reshape",object:this.object})}return t}_toggleAutoHideManipulators(e){this.autoHideManipulators&&(e?this.removeHandles(ve):this.tool.manipulators.forEach((({manipulator:e})=>{const t=e.disableDisplay?.();t&&this.addHandles(t,ve)})))}_isMultiVertexSelection(){return this._manipulatorInfos.reduce(((e,t)=>"vertex"===t.type&&t.manipulator.selected?e+1:e),0)>1}_perVertexManipulatorDragAction(e){if(this._updateEventState(Se.RESHAPING),this.destroyed)return;const{mapDeltaX:t,mapDeltaY:i,mapDeltaZ:a}=e;if(!t&&!i&&!a)return;const n=[];for(const o of this._manipulatorInfos)"vertex"===o.type&&(o.manipulator.selected&&!o.manipulator.grabbing||o===e.info)&&n.push(o);this._moveVertices(n,e,ce.ACCUMULATE_STEPS),this.events.emit("reshape",{type:"reshape",object:this.object})}_updateEventState(e){if(e===this._reshapeEventState)return!1;switch(e){case Se.NONE:if(0!==this._numGrabbing||0!==this._numDragging)return!1;switch(this._reshapeEventState){case Se.MOVING:this.events.emit("move",{type:"move-stop",dx:0,dy:0,object:this.object});break;case Se.RESHAPING:this.events.emit("reshape",{type:"reshape-stop",object:this.object})}break;case Se.MOVING:switch(this._reshapeEventState){case Se.NONE:this.events.emit("move",{type:"move-start",dx:0,dy:0,object:this.object});break;case Se.RESHAPING:this.events.emit("reshape",{type:"reshape-stop",object:this.object}),this.destroyed||this.events.emit("move",{type:"move-start",dx:0,dy:0,object:this.object})}break;case Se.RESHAPING:switch(this._reshapeEventState){case Se.NONE:this.events.emit("reshape",{type:"reshape-start",object:this.object});break;case Se.MOVING:this.events.emit("move",{type:"move-stop",dx:0,dy:0,object:this.object}),this.destroyed||this.events.emit("reshape",{type:"reshape-start",object:this.object})}}if(this.destroyed)return!1;const t=this._reshapeEventState!==e;return this._reshapeEventState=e,t}_createObjectMoveManipulation(){const{tool:e,view:t,object:i,_operations:a}=this;if(a){if(this._objectMoveManipulation=new q({tool:e,view:t,object:i}),this.enableMoveObject){let e=null;this._manipulatorHandles.add(this._objectMoveManipulation.createDragPipeline(((t,i,n)=>{i.next((e=>this._trackNumDragging(e))).next((t=>("start"===t.action&&(e=a.createUndoGroup()),t))).next((e=>this._perObjectManipulatorDragAction(He.ALL,e))).next((e=>(this._updateTranslateObjectTooltip(X.XY,e),e))).next((t=>{"end"===t.action&&(this._resetTooltip(),e=d(e))})),n.next((()=>this._onDragCancel(!0,(()=>e=d(e)))))}))),this._objectMoveManipulation.forEachManipulator((e=>this._manipulatorHandles.add(this._watchAndUpdateGrabState(e,!1))))}else this._objectMoveManipulation.forEachManipulator((e=>{e.grabbable=!1,e.cursor=null}));this._objectMoveManipulation.forEachManipulator((e=>this._manipulatorHandles.add(e.events.on("immediate-click",(e=>{this._manipulatorInfos.some((e=>e.manipulator.selected))?this._clearSelection():this.events.emit("immediate-click",{...e,object:this.object}),e.stopPropagation()})))))}}_createMoveManipulation(e){const{object:t,tool:i,view:a,_operations:n}=this;if(!n)return;this._moveManipulation=new Y({tool:i,view:a,xyAvailable:!0,xyAxisAvailable:!0,zAvailable:this.enableZShape&&R(t.operations,t.elevationInfo),snapToScene:!1,radius:Y.radiusForSymbol(t.graphic?.symbol)}),this._moveManipulation.forEachManipulator((e=>this.addHandles([e.events.on("immediate-click",(t=>{this._moveManipulation.zManipulation.hasManipulator(e)||this._manipulatorInfos.some((e=>e.manipulator.selected))||this.events.emit("immediate-click",{...t,object:this.object}),t.stopPropagation()})),this._watchAndUpdateGrabState(e,!1)])));const o=e=>t=>{this.addHandles(t.events.on("focus-changed",(({action:t})=>{"focus"===t?this._updateTranslateTooltip(e):this._resetTooltip()})))};this._moveManipulation.xyManipulation.forEachManipulator(o(X.XY)),this._moveManipulation.xyAxisManipulation.forEachManipulator(o(X.XY_AXIS)),this._moveManipulation.zManipulation.forEachManipulator(o(X.Z)),this._moveManipulation.elevationInfo={mode:"absolute-height",offset:0};const s=n.data.spatialReference;this.addHandles([this._moveManipulation.createDragPipeline(((a,o,s,r,l)=>{const{snappingStep:p,cancelSnapping:d}=ge({predicate:e=>!!e.info,snappingManager:i.snappingManager,snappingContext:new me({editGeometryOperations:n,elevationInfo:e,pointer:l,excludeFeature:t.graphic,visualizer:new L}),updatingHandles:this._updatingHandles,useZ:!1});return r=r.next((e=>(this._onDragCancel(),e))).next(d),{steps:s=s.next((e=>this._trackNumDragging(e))).next((e=>{const t=this._manipulatorInfos.filter((e=>"vertex"===e.type&&e.manipulator.selected));return e.manipulatorType===k.TRANSLATE_XY&&1===t.length?{...e,info:t[0],snapOrigin:t[0].handle.pos}:e})).next(se(this.view,e,t.graphic??void 0)).next(...p).next(re()).next((e=>this._perObjectManipulatorDragAction(He.SELECTED_OR_ALL,e))).next((e=>(this._updateTranslateTooltip(a,e),e))),cancel:r}}),e,s,t.graphic),h((()=>t.visible),(()=>this._updateMoveManipulationPosition()),u),t.on("committed",(()=>{this._recreatingManipulators||this._updateMoveManipulationPosition()})),h((()=>t.isDraped),(e=>{this._updateMoveManipulationPosition();const t="align-move-manipulation";e?this.addHandles(this.view.elevationProvider.on("elevation-change",(()=>this._updateMoveManipulationPosition())),t):this.removeHandles(t)}),u)])}_createVisualElements(){const{object:e,view:t}=this,i=z({view:t,object:e,forEachManipulator:e=>{if(!this.destroyed&&!this._recreatingManipulators){this._objectMoveManipulation.forEachManipulator(e),this._moveManipulation.forEachManipulator(e);for(const t of this._manipulatorInfos)e(t.manipulator,k.TRANSLATE_XY)}},onManipulatorsChanged:e=>this.events.on("manipulators-changed",e)});null!=i&&(this._outlineVisualElement=i.visualElement instanceof ie?i.visualElement:null);const a=this._outlineVisualElement;if(null!=a){const t=()=>{e.isDraped||this._updateMoveManipulationPosition()};this._manipulatorHandles.add(c((()=>a.events),"attachment-origin-changed",t,{onListenerAdd:t}))}this._manipulatorHandles.add(i)}_createEdgeOffsetManipulator(e,t=this.object.elevationInfo){const i=this._operations;if(e.component.vertices.length<=2||!i)return null;const a=this._settings.manipulators.edgeOffset,n=a.size/2,o=n+a.collisionPadding,r=n/o,l=r*Math.sqrt(3)/2;null==this._edgeOffsetManipulatorGeometryInside&&(this._edgeOffsetManipulatorGeometryInside=ae(this._edgeOffsetManipulatorMaterial,l,r/2,r/2,a.height,a.offset)),null==this._edgeOffsetManipulatorGeometryOutside&&(this._edgeOffsetManipulatorGeometryOutside=ae(this._edgeOffsetManipulatorMaterial,-l,r/2,r/2,a.height,-a.offset));const p=[new G(this._edgeOffsetManipulatorGeometryInside.instantiate(),ue.Unfocused),new G(this._edgeOffsetManipulatorGeometryInside.instantiate({material:this._edgeOffsetManipulatorHoverMaterial}),ue.Focused),new G(this._edgeOffsetManipulatorGeometryOutside.instantiate(),ue.Unfocused),new G(this._edgeOffsetManipulatorGeometryOutside.instantiate({material:this._edgeOffsetManipulatorHoverMaterial}),ue.Focused)],d=new w({view:this.view,renderObjects:p,elevationInfo:"on-the-ground"!==t.mode||H(this.object.graphic?.symbol)?{mode:"absolute-height",offset:0}:t,worldOriented:!1,focusMultiplier:1,radius:o,available:this.object.visible,collisionType:{type:"disc",direction:O(0,0,1)},collisionPriority:1,metadata:{deleting:!1}}),h=new w({view:this.view,worldSized:!0,worldOriented:!1,available:this.object.visible,collisionPriority:-10,cursor:this.enableMoveObject?"move":"default",metadata:{deleting:!1}}),u={manipulator:d,handle:e,locationUpdateHandle:null,type:"edge",selectedIndex:0,edgeManipulator:h,elevationInfo:t,visibilityHandle:null};this._autoHideEdgeOffsetManipulator(u,a.minSquaredEdgeLength),this._updateEdgeOffsetManipulator(u);const c=[];for(const s of[e.leftVertex,e.rightVertex]){const e=this._getManipulatorInfoFromHandle(s);null!=e&&c.push(e.manipulator.events.on("location-update",(()=>this._updateEdgeOffsetManipulator(u))))}u.locationUpdateHandle=s(c),this._manipulatorHandles.add(u.locationUpdateHandle,d),this._manipulatorHandles.add([this._watchAndUpdateGrabState(d,!0),this._watchAndUpdateGrabState(h,!0)],d),this._manipulatorHandles.add(le(d,this._createEdgeOffsetPipeline(u,t)),d),this._manipulatorHandles.add(le(h,((e,a,n,o)=>{if("touch"===o){this._createEdgeOffsetPipeline(u,t)(e,a,n)}else if(this.enableMoveObject){const o=this.object.graphic,s=i.data.spatialReference;a.next((e=>this._trackNumDragging(e))).next(pe(this.view,e.elevationAlignedLocation)).next(P(this.view,e.elevationAlignedLocation,t,s,o)).next(de()).next(re()).next((e=>this._perObjectManipulatorDragAction(He.ALL,e))).next((e=>(this._updateTranslateObjectTooltip(X.XY,e),e))).next((e=>{"end"===e.action&&this._resetTooltip()})),n.next((()=>this._onDragCancel(!e.metadata.deleting)))}})),d);const m=e=>{this._manipulatorInfos.some((e=>e.manipulator.selected))?this._clearSelection():this.events.emit("immediate-click",{...e,object:this.object}),e.stopPropagation()};return this._manipulatorHandles.add([d.events.on("immediate-click",m),h.events.on("immediate-click",m),d.events.on("focus-changed",(({action:e})=>{"focus"===e?this._updateEdgeOffsetTooltip(null):this._resetTooltip()}))],d),this._manipulatorInfos.push(u),this.manipulators.add(d),this.manipulators.add(h),this.events.emit("manipulators-changed"),u}_autoHideEdgeOffsetManipulator(e,t){const i=e.manipulator,a=e.edgeManipulator,n=()=>{e.visibilityHandle=d(e.visibilityHandle);const n=this._getManipulatorInfoFromHandle(e.handle.leftVertex),o=this._getManipulatorInfoFromHandle(e.handle.rightVertex),l=null!=n&&null!=o&&J(n.manipulator.renderLocation,o.manipulator.renderLocation,this.view.state.camera)<t;(!i.focused&&!a.focused||l)&&(i.grabbable=!l,a.grabbable=!l,e.visibilityHandle=s([i.disableDisplay(),r((()=>{i.grabbable=!0,a.grabbable=this.enableMoveObject}))]))};this._manipulatorHandles.add([i.events.on("focus-changed",n),a.events.on("focus-changed",n),r((()=>{d(e.visibilityHandle),a.metadata.deleting=!0,this.manipulators.remove(a)}))],i),n()}_updateEdgeOffsetManipulator(e){if(!this._operations)return;this._updateManipulatorPosition(e);const{coordinateHelper:t}=this._operations.data,i=W(this.view,e.manipulator.elevationAlignedLocation,K(t,e.handle,e.manipulator.elevationInfo)),a=this._getManipulatorInfoFromHandle(e.handle.leftVertex),n=this._getManipulatorInfoFromHandle(e.handle.rightVertex);if(null==a||null==n)return;const o=a.manipulator.renderLocation,s=n.manipulator.renderLocation,r=null!=i?B(i,o,s):_;e.manipulator.modelTransform=r,e.edgeManipulator.elevationAlignedLocation=e.manipulator.elevationAlignedLocation,e.edgeManipulator.modelTransform=r;const l=f(v(Ee,o,s))/2;e.edgeManipulator.collisionType={type:"line",paths:[[[-l,0,0],[l,0,0]]]}}_createEdgeOffsetPipeline(e,t){return(i,a,n)=>{const o=this._operations;if(!o)return;this._clearSelection();const{step:s,cleanup:r}=this._initializeEdgeOffset(e,t,o);a.next((e=>this._trackNumDragging(e))).next(pe(this.view,i.elevationAlignedLocation)).next(s).next(C(this.view)).next(N(this.view,o.data.spatialReference)).next(re()).next(be()).next(this._applyEdgeOffsetStep(e)).next(this._showEdgeOffsetTooltip()).next((e=>{"end"===e.action&&r()})),n.next((()=>{i.metadata.deleting||(r(),this._onDragCancel())}))}}_initializeEdgeOffset(e,t,i){const{view:n}=this,o=K(i.data.coordinateHelper,e.handle,t),r=i.createUndoGroup(),p=W(n,e.manipulator.elevationAlignedLocation,o);if(o.requiresSplitEdgeLeft){const t=this._getManipulatorInfoFromHandle(e.handle.leftVertex.leftEdge);null!=t&&this._splitEdgeManipulator(t,1)}if(o.requiresSplitEdgeRight){const t=this._getManipulatorInfoFromHandle(e.handle.rightVertex.rightEdge);null!=t&&this._splitEdgeManipulator(t,0)}const c=()=>new I({paths:[[e.handle.leftVertex.pos,e.handle.rightVertex.pos]],spatialReference:i.data.spatialReference}),m=this._settings,g=new ie({view:n,isDraped:this.object.isDraped,geometry:c(),elevationInfo:e.elevationInfo,width:m.visualElements.lineObjects.outline.width,attached:!1,isDecoration:!0});let _;const f=()=>{this._cleanEdgeOffsetCollapsedEdges(e),_=d(_)},v=this.events.on("undo",f);return _=s([h((()=>a(this._accentColor)),(e=>g.color=e),u),l(g),h((()=>this.object.isDraped),(e=>g.isDraped=e)),this.object.on("committed",(()=>g.geometry=c())),r,v]),g.attached=!0,{step:e=>null==o||null==p?(f(),null):{...e,operation:o,plane:p},cleanup:f}}_applyEdgeOffsetStep(e){return t=>{if(this.destroyed||null==t.operation)return t;this._updateEventState(Se.RESHAPING);const{mapDeltaX:i,mapDeltaY:a,mapDeltaZ:n}=t;return(i||a||n)&&(this._offsetEdge(e,t),this.events.emit("reshape",{type:"reshape",object:this.object})),t}}_showEdgeOffsetTooltip(){return e=>(null!=e.signedDistance&&this.object.operations?this._updateEdgeOffsetTooltip(e):this._resetTooltip(),e)}_cleanEdgeOffsetCollapsedEdges(e){if(!this._operations)return;const t=e.handle.leftVertex.leftEdge?.leftVertex,i=e.handle.leftVertex,a=e.handle.rightVertex.rightEdge?.rightVertex,n=e.handle.rightVertex,o=this._operations.data.coordinateHelper,s=[];if(t&&o.distance(t.pos,i.pos)<je){const e=this._getManipulatorInfoFromHandle(i);null!=e&&s.push(e)}if(o.distance(i.pos,n.pos)<je||a&&o.distance(a.pos,n.pos)<je){const e=this._getManipulatorInfoFromHandle(n);null!=e&&s.push(e)}s.length&&this._removeVertices(s)}_createVertexOrEdgeManipulator(e,t=this.object.elevationInfo,i=!1){const{view:a,_operations:n}=this;if(!n)return null;const o=this._settings;if("edge"===e.type){if(this.enableEdgeOffset)return this._createEdgeOffsetManipulator(e,t);if(!this.enableMidpoints)return null}if(null==this._vertexManipulatorGeometry||null==this._vertexManipulatorOutlineGeometry){const{size:e,outlineSize:t}=xe(o.manipulators.vertex);this._vertexManipulatorGeometry=ne(this._vertexManipulatorMaterial,e,16,16),this._vertexManipulatorOutlineGeometry=ne(this._vertexManipulatorOutlineMaterial,t,16,16)}if(null==this._edgeManipulatorGeometry||null==this._edgeManipulatorOutlineGeometry){const{size:e,outlineSize:t}=xe(o.manipulators.edge);this._edgeManipulatorGeometry=ne(this._edgeManipulatorMaterial,e,16,16),this._edgeManipulatorOutlineGeometry=ne(this._edgeManipulatorOutlineMaterial,t,16,16)}const r=this._operations?.data.type,l="point"===r||"mesh"===r?[]:[new G(this._vertexManipulatorGeometry.instantiate(),Ie.Vertex|ue.Unselected),new G(this._vertexManipulatorOutlineGeometry.instantiate(),Ie.Vertex|ue.Unfocused|ue.Unselected),new G(this._vertexManipulatorOutlineGeometry.instantiate({material:this._vertexManipulatorHoverOutlineMaterial}),Ie.Vertex|ue.Focused|ue.Unselected),new G(this._vertexManipulatorGeometry.instantiate({material:this._selectedManipulatorMaterial}),ue.Selected),new G(this._vertexManipulatorOutlineGeometry.instantiate({material:this._selectedManipulatorOutlineMaterial}),ue.Selected|ue.Unfocused),new G(this._vertexManipulatorOutlineGeometry.instantiate({material:this._selectedManipulatorHoverOutlineMaterial}),ue.Selected|ue.Focused)];this.enableMidpoints&&l.push(new G(this._edgeManipulatorGeometry.instantiate({material:this._vertexManipulatorMaterial}),Ie.Edge|ue.Focused|ue.Unselected),new G(this._edgeManipulatorOutlineGeometry.instantiate({material:this._vertexManipulatorHoverOutlineMaterial}),Ie.Edge|ue.Focused|ue.Unselected),new G(this._edgeManipulatorGeometry.instantiate(),Ie.Edge|ue.Unfocused|ue.Unselected),new G(this._edgeManipulatorOutlineGeometry.instantiate(),Ie.Edge|ue.Unfocused|ue.Unselected));const p=new w({view:a,renderObjects:l,elevationInfo:t,focusMultiplier:1,touchMultiplier:1,available:this.object.visible,metadata:{deleting:!1}});p.selected=i,this._setTypeSpecificManipulatorSettings(p,e,t);const h="edge"===e.type?{manipulator:p,handle:e,locationUpdateHandle:null,type:"edge",selectedIndex:0}:{manipulator:p,handle:e,type:"vertex",selectedIndex:0};if(this._manipulatorInfos.push(h),this.manipulators.add(p),this._updateManipulatorPosition(h),"edge"===h.type){const e=[];for(const t of[h.handle.leftVertex,h.handle.rightVertex]){const i=this._getManipulatorInfoFromHandle(t);null!=i&&e.push(i.manipulator.events.on("location-update",(()=>this._updateManipulatorPosition(h))))}h.locationUpdateHandle=s(e),this._manipulatorHandles.add(h.locationUpdateHandle,p)}this._manipulatorHandles.add(this._watchAndUpdateGrabState(p,!0),p);const u=le(p,((e,i,a,o)=>{let s=null;const{snappingStep:r,cancelSnapping:l}=ge({predicate:()=>!this._isMultiVertexSelection(),snappingManager:this.tool.snappingManager,snappingContext:new me({editGeometryOperations:n,elevationInfo:t,pointer:o,excludeFeature:this.object.graphic,visualizer:new L}),updatingHandles:this._updatingHandles,useZ:!1});a=a.next((t=>(this._onDragCancel(!e.metadata.deleting,(()=>s=d(s))),t))).next(l),i.next((e=>this._trackNumDragging(e))).next((e=>{if("start"===e.action&&this._operations&&(s=this._operations.createUndoGroup()),"edge"===h.type){const t=this._splitEdgeManipulator(h);return{...e,info:t,snapOrigin:t.handle.pos}}return{...e,info:h,snapOrigin:h.handle.pos}})).next(pe(this.view,e.elevationAlignedLocation)).next(P(this.view,e.elevationAlignedLocation,this.object.elevationInfo,e.location.spatialReference,this.object.graphic)).next(se(this.view,t,this.object.graphic??void 0)).next(...r).next(re()).next((e=>{this._perVertexManipulatorDragAction(e),"end"===e.action&&(s=d(s)),this._resetTooltip()}))}));return this._manipulatorHandles.add([u,p.events.on("immediate-click",(e=>this._manipulatorClickCallback(e,h))),p.events.on("select-changed",(()=>{h.selectedIndex=++this._selectedIndex,this._updateMoveManipulationPosition(),this._resetTooltip()})),p.events.on("focus-changed",(()=>{this._resetTooltip()}))],p),this.events.emit("manipulators-changed"),h}_trackNumDragging(e){switch(e.action){case"start":this._numDragging++;break;case"end":this._numDragging--}return e}_onDragCancel(e=!0,t){switch(this._numDragging--,e&&this.undo(),null!=this.tool.snappingManager&&this.tool.snappingManager.doneSnapping(),this._resetTooltip(),this._reshapeEventState){case Se.NONE:break;case Se.MOVING:this.events.emit("move",{type:"move",dx:0,dy:0,object:this.object});break;case Se.RESHAPING:this.events.emit("reshape",{type:"reshape",object:this.object})}t&&t(),this.destroyed||this._updateEventState(Se.NONE)}_setTypeSpecificManipulatorSettings(e,t,i){const a=this._settings;switch(t.type){case"vertex":{e.state=Ie.Vertex,e.selectable=!0,e.cursor="move",e.collisionPriority=2;const{size:t,collisionPadding:n}=a.manipulators.vertex;e.radius=t/2+n,e.elevationInfo=i;const o=this._operations?.data.type;e.interactive=null!=o&&"point"!==o&&"mesh"!==o;break}case"edge":{e.state=Ie.Edge,e.selectable=!1,e.cursor="copy",e.collisionPriority=-1;const{size:t,collisionPadding:n}=a.manipulators.edge;e.radius=t/2+n,e.elevationInfo="on-the-ground"!==i.mode||H(this.object.graphic?.symbol)?{mode:"absolute-height",offset:0}:i;break}}}_watchAndUpdateGrabState(e,t){return e.events.on("grab-changed",(i=>this._onGrabStateChanged(e,t,i.action,i.pointerType)))}_onGrabStateChanged(e,t,i,a="mouse"){if(!this._recreatingManipulators){if("start"===i)t&&this._updateSelection(e),this._numGrabbing++;else if(this._numGrabbing--,this._updateEventState(Se.NONE),this.destroyed)return;this._moveManipulation.interactive=!this._numGrabbing,("touch"!==a||this.enableEdgeOffset)&&(this._manipulatorInfos.forEach((e=>{const{manipulator:t}=e,i=this._operations?.data.type;t.interactive=t.grabbing||!this._numGrabbing&&null!=i&&"point"!==i&&"mesh"!==i,"edgeManipulator"in e&&(e.edgeManipulator.interactive=e.edgeManipulator.grabbing||!this._numGrabbing)})),this._objectMoveManipulation.forEachManipulator((e=>{e.interactive=e.grabbing||!this._numGrabbing})))}}_clearSelection(){for(const e of this._manipulatorInfos)e.manipulator.grabbing||(e.manipulator.selected=!1)}_updateSelection(e){e.grabbing&&!e.selected&&e.selectable&&(this._clearSelection(),e.selected=!0,this.events.emit("manipulators-changed"))}_removeManipulator(e){null!=e&&(e.manipulator.metadata.deleting=!0,this.manipulators.remove(e.manipulator),this._manipulatorHandles.remove(e.manipulator),i(this._manipulatorInfos,e),this.events.emit("manipulators-changed"),this._resetTooltip())}_getManipulatorInfoFromHandle(e){if(e)for(const t of this._manipulatorInfos)if(e===t.handle)return t;return null}_updateManipulatorPositions(e){for(const t of e)this._updateManipulatorPosition(this._getManipulatorInfoFromHandle(t))}_updateManipulatorPosition(e){const t=this._operations;if(null!=e&&t)if("vertex"===e.type)e.manipulator.location=t.data.coordinateHelper.vectorToDehydratedPoint(e.handle.pos,Oe),e.manipulator.grabbing&&null!=this._vertexLaserLineVisualElement&&(this._vertexLaserLineVisualElement.visualElement.intersectsWorldUpAtLocation=e.manipulator.renderLocation);else if("edge"===e.type){const i=this._getManipulatorInfoFromHandle(e.handle.leftVertex),a=this._getManipulatorInfoFromHandle(e.handle.rightVertex);if(null==i||null==a)return;const n=i.manipulator,o=a.manipulator;if(null!=e.manipulator.elevationInfo&&"on-the-ground"===e.manipulator.elevationInfo.mode){const i=n.location,a=o.location,s=.5,r=i.x+s*(a.x-i.x),l=i.y+s*(a.y-i.y),p=i.hasZ&&a.hasZ?0:void 0;e.manipulator.location=S(r,l,p,t.data.spatialReference)}else M(Ee,n.renderLocation,o.renderLocation,.5),e.manipulator.renderLocation=Ee}}_splitEdgeManipulator(e,t=.5){const i=this._operations,a=i.splitEdge(e.handle,t).createdVertex;e.locationUpdateHandle=d(e.locationUpdateHandle);const n=this.object.elevationInfo;let o;this.enableEdgeOffset?(this._removeManipulator(e),o=this._createVertexOrEdgeManipulator(a)):(o=e,o.handle=a,o.type="vertex",this._setTypeSpecificManipulatorSettings(e.manipulator,e.handle,n)),a.leftEdge&&this._createVertexOrEdgeManipulator(a.leftEdge),a.rightEdge&&this._createVertexOrEdgeManipulator(a.rightEdge),this._updateManipulatorPosition(o),this.enableEdgeOffset||this._resetTooltip(),this._updateSelection(e.manipulator);const s=this._updateEventState(Se.RESHAPING),r=i.data.coordinateHelper.vectorToArray(o.handle.pos),l=i.data.components.indexOf(a.component);return this.events.emit("vertex-add",{type:"vertex-add",object:this.object,vertices:[{coordinates:r,componentIndex:l,vertexIndex:a.index}],added:r}),s&&this._updateEventState(Se.NONE),o}_updateMoveManipulationPosition(){const e=b(Ee,0,0,0);let t=0,i=!1,a=null,n=null;for(const r of this._manipulatorInfos)"vertex"===r.type&&(r.manipulator.selected?(t++,x(e,e,r.manipulator.renderLocation),null==a||r.selectedIndex>a.selectedIndex?(n=a,a=r):(null==n||r.selectedIndex>n.selectedIndex)&&(n=r)):i=!0);const o=this.object,s=this._operations?.data.geometry;if(0===t){const e=o.visible&&this.enableMoveObject;this._moveManipulation.xyManipulation.available=e,this._moveManipulation.xyAxisManipulation.available=e,this._moveManipulation.xyAxisManipulation.orthogonalAvailable=e,this._moveManipulation.zManipulation.available=e&&this.enableZShape&&R(this._operations,o.elevationInfo),this._moveManipulation.angle=U(s),this._moveManipulation.radius=Y.radiusForSymbol(o.graphic?.symbol)}else{const e=o.visible;this._moveManipulation.xyManipulation.available=e,this._moveManipulation.xyAxisManipulation.available=e,this._moveManipulation.zManipulation.available=e&&this.enableZVertex&&R(this._operations,this.object.elevationInfo),this._moveManipulation.xyAxisManipulation.orthogonalAvailable=e&&1!==t;let i=0;if(null!=a){const e=a.handle.pos,t=null!=n?n.handle.pos:a.handle.leftEdge?.leftVertex?a.handle.leftEdge.leftVertex.pos:null,o=null==n&&a.handle.rightEdge?.rightVertex?a.handle.rightEdge.rightVertex.pos:null;t&&o?this._moveManipulation.xyAxisManipulation.available=!1:t?i=ye(t,e):o&&(i=ye(e,o))}this._moveManipulation.angle=i,this._moveManipulation.radius=Z}0!==t&&i?(y(e,e,1/t),Oe.spatialReference=this._operations.data.spatialReference,Oe.hasZ=!0,this.view.renderCoordsHelper.fromRenderCoords(e,Oe),this._moveManipulation.elevationAlignedLocation=Oe):null==this._outlineVisualElement||this.object.isDraped||null==this._outlineVisualElement.attachmentOrigin?A(this._moveManipulation,this.object):this._moveManipulation.elevationAlignedLocation=this._outlineVisualElement.attachmentOrigin}_removeVertices(e){const t=new Array,i=this._operations;if(i){for(const a of e){const e=a.handle.component;if("vertex"===a.type&&i.canRemoveVertex(e)){t.push(a.handle),this._removeManipulator(a),this._removeManipulator(this._getManipulatorInfoFromHandle(a.handle.leftEdge)),this._removeManipulator(this._getManipulatorInfoFromHandle(a.handle.rightEdge));const n=i.removeVertices([a.handle]),o=n.removedVertices?.[0].createdEdge;o?this._createVertexOrEdgeManipulator(o):this.enableEdgeOffset&&e.vertices.length<=2&&this._removeManipulator(this._getManipulatorInfoFromHandle(e.edges[0]))}}if(t.length>0){const e=t.map((e=>{const t=i.data.components.indexOf(e.component);return{coordinates:i.data.coordinateHelper.vectorToArray(e.pos),componentIndex:t,vertexIndex:e.index}})),a=this._updateEventState(Se.RESHAPING);if(this.destroyed)return;if(this.events.emit("vertex-remove",{type:"vertex-remove",object:this.object,removed:e.map((e=>e.coordinates)),vertices:e}),this.destroyed)return;if(a&&(this._updateEventState(Se.NONE),this.destroyed))return;this._updateMoveManipulationPosition()}}}_moveVertices(e,t,i=("start"===t.action?ce.NEW_STEP:ce.ACCUMULATE_STEPS)){const a=this._operations;if(a){e.length>0&&a.moveVertices(e.map((e=>e.handle)),t.mapDeltaX,t.mapDeltaY,t.mapDeltaZ,i);for(const t of e)this._updateManipulatorPosition(t)}}_offsetEdge(e,t){if(null==t.operation||null==t.signedDistance)return;const i=this._operations;if(!i)return;const a=t.operation.clone();a.distance=t.signedDistance,i.updateVertices([e.handle.leftVertex,e.handle.rightVertex],a),this._updateManipulatorPosition(this._getManipulatorInfoFromHandle(e.handle.leftVertex)),this._updateManipulatorPosition(this._getManipulatorInfoFromHandle(e.handle.rightVertex))}_manipulatorClickCallback(e,t){e.shiftKey||this._clearSelection(),"vertex"===t.type&&(t.manipulator.selected=!t.manipulator.selected,this.enableDeleteVertices&&e.button===oe.Right&&this._removeVertices([t])),"edge"===t.type&&e.button===oe.Left&&this._splitEdgeManipulator(t),e.stopPropagation()}_updateTranslateTooltip(e,t){null!=this._defaultTooltipInfo?this._resetTooltip():this._updateTranslateObjectTooltip(e,t)}_updateTranslateObjectTooltip(e,t){this.activeTooltipInfo=ee(e,t,this._tooltipsContext)}_updateEdgeOffsetTooltip(e){this.activeTooltipInfo=te(this.object,e,this._tooltipsContext)}_resetTooltip(){this.activeTooltipInfo=this._defaultTooltipInfo}get _defaultTooltipInfo(){const e=this._operations?.data.type;switch(e){case"polyline":case"polygon":return this._selectedVertexManipulatorInfo?this.tooltipInfos.selectedVertex:null;case"point":case"mesh":return this.tooltipInfos.movePoint;default:return null}}get _selectedVertexManipulatorInfo(){const e=this._manipulatorInfos.filter((e=>"vertex"===e.type&&e.manipulator.selected));return 1===e.length?e[0]:null}get _tooltipsContext(){const{events:e}=this;return{sketchOptions:this._sketchOptions,tooltipInfos:this.tooltipInfos,activeTooltipInfo:this.activeTooltipInfo,selectedVertexManipulatorInfo:this._selectedVertexManipulatorInfo,callbacks:{onReshapeStart:()=>e.emit("reshape",{type:"reshape-start",object:this.object}),onReshape:()=>e.emit("reshape",{type:"reshape",object:this.object}),onReshapeStop:()=>e.emit("reshape",{type:"reshape-stop",object:this.object}),onMoveStart:()=>e.emit("move",{type:"move-start",object:this.object,dx:0,dy:0}),onMove:()=>e.emit("move",{type:"move",object:this.object,dx:0,dy:0}),onMoveStop:()=>e.emit("move",{type:"move-stop",object:this.object,dx:0,dy:0})}}}get test(){}};function be(){return e=>{const{operation:t,mapEnd:i}=e;return null==t||null==i?e:("start"===e.action&&t.selectArrowFromStartPoint(i),{...e,signedDistance:t.signedDistanceToPoint(i)})}}function xe(e){const t=e.size/2,i=t+e.collisionPadding;return{size:t/i,outlineSize:(t+e.outlineSize)/i}}function ye(e,t){return Math.atan2(t[1]-e[1],t[0]-e[0])+Math.PI/2}e([m()],Me.prototype,"_numGrabbing",void 0),e([m()],Me.prototype,"_numDragging",void 0),e([m()],Me.prototype,"grabbingOrDragging",null),e([m()],Me.prototype,"_operations",null),e([m()],Me.prototype,"_segmentLabels",void 0),e([m({constructOnly:!0})],Me.prototype,"tool",void 0),e([m()],Me.prototype,"tooltip",void 0),e([m()],Me.prototype,"activeTooltipInfo",void 0),e([m({readOnly:!0})],Me.prototype,"updating",null),e([m()],Me.prototype,"manipulators",null),e([m()],Me.prototype,"view",null),e([m()],Me.prototype,"object",null),e([m()],Me.prototype,"enableZShape",null),e([m()],Me.prototype,"enableDeleteVertices",null),e([m()],Me.prototype,"enableZVertex",null),e([m()],Me.prototype,"autoHideManipulators",null),e([m()],Me.prototype,"enableMoveObject",null),e([m()],Me.prototype,"enableMidpoints",null),e([m()],Me.prototype,"enableEdgeOffset",null),e([m()],Me.prototype,"_sketchOptions",null),e([m()],Me.prototype,"_accentColor",null),e([m()],Me.prototype,"_tooltipsContext",null),Me=e([g("esri.views.3d.interactive.editingTools.reshape.ReshapeOperation")],Me);const Oe=S(0,0,void 0,fe.WGS84),Ee=E(),je=1e-6;var Ie,Se,He;!function(e){e.Vertex=he.Custom1,e.Edge=he.Custom2}(Ie||(Ie={})),function(e){e[e.NONE=0]="NONE",e[e.MOVING=1]="MOVING",e[e.RESHAPING=2]="RESHAPING"}(Se||(Se={})),function(e){e[e.ALL=0]="ALL",e[e.SELECTED_OR_ALL=1]="SELECTED_OR_ALL"}(He||(He={}));export{Me as ReshapeOperation};
