/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{handlesGroup as t}from"../../../../../core/handleUtils.js";import{zeroMeters as e,createLength as o,scale as i}from"../../../../../core/quantityUtils.js";import{watch as n,syncAndInitial as s,sync as r}from"../../../../../core/reactiveUtils.js";import{getMetersPerUnitForSR as a}from"../../../../../core/unitUtils.js";import{projectPoint as p}from"../../../../../geometry/support/plane.js";import{sv3d as l}from"../../../../../geometry/support/vectorStacks.js";import{manipulatedObjectGeometry as c}from"../manipulatedObjectUtils.js";import{updateXYZFromTooltipInfo as m,updateTooltipInfoFromManipulatedObject as f,updateElevationFromPoint as u}from"../tooltipUtils3D.js";import{ManipulationType as y}from"../manipulations/MoveManipulation.js";import{axisConstrainedDragSign as v}from"../manipulations/moveUtils.js";import{AccumulationBehavior as d}from"../../../../interactive/editGeometry/interfaces.js";import{connectPasteEvent as h,getXYZDeltasFromTooltipInfo as T}from"../../../../interactive/tooltip/tooltipCommonUtils.js";import{MovePointTooltipInfo as k}from"../../../../interactive/tooltip/infos/MovePointTooltipInfo.js";import{ReshapeEdgeOffsetTooltipInfo as g}from"../../../../interactive/tooltip/infos/ReshapeEdgeOffsetTooltipInfo.js";import{SelectedVertexTooltipInfo as j}from"../../../../interactive/tooltip/infos/SelectedVertexTooltipInfo.js";import{TranslateTooltipInfo as I}from"../../../../interactive/tooltip/infos/TranslateTooltipInfo.js";import{TranslateXYTooltipInfo as O}from"../../../../interactive/tooltip/infos/TranslateXYTooltipInfo.js";import{TranslateZTooltipInfo as w}from"../../../../interactive/tooltip/infos/TranslateZTooltipInfo.js";import{autoArea2D as b}from"../../../../support/automaticAreaMeasurementUtils.js";import{autoLength2D as x,autoDistanceBetweenPoints2D as U}from"../../../../support/automaticLengthMeasurementUtils.js";import{verticalSignedDistanceBetweenPoints as M}from"../../../../support/euclideanLengthMeasurementUtils.js";import{geodesicDistance as L}from"../../../../support/geodesicLengthMeasurementUtils.js";function S(t,e){const o=e?.type;return{edgeOffset:new g({sketchOptions:t,viewType:o}),movePoint:new k({sketchOptions:t,viewType:o}),selectedVertex:new j({sketchOptions:t,viewType:o}),translate:new I({sketchOptions:t,viewType:o}),translateXY:new O({sketchOptions:t,viewType:o}),translateZ:new w({sketchOptions:t,viewType:o})}}function X(e,o,i){function a(){const t=i(),e=t.sketchOptions.tooltips.effectiveEnabled?t.activeTooltipInfo:null;return{...t,activeTooltipInfo:e}}let p=!1;function l(t){p=!0,V(o,t),e.info=t.activeTooltipInfo,p=!1}return t([n(a,l,s),n((()=>{const t=a(),{activeTooltipInfo:e}=t;if(e&&"key"in e)return{context:t,activeTooltipInfo:e,key:e.key,geometry:c(o)}}),((t,e)=>{t&&!p&&e&&e.key!==t.key&&E(t.activeTooltipInfo,o,t.context)}),r),o.on("committed",(()=>l(a()))),h(e)])}function E(t,e,{selectedVertexManipulatorInfo:o,callbacks:i}){const n=c(e);switch(n?.type){case"mesh":"move-point"===t.type&&m(t,n.origin,e,i);break;case"point":"move-point"===t.type&&m(t,n,e,i);break;case"polyline":case"polygon":"selected-vertex"===t.type&&R(t,o,e,i)}}function R(t,e,o,i){if("vertex"!==e?.type)return;const{dx:n,dy:s,dz:r}=T(t,e.manipulator.location);0===n&&0===s&&0===r||(i.onReshapeStart?.(),o.operations?.moveVertices([e.handle],n,s,r,d.NEW_STEP),i.onReshape?.(),i.onReshapeStop?.())}function V(t,{activeTooltipInfo:e,selectedVertexManipulatorInfo:o,sketchOptions:i}){if(e)switch(e.sketchOptions=i,e?.type){case"move-point":f(e,t);break;case"selected-vertex":Y(e,o,t)}}function Y(t,e,o){if(!t||"selected-vertex"!==t.type)return;const i=e?.manipulator.location;t.setLocationFromPoint(i),u(t,i,o);const n=o.operations?.data.geometry;switch(n?.type){case"polygon":t.geometryType="polygon",t.totalLength.visible=!1,t.area.actual=b(n);break;case"polyline":t.geometryType="polyline",t.totalLength.actual=x(n),t.area.visible=!1}}function Z(t,e,{sketchOptions:o,tooltipInfos:n}){let s=null;switch(t){case y.XY:s=n.translate,P(s,e,((t,e)=>U(t,e)));break;case y.XY_AXIS:s=n.translateXY,P(s,e,((t,o)=>i(U(t,o),v(e))));break;case y.Z:s=n.translateZ,P(s,e,M)}return s.sketchOptions=o,s}function P(t,o,i){if(null!=o&&"end"!==o.action){const{mapStart:n,mapEnd:s}=o,r=i(n,s);t.distance=null!=r?r:e}else t.distance=e}function A(t,o,{sketchOptions:i,tooltipInfos:n}){const s=n.edgeOffset;if(s.distance=e,null!=o&&"end"!==o.action){const e=t.operations,{mapEnd:i,signedDistance:n,operation:r}=o;if(null!=n&&null!=e){const o=e.data.coordinateHelper,a=n*r.selectedArrow;s.distance=D(t.isDraped,a,i,r.plane,o)}}const r=t.operations?.data.geometry;return s.area="polygon"===r?.type?b(r):null,s.totalLength="polyline"===r?.type?x(r):null,s.sketchOptions=i,s}function D(t,e,i,n,s){if(t){const t=s.toXYZ(s.pointToVector(i)),r=p(n,t,l.get()),a=L(r,t,s.spatialReference);if(null!=a)return o(a.value*Math.sign(e),a.unit)}return o(e*a(i.spatialReference),"meters")}export{X as connectTooltipToManipulatedObject,S as createTooltipInfos,A as getUpdatedEdgeOffsetTooltipInfo,Z as getUpdatedTranslateObjectTooltipInfo};
