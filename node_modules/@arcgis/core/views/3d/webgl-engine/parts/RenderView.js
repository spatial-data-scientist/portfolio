/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import t from"../../../../core/Accessor.js";import r from"../../../../core/Evented.js";import has from"../../../../core/has.js";import s from"../../../../core/Logger.js";import{removeMaybe as i,destroyMaybe as n}from"../../../../core/maybe.js";import{watch as o,initial as a,syncAndInitial as h}from"../../../../core/reactiveUtils.js";import{addFrameTask as c}from"../../../../core/scheduling.js";import{Milliseconds as d}from"../../../../core/time.js";import{property as p}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/RandomLCG.js";import{subclass as l}from"../../../../core/accessorSupport/decorators/subclass.js";import{ComponentObjectCollection as m}from"../collections/Component/ComponentObjectCollection.js";import{ShaderTechniqueRepository as u}from"../core/shaderTechnique/ShaderTechniqueRepository.js";import{Highlight as _}from"../effects/highlight/Highlight.js";import{ShadowHighlight as f}from"../effects/highlight/ShadowHighlight.js";import{MagnifierRenderNode as g}from"../effects/magnifier/MagnifierRenderNode.js";import{SMAA as x}from"../effects/smaa/SMAA.js";import{SSAO as b}from"../effects/ssao/SSAO.js";import{RenderRequestType as v}from"../lib/basicInterfaces.js";import w from"../lib/CompositingHelper.js";import{textureToDepth as j}from"../lib/depthRangeUtils.js";import{GLMaterialRepository as y}from"../lib/GLMaterialRepository.js";import{UpdateParameters as R}from"../lib/Material.js";import{ObjectAndLayerIdRenderHelper as A}from"../lib/ObjectAndLayerIdRenderHelper.js";import{Renderer as T}from"../lib/Renderer.js";import{RenderingContext as q}from"../lib/RenderingContext.js";import{TextureRepository as C}from"../lib/TextureRepository.js";import{createMarkerTextureRepository as U}from"../materials/markerTextureRepository.js";import{createStippleTextureRepository as O}from"../materials/stippleTextureRepository.js";import{WaterTextureRepository as S}from"../materials/internal/WaterTextureRepository.js";import{getContextCache as L}from"./contextCache.js";import{removeLoadedShaderModules as M}from"./requireUtils.js";import{ScreenshotManager as D,ScreenshotContext as k}from"./ScreenshotManager.js";import{contextCache as E}from"./testUtils.js";import{RenderState as H}from"../../../support/RenderState.js";import{createContext as W}from"../../../webgl/contextUtils.js";let B=class extends t{constructor(e){super({}),this.events=new r,this.waterTextures=new S,this.objectAndLayerIdRenderHelper=has("enable-feature:objectAndLayerId-rendering")?new A:null,this._needsUpdate=!0,this._needsRender=!0,this._idleSuspend=!0,this._needsWaterReflectionUpdate=!1,this._lastAnimationUpdate=0,this._container=e.container,this._viewingMode=e.viewingMode;try{this._initializeContext(e)}catch(i){return void console.error("Failed to initialize context",i)}const{memoryController:t}=e.view.resourceController;this.stippleTextures=O(this._rctx,t),this.markerTextures=U(this._rctx,t),this._techniques=new u({rctx:this._rctx,viewingMode:e.viewingMode,stippleTextures:this.stippleTextures,waterTextures:this.waterTextures,markerTextures:this.markerTextures}),this._textures=new C(e,this._techniques,this._rctx),this.addHandles(this._textures.events.on("changed",(e=>this.requestRender(e)))),this._materials=new y(this._textures,this._techniques,(()=>this.requestRender()),(()=>this.requestRender())),this._compositingHelper=new w(this._rctx,this._techniques),this.renderer=new T(e,this._materials,this._techniques,this._rctx,this._compositingHelper,(e=>this.requestRender(e))),this.addHandles([o((()=>e.view.ready),(t=>{t&&this._createRenderNodes(e.view,e.viewingMode)}),a),o((()=>this.waterTextures?.updating),(()=>this.requestRender()),a),o((()=>e.view.qualityProfile),(e=>this.renderer?.updateRenderFeatures(e)),h)]);const s={renderScene:(e,t,r,s)=>this.renderer.render(e,t,r,s),requestRenderScene:e=>this.requestRender(e),prepareOverlay:()=>e.options.screenshot.prepareOverlay(),renderOverlay:(t,r,s)=>e.options.screenshot.renderOverlay(t,r,s)};this._screenshotManager=new D(this._rctx,s,(e=>this.events.emit("force-camera-for-screenshot",e))),this._registerFrameTask(e)}normalizeCtorArgs(){return{}}destroy(){this._container.contains(this._canvas)&&this._container.removeChild(this._canvas),this._frameTask=i(this._frameTask),this._techniques=n(this._techniques),this._componentObjects=n(this._componentObjects),this._screenshotManager=n(this._screenshotManager),n(this.renderer),this._textures=n(this._textures),n(this.waterTextures),n(this.markerTextures),n(this.stippleTextures),this._canvas=null,this._container=null,this._rctx=n(this._rctx)}_createRenderNodes(e,t){new b({view:e,isEnabled:()=>this.renderer.hasSSAO,techniques:this._techniques}),new x({view:e,isEnabled:()=>this.renderer.hasSMAA,techniques:this._techniques}),new g({view:e,techniques:this._techniques}),new _({view:e,techniques:this._techniques}),new f({view:e,viewingMode:t,techniques:this._techniques})}requestRender(e=v.UPDATE){this._needsRender=!0,e===v.UPDATE&&(this._needsUpdate=!0)}get updating(){return this._needsUpdate||this._needsWaterReflectionUpdate||this.renderer.updating||this._textures.updating||this.waterTextures.updating}get textures(){return this._textures}get compositingHelper(){return this._compositingHelper}setIdleSuspend(e){this._idleSuspend!==e&&(this._idleSuspend=e,this.requestRender())}get renderingContext(){return this._rctx}get capabilities(){return this._rctx.capabilities}get canvas(){return this._canvas}takeScreenshot(e){return this._screenshotManager.takeScreenshot(e).then((e=>e[0]))}takeScreenshotWithOID(e){return e.objectAndLayerIdColor=!0,this._screenshotManager.takeScreenshot(e)}getAlpha(){return!!this._rctx.contextAttributes.alpha}getMinimalDepthForArea(e,t,r,s,i,n=i){const o=s.constrainWindowSize(t,r,i*s.pixelRatio,n*s.pixelRatio),a=this._ensureDepthBuffer(o);this.renderer.readDepthPixels(o,a);let h=Number.MAX_VALUE;for(let c=0;c<o[2]*o[3];c++){const e=j(4*c,a,s.nearFar);h>e&&e!==s.nearFar[0]&&e!==s.nearFar[1]&&(h=e)}if(e){const i=e.pickDepth(t*s.pixelRatio,r*s.pixelRatio,s);null!=i&&h>i&&i!==s.nearFar[0]&&i!==s.nearFar[1]&&(h=i)}return h===Number.MAX_VALUE?void 0:h}_ensureDepthBuffer(e){const t=4*e[2]*e[3];return(null==this._tmpDepthBuffer||this._tmpDepthBuffer.byteLength<t)&&(this._tmpDepthBuffer=new Uint8Array(t)),this._tmpDepthBuffer}async reloadShaders(){M(),await this._techniques.reloadAll(),this.requestRender()}_registerFrameTask(e){const t=e.view.state;let r=!1,s=v.BACKGROUND,i=!1;const n={preRender:({time:i})=>{r=this.updating,s=this._needsUpdate?v.UPDATE:v.BACKGROUND,e.commitSyncLayers();const n=d(i-this._lastAnimationUpdate);if(n>this.renderer.animationTimestep||null!=t.forcedAnimationTime||r||this._needsRender){const e=d(n/this.renderer.animationTimeDilation),r=new R(t.camera,e,t.forcedAnimationTime);this.renderer.updateAnimation(r)&&this.requestRender(v.BACKGROUND),this._lastAnimationUpdate=i}},render:({time:e})=>{if((this._needsRender||!this._idleSuspend||!this.renderer.isCameraFinal||this._needsWaterReflectionUpdate)&&t.camera.fullWidth>0&&t.camera.fullHeight>0){const r=this._needsUpdate&&this._idleSuspend&&this.renderer.isCameraFinal;this._needsRender=!1,this._needsUpdate=!1,this._needsWaterReflectionUpdate=!1,this.renderer.render(t,e),i=!0,r&&this.renderer.hasReflections&&(this.requestRender(v.BACKGROUND),this._needsWaterReflectionUpdate=!0)}},update:({time:e})=>{const r=this.renderer.hasSlicePlane||this.renderer.hasDecorations||this.renderer.hasHighlights,s=new k(t,r,this.renderer.fboCache);this._textures.update(),this._screenshotManager.update(s,e)},finish:()=>{i&&(this.renderer.finish(t.mode===H.IDLE?s:v.UPDATE),i=!1)}};this._frameTask=c(n)}_initializeContext(e){const t=e.options;this._canvas=t.canvas,this._canvas||(this._canvas=document.createElement("canvas")),this._canvas.setAttribute("style","width: 100%; height:100%; display:block;");const r={alpha:t.alpha||!1,premultipliedAlpha:!0,antialias:!1,depth:!0,stencil:t.stencil??!0,powerPreference:"high-performance",preserveDrawingBuffer:t.preserveDrawingBuffer??!1},i=W(this._canvas,r);null!=i?(this._rctx=F(i,e),this._loadShaderOnlyExtensions(),!t.alpha&&this._rctx.contextAttributes.alpha&&s.getLogger(this).error("WebGL context has alpha channel even though no alpha channel was requested"),!this._rctx.contextAttributes.alpha&&has("safari")>=11&&(this._container.style.backgroundColor="black"),this._container.appendChild(this._canvas)):s.getLogger(this).error("A WebGL2 context could not be created.")}_loadShaderOnlyExtensions(){this._rctx.capabilities.enable("textureFloatLinear")}getObjectAndLayerIdColor(e){return null!=this.objectAndLayerIdRenderHelper?this.objectAndLayerIdRenderHelper.getObjectAndLayerIdColor(e):null}get componentObjectCollection(){return null==this._componentObjects&&(this._componentObjects=new m(this.renderer.renderPassManager,this._viewingMode)),this._componentObjects}set componentObjectCollection(e){this._componentObjects=e}};function F(e,t){const r={disabledExtensions:t.options.deactivatedWebGLExtensions||{},debugWebGLExtensions:t.options.debugWebGLExtensions||{},maxAnisotropy:8},s=(e,r)=>t.view.resourceController.memoryController.newCache(e,r);if(E.enabled){let t=I.get(e);return t?(t.configure(r),t.newCache=s,t.ref(),t):(t=new q(e,r,s),I.set(e,t),t.ref(),t)}return new q(e,r,s)}e([p({type:Boolean,readOnly:!0})],B.prototype,"updating",null),e([p()],B.prototype,"_rctx",void 0),e([p()],B.prototype,"_container",void 0),e([p()],B.prototype,"_canvas",void 0),e([p()],B.prototype,"stippleTextures",void 0),e([p()],B.prototype,"markerTextures",void 0),e([p()],B.prototype,"waterTextures",void 0),e([p({readOnly:!0})],B.prototype,"objectAndLayerIdRenderHelper",void 0),e([p()],B.prototype,"_textures",void 0),e([p({readOnly:!0})],B.prototype,"renderer",void 0),e([p()],B.prototype,"_screenshotManager",void 0),e([p()],B.prototype,"componentObjectCollection",null),e([p()],B.prototype,"_componentObjects",void 0),e([p()],B.prototype,"_needsUpdate",void 0),e([p()],B.prototype,"_needsWaterReflectionUpdate",void 0),B=e([l("esri.views.3d.webgl-engine.parts.RenderView")],B);const I=L();export{B as RenderView};
