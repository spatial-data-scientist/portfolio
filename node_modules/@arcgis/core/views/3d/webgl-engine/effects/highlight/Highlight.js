/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../chunks/tslib.es6.js";import{unitRGBAFromColor as r}from"../../../../../core/colorUtils.js";import has from"../../../../../core/has.js";import{releaseMaybe as t,disposeMaybe as i}from"../../../../../core/maybe.js";import{watch as s,syncAndInitial as o}from"../../../../../core/reactiveUtils.js";import{property as a}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/Logger.js";import"../../../../../core/RandomLCG.js";import{subclass as h}from"../../../../../core/accessorSupport/decorators/subclass.js";import{set as l}from"../../../../../core/libs/gl-matrix-2/math/vec2.js";import{ColorFormat as c}from"../../../webgl/formats.js";import n from"../../../webgl/RenderNode.js";import{HighlightApplyTechnique as u}from"./HighlightApplyTechnique.js";import{HighlightBlurTechnique as m}from"./HighlightBlurTechnique.js";import{defaultColor as p,defaultHaloOpacity as g,defaultFillOpacity as d}from"./HighlightDefaults.js";import{HighlightDownsampleTechnique as b}from"./HighlightDownsampleTechnique.js";import{HighlightPassParameters as f}from"./HighlightPassParameters.js";import{RenderRequestType as _,Decorations as w}from"../../lib/basicInterfaces.js";import{Default3D as T}from"../../lib/DefaultVertexAttributeLocations.js";import{Pos2Tex as P}from"../../lib/DefaultVertexBufferLayouts.js";import{VertexArrayObject as v}from"../../lib/VertexArrayObject.js";import{H as q}from"../../../../../chunks/HighlightBlur.glsl.js";import{H as C,g as y}from"../../../../../chunks/HighlightDownsample.glsl.js";import{BufferObject as j}from"../../../../webgl/BufferObject.js";import{ClearBufferBit as x,Usage as O}from"../../../../webgl/enums.js";import{vertexCount as D}from"../../../../webgl/Util.js";let R=class extends n{constructor(e){super(e),this.produces="highlight-color",this.consumes={required:["highlight-color","highlights"]},this._passParameters=new f,this._downsampleDrawParameters=new C,this._blurDrawParameters=new q,this._blurColorFormat=has("mac")?c.RGBA:c.RGBA4,this._grid={coverage:null,vao:null,verticalCellCount:0,horizontalCellCount:0,viewportWidth:0,viewportHeight:0},this._blurTechnique=e.techniques.acquire(m),this._downsampleTechnique=e.techniques.acquire(b),this._applyTechnique=e.techniques.acquire(u)}initialize(){this.addHandles([s((()=>this.view.highlightOptions.color),(e=>{this._passParameters.color=r(e??p),this.view.highlightOptions.haloColor||(this._passParameters.haloColor=this._passParameters.color),this.requestRender(_.UPDATE)}),o),s((()=>this.view.highlightOptions.haloColor),(e=>{this._passParameters.haloColor=null!=e?r(e):this._passParameters.color,this.requestRender(_.UPDATE)}),o),s((()=>this.view.highlightOptions.haloOpacity),(e=>{this._passParameters.haloOpacity=e??g,this._passParameters.haloOpacityOccluded=.25*this._passParameters.haloOpacity,this.requestRender(_.UPDATE)}),o),s((()=>this.view.highlightOptions.fillOpacity),(e=>{this._passParameters.fillOpacity=e??d,this._passParameters.fillOpacityOccluded=.25*this._passParameters.fillOpacity,this.requestRender(_.UPDATE)}),o)])}destroy(){this._blurTechnique.release(),this._downsampleTechnique.release(),this._applyTechnique.release(),this._grid.coverage=t(this._grid.coverage),this._grid.vao=i(this._grid.vao)}render(e){if(this.bindParameters.decorations===w.OFF)return e.find((({name:e})=>"highlight-color"===e));if(!(this._blurTechnique.compiled&&this._downsampleTechnique.compiled&&this._applyTechnique.compiled))return this.requestRender(_.UPDATE),e.find((({name:e})=>"highlight-color"===e));const r=e.find((({name:e})=>"highlights"===e)).getTexture(),t=this.bindParameters.camera,i=t.fullWidth,s=t.fullHeight,o=t.pixelRatio,a=Math.ceil(i/o),h=Math.ceil(s/o),c=this.renderingContext;this._gridUpdateResources(r),this._gridComputeCoverage(r,this.bindParameters),this._passParameters.highlightTexture=r,this._passParameters.coverageTexture=this._grid.coverage?.getTexture();const{width:n,height:u}=r.descriptor;l(this._passParameters.coverageRounding,n/(Math.ceil(n/y)*y),u/(Math.ceil(u/y)*y));const m=this._grid.vao;c.bindVAO(m);const p=this.fboCache.acquire(a,h,"highlight blur",this._blurColorFormat);c.unbindTexture(p.fbo?.colorTexture),c.bindFramebuffer(p.fbo),c.setClearColor(0,0,0,0),c.clear(x.COLOR_BUFFER_BIT),c.setViewport(0,0,a,h),this._blurDrawParameters.blurInputTexture=r,l(this._blurDrawParameters.blurSize,1/a,0);const g=c.bindTechnique(this._blurTechnique,this.bindParameters,this._passParameters,this._blurDrawParameters);c.drawArrays(this._blurTechnique.primitiveType,0,D(m,"geometry"));const d=this.fboCache.acquire(a,h,"highlight blur",this._blurColorFormat);c.unbindTexture(d.fbo?.colorTexture),c.bindFramebuffer(d.fbo),c.setClearColor(0,0,0,0),c.clear(x.COLOR_BUFFER_BIT),this._blurDrawParameters.blurInputTexture=p.getTexture(),l(this._blurDrawParameters.blurSize,0,1/h),g.bindDraw(this._blurDrawParameters,this.bindParameters,this._passParameters),c.drawArrays(this._blurTechnique.primitiveType,0,D(m,"geometry"));const b=e.find((({name:e})=>"highlight-color"===e));return c.bindFramebuffer(b.fbo),c.setViewport4fv(t.fullViewport),this._passParameters.blurTexture=d.getTexture(),c.bindTechnique(this._applyTechnique,this.bindParameters,this._passParameters),c.drawArrays(this._applyTechnique.primitiveType,0,D(m,"geometry")),p.release(),d.release(),b}_gridUpdateResources(e){const r=this.renderingContext,t=this._grid,i=Math.ceil(e.descriptor.height/y),s=Math.ceil(e.descriptor.width/y);if(t.vao&&t.verticalCellCount===i&&t.horizontalCellCount===s)return;t.verticalCellCount=i,t.horizontalCellCount=s;const o=i+1,a=s+1,h=1/i,l=1/s,c=new Float32Array(6*4*o*a);let n=0;for(let u=0;u<o;u++)for(let e=0;e<a;e++)c[n++]=(e-.5)*l*2-1,c[n++]=(u-.5)*h*2-1,c[n++]=e*l,c[n++]=u*h,c[n++]=(e+.5)*l*2-1,c[n++]=(u-.5)*h*2-1,c[n++]=e*l,c[n++]=u*h,c[n++]=(e-.5)*l*2-1,c[n++]=(u+.5)*h*2-1,c[n++]=e*l,c[n++]=u*h,c[n++]=(e-.5)*l*2-1,c[n++]=(u+.5)*h*2-1,c[n++]=e*l,c[n++]=u*h,c[n++]=(e+.5)*l*2-1,c[n++]=(u-.5)*h*2-1,c[n++]=e*l,c[n++]=u*h,c[n++]=(e+.5)*l*2-1,c[n++]=(u+.5)*h*2-1,c[n++]=e*l,c[n++]=u*h;t.vao?.dispose(),t.vao=new v(r,T,{geometry:P},{geometry:j.createVertex(r,O.STATIC_DRAW,c)})}_gridComputeCoverage(e,r){const t=this.renderingContext,i=this._grid,s=e.descriptor,o=Math.ceil(s.width/y),a=Math.ceil(s.height/y);this._downsampleDrawParameters.input=e,i.coverage?.release(),i.coverage=this.fboCache.acquire(o,a,"highlight coverage",c.RG),t.unbindTexture(i.coverage.fbo?.colorTexture),t.bindFramebuffer(i.coverage.fbo),t.bindTechnique(this._downsampleTechnique,r,this._passParameters,this._downsampleDrawParameters),t.setViewport(0,0,o,a),t.screen.draw()}get test(){}};e([a()],R.prototype,"produces",void 0),e([a()],R.prototype,"consumes",void 0),e([a({constructOnly:!0})],R.prototype,"techniques",void 0),R=e([h("esri.views.3d.webgl-engine.effects.highlight.Highlight")],R);export{R as Highlight};
