/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import"../../../../core/has.js";import e from"../../../../core/PooledArray.js";import{isPromiseLike as r,createAbortError as t}from"../../../../core/promiseUtils.js";import{signal as n}from"../../../../core/signal.js";import{ShaderOutput as s}from"../core/shaderLibrary/ShaderOutput.js";import{isPrepareRenderPlugin as i,isPreparesRenderPlugin as o}from"./RenderPlugin.js";import{Decorations as l}from"../lib/basicInterfaces.js";import{union as a,DepthRange as d}from"../lib/depthRange.js";import{RenderOccludedFlag as u}from"../lib/Material.js";import{RenderSlot as c}from"../lib/RenderSlot.js";class h{constructor(r){this._context=r,this._renderPlugins=new e,this._materialRenderers=new Map,this._slots=new Array,this._renderVersion=n(0);for(let e=0;e<c.MAX_SLOTS;++e)this._slots[e]=[]}destroy(){this._renderPlugins.forEach((e=>e.destroy())),this._renderPlugins.clear(),this._materialRenderers.clear()}get plugins(){return this._renderPlugins}add(e,n){const s=()=>{if(n?.aborted)throw e.uninitializeRenderContext(),t();this._renderPlugins.push(e),e.materialReference&&this._materialRenderers.set(e.materialReference,e),e.produces.forEach(((r,t)=>{this._slots[t].push(e)})),this._context.requestRender(),this._renderVersion.value++},i=e.initializeRenderContext(this._context,n);if(r(i))return i.then(s);s()}remove(e){if(null!=e.materialReference&&this._materialRenderers.delete(e.materialReference),null!=this._renderPlugins.removeUnordered(e)){for(let r=0;r<this._slots.length;++r)this._slots[r]=this._slots[r].filter((r=>r!==e));e.uninitializeRenderContext(),this._context.requestRender(),this._renderVersion.value++}}prepareRender(){this._renderPlugins.forAll((e=>{e.prepareRender&&e.prepareRender(this._context.renderContext)}))}updateAnimation(e){let r=!1;return this._renderPlugins.forAll((t=>{t.updateAnimation&&(r=t.updateAnimation(e)||r)})),r}renderFeatureChanged(){this._renderPlugins.forAll((e=>{e.renderFeatureChanged&&e.renderFeatureChanged()}))}prepare(...e){for(const r of e)this._context.renderContext.bindParameters.slot=r,this._slots[r].forEach((e=>{const t=e.produces.get(r);t?.(s.Color)&&(i(e)&&e.prepareTechnique(this._context.renderContext),o(e)&&e.prepareTechniques(this._context.renderContext))}))}_getRenderables(){const e=this._context.renderContext.bindParameters.slot,r=this._context.renderContext.output??s.Color,t=new Map;return this._slots[e].forEach((n=>{const s=n.produces.get(e);if(s?.(r)&&(!n.isDecoration||this._context.renderContext.bindParameters.decorations!==l.OFF))if(i(n)){const e=n.prepareTechnique(this._context.renderContext);null!=e&&t.set(n,e)}else if(o(n)){const e=n.prepareTechniques(this._context.renderContext);null!=e&&t.set(n,e)}else t.set(n,null)})),t}render(e,...r){for(const t of r)this._context.renderContext.bindParameters.slot=t,this._getRenderables().forEach(((r,t)=>t.renderNode(this._context.renderContext,r,e)))}queryDepthRange(e){const r=new d;return this._renderPlugins.forAll((t=>{const n=t.queryDepthRange?.(e);a(r,n)})),r}get updating(){return this._renderVersion.value>=0&&this._renderPlugins.some((e=>e.running))}produces(e,...r){for(const t of r)if(this._slots[t].some((r=>{const n=r.produces.get(t);return!!n&&n(e)})))return!0;return!1}consumes(e){return this._renderPlugins.some((r=>r.consumes().required.includes(e)))}getMaterialRenderer(e){return this._materialRenderers.get(e)}removeEmptyMaterialRenderers(){this._renderPlugins.filterInPlace((e=>!e.materialReference||0!==e.numGeometries||(this._materialRenderers.delete(e.materialReference),e.destroy(),!1)))}get hasDecorations(){return this._renderPlugins.some((e=>e.isDecoration))}get hasOccludees(){return this._renderPlugins.some((e=>e.hasOccludees))}get renderOccludedFlags(){return this._renderPlugins.reduce(((e,r)=>e|r.renderOccludedFlags),u.None)}get usedMemory(){return this._renderPlugins.reduce(((e,r)=>null!==r.materialReference?e:e+(r.usedMemory??0)),0)}get test(){}}export{h as RenderPluginManager};
