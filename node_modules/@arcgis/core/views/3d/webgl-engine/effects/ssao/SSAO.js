/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../chunks/tslib.es6.js";import{clamp as r}from"../../../../../core/mathUtils.js";import{disposeMaybe as s}from"../../../../../core/maybe.js";import{watch as t}from"../../../../../core/reactiveUtils.js";import{Milliseconds as i}from"../../../../../core/time.js";import{property as o}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/has.js";import"../../../../../core/Logger.js";import"../../../../../core/RandomLCG.js";import{subclass as a}from"../../../../../core/accessorSupport/decorators/subclass.js";import{set as n}from"../../../../../core/libs/gl-matrix-2/math/vec2.js";import{ColorFormat as m}from"../../../webgl/formats.js";import c from"../../../webgl/RenderNode.js";import{distanceFadeEnd as u,distanceFadeStart as h}from"../../core/shaderLibrary/shading/ScreenSpaceConstants.js";import{SSAOBlurTechnique as p}from"./SSAOBlurTechnique.js";import{noiseData as l}from"./SSAONoiseData.js";import{SSAOPassParameters as d,BlurDrawParameters as b}from"./SSAOParameters.js";import{SSAOTechnique as f}from"./SSAOTechnique.js";import{RenderRequestType as T}from"../../lib/basicInterfaces.js";import{g as _}from"../../../../../chunks/SSAO.glsl.js";import{TextureWrapMode as w,PixelFormat as q,DepthStencilAttachment as x,ClearBufferBit as P}from"../../../../webgl/enums.js";import{Texture as j}from"../../../../webgl/Texture.js";import{TextureDescriptor as S}from"../../../../webgl/TextureDescriptor.js";const g=2;let y=class extends c{constructor(e){super(e),this.consumes={required:["normals"]},this.produces="ssao",this.isEnabled=()=>!1,this._enableTime=i(0),this._passParameters=new d,this._drawParameters=new b}initialize(){const e=Uint8Array.from(atob(l),(e=>e.charCodeAt(0))),r=new S;r.wrapMode=w.CLAMP_TO_EDGE,r.pixelFormat=q.RGB,r.wrapMode=w.REPEAT,r.hasMipmap=!0,r.width=32,r.height=32,this._passParameters.noiseTexture=new j(this.renderingContext,r,e),this._ssaoTechnique=this.techniques.acquire(f),this._blurTechnique=this.techniques.acquire(p),this.addHandles(t((()=>this.isEnabled()),(()=>this._enableTime=i(0))))}destroy(){this._passParameters.noiseTexture=s(this._passParameters.noiseTexture),this._blurTechnique.release(),this._ssaoTechnique.release()}render(e){const s=this.bindParameters,t=e.find((({name:e})=>"normals"===e)),o=t?.getTexture(),a=t?.getTexture(x),c=this.fboCache,p=s.camera,l=p.fullViewport[2],d=p.fullViewport[3],b=Math.round(l/g),f=Math.round(d/g);if(!this._ssaoTechnique.compiled||!this._blurTechnique.compiled)return this._enableTime=i(performance.now()),this.requestRender(),c.acquire(b,f,"ssao",m.RED);0===this._enableTime&&(this._enableTime=i(performance.now()));const w=this.renderingContext,q=this.view.qualitySettings.fadeDuration,j=p.relativeElevation,S=r((u-j)/(u-h),0,1),y=q>0?Math.min(q,performance.now()-this._enableTime)/q:1,A=y*S;this._passParameters.normalTexture=o,this._passParameters.depthTexture=a,this._passParameters.projScale=1/p.computeScreenPixelSizeAtDist(1),this._passParameters.intensity=4*E/_(p)**6*A;const R=c.acquire(l,d,"ssao input",m.RG);w.unbindTexture(R.fbo.colorTexture),w.bindFramebuffer(R.fbo),w.setViewport(0,0,l,d),w.bindTechnique(this._ssaoTechnique,s,this._passParameters,this._drawParameters),w.screen.draw();const v=c.acquire(b,f,"ssao blur",m.RED);w.unbindTexture(v.fbo.colorTexture),w.bindFramebuffer(v.fbo),this._drawParameters.colorTexture=R.getTexture(),n(this._drawParameters.blurSize,0,g/d),w.bindTechnique(this._blurTechnique,s,this._passParameters,this._drawParameters),w.setViewport(0,0,b,f),w.screen.draw(),R.release();const O=c.acquire(b,f,"ssao",m.RED);return w.unbindTexture(O.fbo.colorTexture),w.bindFramebuffer(O.fbo),w.setViewport(0,0,l,d),w.setClearColor(1,1,1,0),w.clear(P.COLOR_BUFFER_BIT),this._drawParameters.colorTexture=v.getTexture(),n(this._drawParameters.blurSize,g/l,0),w.bindTechnique(this._blurTechnique,s,this._passParameters,this._drawParameters),w.setViewport(0,0,b,f),w.screen.draw(),w.setViewport4fv(p.fullViewport),v.release(),y<1&&this.requestRender(T.UPDATE),O}};e([o()],y.prototype,"consumes",void 0),e([o()],y.prototype,"produces",void 0),e([o({constructOnly:!0})],y.prototype,"techniques",void 0),e([o({constructOnly:!0})],y.prototype,"isEnabled",void 0),y=e([a("esri.views.3d.webgl-engine.effects.ssao.SSAO")],y);const E=.5;export{y as SSAO,g as blurSizePixels};
