/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import has from"../../../../core/has.js";import e from"../../../../core/Logger.js";import{clamp as t}from"../../../../core/mathUtils.js";import{createRenderScreenPointArray3 as r}from"../../../../core/screenUtils.js";import{copy as s}from"../../../../core/libs/gl-matrix-2/math/vec2.js";import{s as i,f as a,m as n,j as o,g as l,c,l as u,p as h,h as p}from"../../../../chunks/vec32.js";import{create as m}from"../../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{ONES as f}from"../../../../core/libs/gl-matrix-2/factories/vec4f64.js";import{PlaneIndex as d}from"../../../../geometry/support/frustum.js";import{create as T,distance2 as _,fromPoints as E,closestLineSegmentPoint as A}from"../../../../geometry/support/lineSegment.js";import{create as R,fromPoints as O,signedDistance as I,getNormal as S}from"../../../../geometry/support/plane.js";import{newLayout as g}from"../../support/buffer/InterleavedLayout.js";import{ShaderOutput as b,isDepth as v,isColorHighlightOIDOrDepth as P,is2DGeometryOutput as L}from"../core/shaderLibrary/ShaderOutput.js";import N from"../lib/GLMaterial.js";import{Material as C,RenderOccludedFlag as y}from"../lib/Material.js";import{RenderSlot as j}from"../lib/RenderSlot.js";import{isTranslationMatrix as D}from"../lib/Util.js";import{VertexAttribute as U}from"../lib/VertexAttribute.js";import{VisualVariablePassParameters as F}from"./VisualVariablePassParameters.js";import{LineMarkerAnchor as w}from"../shaders/LineMarkerTechniqueConfiguration.js";import{r as B}from"../../../../chunks/RibbonLine.glsl.js";import{vertexAttributeLocations as x,RibbonLineTechnique as J}from"../shaders/RibbonLineTechnique.js";import{RibbonLineTechniqueConfiguration as M,CapType as G}from"../shaders/RibbonLineTechniqueConfiguration.js";var H;!function(e){e[e.LEFT_JOIN_START=-2]="LEFT_JOIN_START",e[e.LEFT_JOIN_END=-1]="LEFT_JOIN_END",e[e.LEFT_CAP_START=-4]="LEFT_CAP_START",e[e.LEFT_CAP_END=-5]="LEFT_CAP_END",e[e.RIGHT_JOIN_START=2]="RIGHT_JOIN_START",e[e.RIGHT_JOIN_END=1]="RIGHT_JOIN_END",e[e.RIGHT_CAP_START=4]="RIGHT_CAP_START",e[e.RIGHT_CAP_END=5]="RIGHT_CAP_END"}(H||(H={}));class z extends C{constructor(e){super(e,new V),this._configuration=new M,this.produces=new Map([[j.OPAQUE_MATERIAL,e=>e===b.Highlight||e===b.ObjectAndLayerIdColor||e===b.Color&&this.parameters.renderOccluded===y.OccludeAndTransparentStencil],[j.OPAQUE_NO_SSAO_DEPTH,e=>v(e)],[j.OCCLUDER_MATERIAL,e=>P(e)&&this.parameters.renderOccluded===y.OccludeAndTransparentStencil],[j.TRANSPARENT_OCCLUDER_MATERIAL,e=>P(e)&&this.parameters.renderOccluded===y.OccludeAndTransparentStencil],[j.TRANSPARENT_MATERIAL,e=>e===b.Color&&this.parameters.writeDepth&&this.parameters.renderOccluded!==y.OccludeAndTransparentStencil],[j.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL,e=>e===b.Color&&!this.parameters.writeDepth&&this.parameters.renderOccluded!==y.OccludeAndTransparentStencil],[j.DRAPED_MATERIAL,e=>L(e)]]),this._vertexAttributeLocations=x}getConfiguration(e,t){this._configuration.output=e,this._configuration.draped=t.slot===j.DRAPED_MATERIAL;const r=null!=this.parameters.stipplePattern&&e!==b.Highlight;return this._configuration.stippleEnabled=r,this._configuration.stippleOffColorEnabled=r&&null!=this.parameters.stippleOffColor,this._configuration.stipplePreferContinuous=r&&this.parameters.stipplePreferContinuous,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.hasOccludees=this.parameters.hasOccludees,this._configuration.roundJoins="round"===this.parameters.join,this._configuration.capType=this.parameters.cap,this._configuration.applyMarkerOffset=null!=this.parameters.markerParameters&&q(this.parameters.markerParameters),this._configuration.hasPolygonOffset=this.parameters.hasPolygonOffset,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.vvSize=!!this.parameters.vvSize,this._configuration.vvColor=!!this.parameters.vvColor,this._configuration.vvOpacity=!!this.parameters.vvOpacity,this._configuration.innerColorEnabled=this.parameters.innerWidth>0&&null!=this.parameters.innerColor,this._configuration.falloffEnabled=this.parameters.falloff>0,this._configuration.occluder=this.parameters.renderOccluded===y.OccludeAndTransparentStencil,this._configuration.transparencyPassType=t.transparencyPassType,this._configuration.multipassEnabled=t.multipassEnabled,this._configuration.cullAboveGround=t.multipassTerrain.cullAboveGround,this._configuration.wireframe=this.parameters.wireframe,this._configuration}intersectDraped(e,r,s,i,a,n){if(!s.options.selectionMode)return;const o=e.attributes.get(U.POSITION).data,l=e.attributes.get(U.SIZE);let c=this.parameters.width;if(this.parameters.vvSize){const r=e.attributes.get(U.SIZEFEATUREATTRIBUTE).data[0];c*=t(this.parameters.vvSize.offset[0]+r*this.parameters.vvSize.factor[0],this.parameters.vvSize.minSize[0],this.parameters.vvSize.maxSize[0])}else l&&(c*=l.data[0]);const u=i[0],h=i[1],p=(c/2+4)*e.screenToWorldRatio;let m=Number.MAX_VALUE,f=0;for(let d=0;d<o.length-5;d+=3){const e=o[d],r=o[d+1],s=u-e,i=h-r,a=o[d+3]-e,n=o[d+4]-r,l=t((a*s+n*i)/(a*a+n*n),0,1),c=a*l-s,p=n*l-i,T=c*c+p*p;T<m&&(m=T,f=d/3)}m<p*p&&a(n.dist,n.normal,f,!1)}intersect(r,p,m,f,T,R){if(!m.options.selectionMode||!r.visible)return;if(!D(p))return void e.getLogger("esri.views.3d.webgl-engine.materials.RibbonLineMaterial").error("intersection assumes a translation-only matrix");const g=r.attributes,b=g.get(U.POSITION).data;let v=this.parameters.width;if(this.parameters.vvSize){const e=g.get(U.SIZEFEATUREATTRIBUTE).data[0];v*=t(this.parameters.vvSize.offset[0]+e*this.parameters.vvSize.factor[0],this.parameters.vvSize.minSize[0],this.parameters.vvSize.maxSize[0])}else g.has(U.SIZE)&&(v*=g.get(U.SIZE).data[0]);const P=m.camera,L=ee;s(L,m.point);const N=v*P.pixelRatio/2+4*P.pixelRatio;i(ue[0],L[0]-N,L[1]+N,0),i(ue[1],L[0]+N,L[1]+N,0),i(ue[2],L[0]+N,L[1]-N,0),i(ue[3],L[0]-N,L[1]-N,0);for(let e=0;e<4;e++)if(!P.unprojectFromRenderScreen(ue[e],he[e]))return;O(P.eye,he[0],he[1],pe),O(P.eye,he[1],he[2],me),O(P.eye,he[2],he[3],fe),O(P.eye,he[3],he[0],de);let C=Number.MAX_VALUE,y=0;const j=Y(this.parameters,g)?b.length-2:b.length-5;for(let e=0;e<j;e+=3){X[0]=b[e]+p[12],X[1]=b[e+1]+p[13],X[2]=b[e+2]+p[14];const t=(e+3)%b.length;if(Q[0]=b[t]+p[12],Q[1]=b[t+1]+p[13],Q[2]=b[t+2]+p[14],I(pe,X)<0&&I(pe,Q)<0||I(me,X)<0&&I(me,Q)<0||I(fe,X)<0&&I(fe,Q)<0||I(de,X)<0&&I(de,Q)<0)continue;if(P.projectToRenderScreen(X,te),P.projectToRenderScreen(Q,re),te[2]<0&&re[2]>0){a(K,X,Q);const e=P.frustum,t=-I(e[d.NEAR],X)/n(K,S(e[d.NEAR]));o(K,K,t),l(X,X,K),P.projectToRenderScreen(X,te)}else if(te[2]>0&&re[2]<0){a(K,Q,X);const e=P.frustum,t=-I(e[d.NEAR],Q)/n(K,S(e[d.NEAR]));o(K,K,t),l(Q,Q,K),P.projectToRenderScreen(Q,re)}else if(te[2]<0&&re[2]<0)continue;te[2]=0,re[2]=0;const r=_(E(te,re,ae),L);r<C&&(C=r,c(se,X),c(ie,Q),y=e/3)}const F=m.rayBegin,w=m.rayEnd;if(C<N*N){let e=Number.MAX_VALUE;if(A(E(se,ie,ae),E(F,w,ne),$)){a($,$,F);const t=u($);o($,$,1/t),e=t/h(F,w)}R(e,$,y,!1)}}get _layout(){const e=g().vec3f(U.POSITION).vec3f(U.PREVPOSITION).vec3f(U.NEXTPOSITION).f32(U.SUBDIVISIONFACTOR).vec2f(U.UV0);return this.parameters.vvSize?e.f32(U.SIZEFEATUREATTRIBUTE):e.f32(U.SIZE),this.parameters.vvColor?e.f32(U.COLORFEATUREATTRIBUTE):e.vec4f(U.COLOR),this.parameters.vvOpacity&&e.f32(U.OPACITYFEATUREATTRIBUTE),has("enable-feature:objectAndLayerId-rendering")&&e.vec4u8(U.OBJECTANDLAYERIDCOLOR),e}createBufferWriter(){return new Z(this._layout,this.parameters)}createGLMaterial(e){return new k(e)}validateParameters(e){"miter"!==e.join&&(e.miterLimit=0),null!=e.markerParameters&&(e.markerScale=e.markerParameters.width/e.width)}}class k extends N{constructor(){super(...arguments),this._stipplePattern=null}dispose(){super.dispose(),this._stippleTextures.release(this._stipplePattern),this._stipplePattern=null}_updateOccludeeState(e){e.hasOccludees!==this._material.parameters.hasOccludees&&this._material.setParameters({hasOccludees:e.hasOccludees})}beginSlot(e){this._output===b.Color&&this._updateOccludeeState(e);const t=this._material.parameters.stipplePattern;return this._stipplePattern!==t&&(this._material.setParameters({stippleTexture:this._stippleTextures.swap(t,this._stipplePattern)}),this._stipplePattern=t),this.ensureTechnique(J,e)}}class V extends F{constructor(){super(...arguments),this.width=0,this.color=f,this.join="miter",this.cap=G.BUTT,this.miterLimit=5,this.writeDepth=!0,this.hasPolygonOffset=!1,this.stippleTexture=null,this.stipplePreferContinuous=!0,this.markerParameters=null,this.markerScale=1,this.hasSlicePlane=!1,this.vvFastUpdate=!1,this.isClosed=!1,this.falloff=0,this.innerWidth=0,this.hasOccludees=!1,this.wireframe=!1}}class Z{constructor(e,t){this.vertexBufferLayout=e,this._parameters=t,this.numJoinSubdivisions=0;const r=t.stipplePattern?1:0;switch(this._parameters.join){case"miter":case"bevel":this.numJoinSubdivisions=r;break;case"round":this.numJoinSubdivisions=B+r}}_isClosed(e){return Y(this._parameters,e.attributes)}allocate(e){return this.vertexBufferLayout.createBuffer(e)}elementCount(e){const t=2,r=e.attributes.get(U.POSITION).indices.length/2+1,s=this._isClosed(e);let i=s?2:2*t;return i+=((s?r:r-1)-(s?0:1))*(2*this.numJoinSubdivisions+4),i+=2,this._parameters.wireframe&&(i=2+4*(i-2)),i}write(e,t,r,s,a){const n=oe,o=le,l=ce,u=r.attributes.get(U.POSITION),m=u.indices,f=u.data.length/3,d=r.attributes.get(U.DISTANCETOSTART)?.data;m&&m.length!==2*(f-1)&&console.warn("RibbonLineMaterial does not support indices");const T=r.attributes.get(U.SIZEFEATUREATTRIBUTE)?.data[0]??r.attributes.get(U.SIZE)?.data[0]??1;let _=[1,1,1,1],E=0;const A=this.vertexBufferLayout.fields.has(U.COLORFEATUREATTRIBUTE);A?E=r.attributes.get(U.COLORFEATUREATTRIBUTE).data[0]:r.attributes.has(U.COLOR)&&(_=r.attributes.get(U.COLOR).data);const R=has("enable-feature:objectAndLayerId-rendering")?r.objectAndLayerIdColor:null,O=this.vertexBufferLayout.fields.has(U.OPACITYFEATUREATTRIBUTE),I=O?r.attributes.get(U.OPACITYFEATUREATTRIBUTE).data[0]:0,S=new Float32Array(s.buffer),g=has("enable-feature:objectAndLayerId-rendering")?new Uint8Array(s.buffer):null,b=this.vertexBufferLayout.stride/4;let v=a*b;const P=v;let L=0;const N=d?(e,t,r)=>L=d[r]:(e,t,r)=>L+=h(e,t),C=has("enable-feature:objectAndLayerId-rendering"),y=(e,t,r,s,i,a,n)=>{if(S[v++]=t[0],S[v++]=t[1],S[v++]=t[2],S[v++]=e[0],S[v++]=e[1],S[v++]=e[2],S[v++]=r[0],S[v++]=r[1],S[v++]=r[2],S[v++]=s,S[v++]=n,S[v++]=i,S[v++]=T,A)S[v++]=E;else{const e=Math.min(4*a,_.length-4);S[v++]=_[e],S[v++]=_[e+1],S[v++]=_[e+2],S[v++]=_[e+3]}O&&(S[v++]=I),C&&(null!=R&&(g[4*v]=R[0],g[4*v+1]=R[1],g[4*v+2]=R[2],g[4*v+3]=R[3]),v++)};v+=b,i(o,u.data[0],u.data[1],u.data[2]),e&&p(o,o,e);const j=this._isClosed(r);if(j){const t=u.data.length-3;i(n,u.data[t],u.data[t+1],u.data[t+2]),e&&p(n,n,e)}else i(l,u.data[3],u.data[4],u.data[5]),e&&p(l,l,e),y(o,o,l,1,H.LEFT_CAP_START,0,0),y(o,o,l,1,H.RIGHT_CAP_START,0,0),c(n,o),c(o,l);const D=j?0:1,F=j?f:f-1;for(let h=D;h<F;h++){const t=(h+1)%f*3;i(l,u.data[t],u.data[t+1],u.data[t+2]),e&&p(l,l,e),N(n,o,h),y(n,o,l,0,H.LEFT_JOIN_END,h,L),y(n,o,l,0,H.RIGHT_JOIN_END,h,L);const r=this.numJoinSubdivisions;for(let e=0;e<r;++e){const t=(e+1)/(r+1);y(n,o,l,t,H.LEFT_JOIN_END,h,L),y(n,o,l,t,H.RIGHT_JOIN_END,h,L)}y(n,o,l,1,H.LEFT_JOIN_START,h,L),y(n,o,l,1,H.RIGHT_JOIN_START,h,L),c(n,o),c(o,l)}j?(i(l,u.data[3],u.data[4],u.data[5]),e&&p(l,l,e),L=N(n,o,F),y(n,o,l,0,H.LEFT_JOIN_END,D,L),y(n,o,l,0,H.RIGHT_JOIN_END,D,L)):(L=N(n,o,F),y(n,o,o,0,H.LEFT_CAP_END,F,L),y(n,o,o,0,H.RIGHT_CAP_END,F,L)),W(S,P+b,S,P,b);v=W(S,v-b,S,v,b),this._parameters.wireframe&&this._addWireframeVertices(s,P,v,b)}_addWireframeVertices(e,t,r,s){const i=new Float32Array(e.buffer,r*Float32Array.BYTES_PER_ELEMENT),a=new Float32Array(e.buffer,t*Float32Array.BYTES_PER_ELEMENT,r-t);let n=0;const o=e=>n=W(a,e,i,n,s);for(let l=0;l<a.length-1;l+=2*s)o(l),o(l+2*s),o(l+1*s),o(l+2*s),o(l+1*s),o(l+3*s)}}function W(e,t,r,s,i){for(let a=0;a<i;a++)r[s++]=e[t++];return s}function Y(e,t){if(!e.isClosed)return!1;return t.get(U.POSITION).indices.length>2}function q(e){return e.anchor===w.Tip&&e.hideOnShortSegments&&"begin-end"===e.placement&&e.worldSpace}const X=m(),Q=m(),K=m(),$=m(),ee=m(),te=r(),re=r(),se=m(),ie=m(),ae=T(),ne=T(),oe=m(),le=m(),ce=m(),ue=[r(),r(),r(),r()],he=[m(),m(),m(),m()],pe=R(),me=R(),fe=R(),de=R();export{V as Parameters,z as RibbonLineMaterial};
