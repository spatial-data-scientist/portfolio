/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import{ViewingMode as t}from"../../../ViewingMode.js";import{ShaderOutput as o}from"../core/shaderLibrary/ShaderOutput.js";import{PBRMode as r}from"../core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js";import{WaterDistortionPassParameters as i}from"../core/shaderLibrary/shading/WaterDistortion.glsl.js";import{ReloadableShaderModule as s}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as a}from"../core/shaderTechnique/ShaderTechnique.js";import{parameter as n}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{Default3D as p}from"../lib/DefaultVertexAttributeLocations.js";import{blendingDefault as l,oitBlending as d,oitDepthTest as u,oitDepthWrite as c,oitDrawBuffers as h,getOITPolygonOffset as f}from"../lib/OrderIndependentTransparency.js";import{Program as m}from"../lib/Program.js";import{TransparencyPassType as y}from"../lib/TransparencyPassType.js";import{DefaultTechniqueConfiguration as b}from"./DefaultTechniqueConfiguration.js";import{W as v}from"../../../../chunks/WaterSurface.glsl.js";import{makePipelineState as g,defaultDepthWriteParams as j,defaultColorWriteParams as P}from"../../../webgl/renderState.js";class S extends i{}class T extends a{initializeConfiguration(e,o){o.spherical=e.viewingMode===t.Global,o.doublePrecisionRequiresObfuscation=e.rctx.driverTest.doublePrecisionRequiresObfuscation.result}initializeProgram(e){return new m(e.rctx,T.shader.get().build(this.configuration),p)}_setPipelineState(e){const t=this.configuration,r=e===y.NONE,i=e===y.FrontFace;return g({blending:t.output!==o.Normal&&t.output!==o.Highlight&&t.output!==o.ObjectAndLayerIdColor&&t.transparent?r?l:d(e):null,depthTest:t.draped?null:{func:u(e)},depthWrite:t.draped?null:r?t.writeDepth?j:null:c(e),drawBuffers:h(e),colorWrite:P,polygonOffset:r||i?null:f(t.enableOffset)})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}}T.shader=new s(v,(()=>import("../shaders/WaterSurface.glsl.js")));class O extends b{constructor(){super(...arguments),this.output=o.Color,this.transparencyPassType=y.NONE,this.spherical=!1,this.receiveShadows=!1,this.hasSlicePlane=!1,this.transparent=!1,this.enableOffset=!0,this.writeDepth=!1,this.hasScreenSpaceReflections=!1,this.doublePrecisionRequiresObfuscation=!1,this.hasCloudsReflections=!1,this.objectAndLayerIdColorInstanced=!1,this.draped=!1,this.multipassEnabled=!1,this.cullAboveGround=!1}}e([n({count:o.COUNT})],O.prototype,"output",void 0),e([n({count:y.COUNT})],O.prototype,"transparencyPassType",void 0),e([n()],O.prototype,"spherical",void 0),e([n()],O.prototype,"receiveShadows",void 0),e([n()],O.prototype,"hasSlicePlane",void 0),e([n()],O.prototype,"transparent",void 0),e([n()],O.prototype,"enableOffset",void 0),e([n()],O.prototype,"writeDepth",void 0),e([n()],O.prototype,"hasScreenSpaceReflections",void 0),e([n()],O.prototype,"doublePrecisionRequiresObfuscation",void 0),e([n()],O.prototype,"hasCloudsReflections",void 0),e([n()],O.prototype,"objectAndLayerIdColorInstanced",void 0),e([n()],O.prototype,"draped",void 0),e([n()],O.prototype,"multipassEnabled",void 0),e([n()],O.prototype,"cullAboveGround",void 0),e([n({constValue:!1})],O.prototype,"occlusionPass",void 0),e([n({constValue:r.Water})],O.prototype,"pbrMode",void 0),e([n({constValue:!0})],O.prototype,"useCustomDTRExponentForWater",void 0),e([n({constValue:!0})],O.prototype,"highStepCount",void 0),e([n({constValue:!1})],O.prototype,"useFillLights",void 0);export{S as WaterMaterialPassParameters,T as WaterTechnique,O as WaterTechniqueConfiguration};
