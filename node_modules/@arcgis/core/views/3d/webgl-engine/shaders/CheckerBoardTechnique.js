/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{ReloadableShaderModule as e}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as r}from"../core/shaderTechnique/ShaderTechnique.js";import{Default3D as t}from"../lib/DefaultVertexAttributeLocations.js";import{oitBlending as i,oitDepthTest as n,oitDepthWrite as o,oitDrawBuffers as s}from"../lib/OrderIndependentTransparency.js";import{Program as a}from"../lib/Program.js";import{TransparencyPassType as l}from"../lib/TransparencyPassType.js";import{C as p}from"../../../../chunks/CheckerBoard.glsl.js";import{BlendFactor as c}from"../../../webgl/enums.js";import{separateBlendingParams as f,makePipelineState as m,defaultDepthWriteParams as u,defaultColorWriteParams as d}from"../../../webgl/renderState.js";class h extends r{initializeProgram(e){return new a(e.rctx,h.shader.get().build(this.configuration),t)}_setPipelineState(e){const r=this.configuration,t=e===l.NONE,a=e===l.FrontFace;return m({blending:r.transparent?t?b:i(e):null,depthTest:{func:n(e)},depthWrite:t?r.writeDepth?u:null:o(e),drawBuffers:s(e),colorWrite:d,polygonOffset:t||a?r.polygonOffset?g:null:{factor:-1,units:-25}})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}}h.shader=new e(p,(()=>import("./CheckerBoard.glsl.js")));const g={factor:0,units:-25},b=f(c.SRC_ALPHA,c.ONE,c.ONE_MINUS_SRC_ALPHA,c.ONE_MINUS_SRC_ALPHA);export{h as CheckerBoardTechnique};
