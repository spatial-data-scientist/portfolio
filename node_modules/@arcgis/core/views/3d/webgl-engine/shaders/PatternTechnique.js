/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import has from"../../../../core/has.js";import{ShaderOutput as t}from"../core/shaderLibrary/ShaderOutput.js";import{ReloadableShaderModule as o}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as r}from"../core/shaderTechnique/ShaderTechnique.js";import{parameter as i}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{CullFaceOptions as s}from"../lib/basicInterfaces.js";import{blendingDefault as n,oitBlending as a,oitDepthTest as p,oitDepthWrite as l,oitDrawBuffers as c,getOITPolygonOffset as u}from"../lib/OrderIndependentTransparency.js";import{Program as d}from"../lib/Program.js";import{stencilWriteMaskOn as h,stencilToolMaskBaseParams as f,stencilBaseAllZerosParams as m}from"../lib/StencilUtils.js";import{TransparencyPassType as y}from"../lib/TransparencyPassType.js";import{VertexAttribute as O}from"../lib/VertexAttribute.js";import{DefaultTechniqueConfiguration as T}from"../materials/DefaultTechniqueConfiguration.js";import{Style as v}from"../materials/PatternStyle.js";import{P}from"../../../../chunks/Pattern.glsl.js";import{SpecialDrawBuffers as b}from"../../../webgl/enums.js";import{makePipelineState as g,cullingParams as C,defaultDepthWriteParams as j,defaultColorWriteParams as S}from"../../../webgl/renderState.js";class N extends r{initializeProgram(e){return new d(e.rctx,N.shader.get().build(this.configuration),has("enable-feature:objectAndLayerId-rendering")?R:I)}_setPipelineState(e,o){const r=this.configuration,i=e===y.NONE,s=e===y.FrontFace;return g({blending:r.output===t.Color?i?n:a(e):null,culling:C(r.cullFace),depthTest:r.draped?null:{func:p(e)},depthWrite:r.draped?null:i?j:l(e),drawBuffers:r.output===t.Depth?{buffers:[b.NONE]}:c(e),colorWrite:S,stencilWrite:r.hasOccludees?h:null,stencilTest:r.hasOccludees?o?f:m:null,polygonOffset:i||s?r.polygonOffset?E:null:u(r.enableOffset)})}initializePipeline(){return this._occludeePipelineState=this._setPipelineState(this.configuration.transparencyPassType,!0),this._setPipelineState(this.configuration.transparencyPassType,!1)}getPipeline(e){return e?this._occludeePipelineState:super.getPipeline()}}N.shader=new o(P,(()=>import("./Pattern.glsl.js")));const E={factor:1,units:1};class A extends T{constructor(){super(...arguments),this.output=t.Color,this.cullFace=s.None,this.transparencyPassType=y.NONE,this.hasSlicePlane=!1,this.hasVertexColors=!1,this.polygonOffset=!1,this.hasOccludees=!1,this.enableOffset=!0,this.multipassEnabled=!1,this.cullAboveGround=!1,this.vvColor=!1,this.objectAndLayerIdColorInstanced=!1}}e([i({count:t.COUNT})],A.prototype,"output",void 0),e([i({count:s.COUNT})],A.prototype,"cullFace",void 0),e([i({count:v.COUNT})],A.prototype,"style",void 0),e([i({count:y.COUNT})],A.prototype,"transparencyPassType",void 0),e([i()],A.prototype,"hasSlicePlane",void 0),e([i()],A.prototype,"hasVertexColors",void 0),e([i()],A.prototype,"polygonOffset",void 0),e([i()],A.prototype,"hasOccludees",void 0),e([i()],A.prototype,"patternSpacing",void 0),e([i()],A.prototype,"lineWidth",void 0),e([i()],A.prototype,"enableOffset",void 0),e([i()],A.prototype,"draped",void 0),e([i()],A.prototype,"multipassEnabled",void 0),e([i()],A.prototype,"cullAboveGround",void 0),e([i()],A.prototype,"vvColor",void 0),e([i({constValue:!0})],A.prototype,"writeDepth",void 0),e([i({constValue:!1})],A.prototype,"occlusionPass",void 0),e([i({constValue:!1})],A.prototype,"hasVvInstancing",void 0),e([i({constValue:!1})],A.prototype,"vvSize",void 0),e([i({constValue:!1})],A.prototype,"vvOpacity",void 0);const I=new Map([[O.POSITION,0],[O.COLOR,3],[O.UVMAPSPACE,4],[O.COLORFEATUREATTRIBUTE,5],[O.BOUNDINGRECT,6]]),R=new Map([[O.POSITION,0],[O.COLOR,3],[O.UVMAPSPACE,4],[O.COLORFEATUREATTRIBUTE,5],[O.BOUNDINGRECT,6],[O.OBJECTANDLAYERIDCOLOR,9]]);export{N as PatternTechnique,A as PatternTechniqueConfiguration,I as vertexAttributeLocations,R as vertexAttributeLocationsOID};
