/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{ShaderOutput as e}from"../core/shaderLibrary/ShaderOutput.js";import{ReloadableShaderModule as r}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as t}from"../core/shaderTechnique/ShaderTechnique.js";import{Default3D as i}from"../lib/DefaultVertexAttributeLocations.js";import{Program as o}from"../lib/Program.js";import{stencilWriteMaskOn as s,stencilBaseAllZerosParams as n}from"../lib/StencilUtils.js";import{b as l}from"../../../../chunks/PointRenderer.glsl.js";import{CompareFunction as u,SpecialDrawBuffers as a}from"../../../webgl/enums.js";import{makePipelineState as c,defaultDepthWriteParams as m,defaultColorWriteParams as h}from"../../../webgl/renderState.js";class d extends t{constructor(e,r,t){super(e,r,t)}initializeProgram(e){return new o(e.rctx,d.shader.get().build(this.configuration),i)}initializePipeline(){return c({depthTest:{func:u.LESS},depthWrite:m,colorWrite:h,stencilWrite:this.configuration.hasOccludees?s:null,stencilTest:this.configuration.hasOccludees?n:null,drawBuffers:this.configuration.output===e.Depth?{buffers:[a.NONE]}:null})}}d.shader=new r(l,(()=>import("./PointRenderer.glsl.js")));export{d as PointRendererTechnique};
