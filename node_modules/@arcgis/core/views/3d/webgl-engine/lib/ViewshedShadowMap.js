/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import has from"../../../../core/has.js";import{clamp as t}from"../../../../core/mathUtils.js";import{releaseMaybe as e}from"../../../../core/maybe.js";import{fromRotation as i}from"../../../../core/libs/gl-matrix-2/math/mat4.js";import{create as s}from"../../../../core/libs/gl-matrix-2/factories/mat4f64.js";import{z as r,g as a,k as o,h}from"../../../../chunks/vec32.js";import{create as n}from"../../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{ColorFormat as c,DepthFormat as u}from"../../webgl/formats.js";import{applyTextureResizeModulo as l,applyTextureResizeFloorModulo as f}from"./textureUtils.js";import{ViewshedFaceCamera as d}from"./ViewshedFaceCamera.js";import{ClearBufferBit as m}from"../../../webgl/enums.js";class x{constructor(){this.textureSizeModHighQuality=1.3,this.textureSizeModLowQuality=.9,this.textureSizeMultiple=128,this.toleranceSides=5,this.toleranceBottomTop=10}textureSizeModifier(t){return t?this.textureSizeModHighQuality:this.textureSizeModLowQuality}textureResizeModulo(t){return Math.ceil(t/this.textureSizeMultiple)*this.textureSizeMultiple}}const p=["front","left","right","back","top","bottom"];function _(t){return!["top","bottom"].includes(t)}class g{constructor(t){this._fbos=t,this._enabled=!1,this._faces={},this._textureWidth=0,this._textureHeight=0,this.settings=new x,this._maxTextureWidth=Math.min(has("esri-mobile")?4096:16384,t.rctx.parameters.maxTextureSize)}get depthTexture(){return this._handle?.getTexture()}get enabled(){return this._enabled}set enabled(t){this._enabled=t,t||this.disposeOffscreenBuffers()}get isTextureZero(){return 0===this._textureWidth||0===this._textureHeight}get nearFar(){const t=this.faces;return 0===t.length?null:t[0].nearFar}get numActiveFaces(){const t=this._faces;let e=0;return Object.keys(t).forEach((i=>{t[i]&&(e+=1)})),e}get faces(){const t=this._faces,e=[];for(const i of p){const s=t[i];s&&e.push(s)}return e}get atlasRegions(){return this.faces.map((t=>[t.x/this._textureWidth,(t.x+t.width)/this._textureWidth,t.y/this._textureHeight,(t.y+t.height)/this._textureHeight]))}get viewshedProjectionMatrices(){return this.faces.map((t=>t.projectionMatrix))}get viewshedViewMatrices(){return this.faces.map((t=>t.viewMatrix))}_setupFaceCamera(e,c,u,l){const{observerRenderSpace:f,tiltedUpVector:m,targetRenderSpace:x,farDistanceRenderSpace:p,horizontalFieldOfView:g,verticalFieldOfView:b}=c,M=n();r(M,x,f);const F=n(),w=n(),B=(t,e)=>{const r=n(),o=s();return i(o,t,e),h(r,M,o),a(r,f,r),r};let T,S=m;const z=Math.min(90,g),O=Math.min(90,Math.max(0,(g-90)/2));let j=-45,v=45,R=-45,k=45;if(_(e)){const e=e=>t(e,-45,45);R=e(-b/2)-this.settings.toleranceBottomTop,k=e(+b/2)+this.settings.toleranceBottomTop}switch(e){case"front":T=x,j=-z/2,v=z/2;break;case"left":T=B(Math.PI/2,m),j=45-O;break;case"right":T=B(-Math.PI/2,m),v=-45+O;break;case"top":T=a(F,f,m),S=o(w,M);break;case"bottom":T=r(F,f,m),S=M;break;case"back":T=B(Math.PI,m)}const H=new d({center:T,eye:f,up:S,far:p});H.sectionAnglesDeg=[j-this.settings.toleranceSides,v+this.settings.toleranceSides,R,k],H.fovY=Math.PI/2;const y=H.setViewport(u,l);return this._faces[e]=H,y}_bindFBO(){const t=this._fbos.rctx;t.unbindTexture(this.depthTexture),t.bindFramebuffer(this._handle?.fbo)}_computeActiveFaces(t){const e=new Set,{horizontalFieldOfView:i,verticalFieldOfView:s}=t,r=-s/2,a=s/2;return 0===i||0===s||(r<=45&&a>=-45&&e.add("front"),i>90&&(e.add("left"),e.add("right")),i>270&&e.add("back"),a>45-this.settings.toleranceBottomTop&&e.add("top"),r<-45+this.settings.toleranceBottomTop&&e.add("bottom")),e}_computeBaseTextureSize(t,e,i,s){const r=Math.min(window.devicePixelRatio,e)/t.pixelRatio,a=this.settings.textureSizeModifier(i),o=l(Math.floor(Math.max(t.fullWidth,t.fullHeight)*r*a)),h=Math.floor(this._maxTextureWidth/s),n=Math.min(h,o);return f(n)}_ensureFBO(){const t=this._textureWidth,e=this._textureHeight;this._handle?.fbo?.width===t&&this._handle?.fbo?.height===e||(this._handle?.release(),this._handle=this._fbos.acquire(t,e,"viewshed shadow map",c.RGBA4)),this._handle.acquireDepth(u.DEPTH16_BUFFER)}clearFBO(){const t=this._fbos.rctx;this._ensureFBO(),this._bindFBO(),t.setClearColor(1,1,1,1),t.clear(m.COLOR_BUFFER_BIT|m.DEPTH_BUFFER_BIT)}dispose(){this.enabled=!1,this.disposeOffscreenBuffers()}disposeOffscreenBuffers(){this._handle=e(this._handle)}start(t,e,i,s){if(this._faces={},!this.enabled)return!1;const r=this._computeActiveFaces(e),a=r.size;if(0===a)return!1;const o=this._computeBaseTextureSize(t,s,i,a);if(0===o)return!1;let h=0,n=0,c=0;return p.filter((t=>r.has(t))).forEach((t=>{const i=b(t,a);i>n&&(c=Math.max(c,h),h=0),n=i;const s=i*o;h+=this._setupFaceCamera(t,e,[h,s],o)})),c=Math.max(c,h),this._textureWidth=this.settings.textureResizeModulo(c),this._textureHeight=M(a)*o,this.clearFBO(),!0}finish(){this._handle?.detachDepth()}get test(){return{faces:this._faces,faceTypes:p}}}function b(t,e){if(e<4)return 0;const i="front"===t||"left"===t;return 4===e?i?0:1:i||"right"===t?0:1}function M(t){return t<4?1:2}export{g as ViewshedShadowMap};
