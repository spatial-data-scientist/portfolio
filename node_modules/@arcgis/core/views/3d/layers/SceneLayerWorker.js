/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{hasScaling as e}from"../../../core/mathUtils.js";import r from"../../../geometry/SpatialReference.js";import{toFloat64Array as t}from"../../../geometry/support/DoubleArray.js";import o from"../../../geometry/support/MeshGeoreferencedVertexSpace.js";import n from"../../../geometry/support/MeshLocalVertexSpace.js";import{t as s,n as i}from"../../../chunks/vec3.js";import{IndexType as a}from"../../../libs/i3s/enums.js";import{get as f}from"../../../libs/i3s/I3SModule.js";import{NodeIMModificationImpact as c}from"./i3s/I3SNode.js";async function l(e){w=await x();const r=[e.geometryBuffer];return{result:j(w,e,r),transferList:r}}async function u(e){w=await x();const r=[e.geometryBuffer],{geometryBuffer:t}=e,o=t.byteLength,n=w._malloc(o),s=new Uint8Array(w.HEAPU8.buffer,n,o);s.set(new Uint8Array(t));const i=w.dracoDecompressPointCloudData(n,s.byteLength);if(w._free(n),i.error.length>0)throw new Error(`i3s.wasm: ${i.error}`);const a=i.featureIds?.length>0?i.featureIds.slice():null,f=i.positions.slice();return a&&r.push(a.buffer),r.push(f.buffer),{result:{positions:f,featureIds:a},transferList:r}}async function m(e){await x(),L(e);const r={buffer:e.buffer};return{result:r,transferList:[r.buffer]}}async function y(e){await x(),E(e)}async function p(e){w=await x(),w.setLegacySchema(e.context,e.jsonSchema)}async function d(e){const{localMatrix:s,origin:i,positions:a,vertexSpace:f,localMode:c}=e,l=r.fromJSON(e.inSpatialReference),u=r.fromJSON(e.outSpatialReference);let m;const[{projectBuffer:y},{initializeProjection:p}]=await Promise.all([import("../../../geometry/projection/projectBuffer.js"),import("../../../geometry/projection.js")]);await p(l,u);const d=[0,0,0];if(!y(i,l,0,d,u,0,1))throw new Error("Failed to project");if("georeferenced"===f.type&&null==f.origin){if(m=new Float64Array(a.length),!y(a,l,0,m,u,0,m.length/3))throw new Error("Failed to project")}else{const e="georeferenced"===f.type?o.fromJSON(f):n.fromJSON(f),{project:r}=await import("../../../geometry/support/meshUtils/projection.js"),i=r({positions:a,transform:s?{localMatrix:s}:void 0,vertexSpace:e,inSpatialReference:l,outSpatialReference:u,localMode:c});if(!i)throw new Error("Failed to project");m=t(i)}const b=m.length,[h,g,w]=d;for(let r=0;r<b;r+=3)m[r]-=h,m[r+1]-=g,m[r+2]-=w;return{result:{projected:m,original:a,projectedOrigin:d},transferList:[m.buffer,a.buffer]}}async function b({normalMatrix:r,normals:t}){const o=new Float32Array(t.length);return s(o,t,r),e(r)&&i(o,o),{result:{transformed:o,original:t},transferList:[o.buffer,t.buffer]}}function h(e){I(e)}let g,w;function E(e){if(!w)return;const r=e.modifications,t=w._malloc(8*r.length),o=new Float64Array(w.HEAPU8.buffer,t,r.length);for(let n=0;n<r.length;++n)o[n]=r[n];w.setModifications(e.context,t,r.length,e.isGeodetic),w._free(t)}function j(e,r,t){const{context:o,globalTrafo:n,mbs:s,obbData:i,elevationOffset:f,geometryBuffer:c,geometryDescriptor:l,indexToVertexProjector:u,vertexToRenderProjector:m}=r,y=e._malloc(c.byteLength),p=33,d=e._malloc(p*Float64Array.BYTES_PER_ELEMENT),b=new Uint8Array(e.HEAPU8.buffer,y,c.byteLength);b.set(new Uint8Array(c));const h=new Float64Array(e.HEAPU8.buffer,d,p);S(h,[NaN,NaN,NaN]);let g=h.byteOffset+3*h.BYTES_PER_ELEMENT,w=new Float64Array(h.buffer,g);S(w,n),g+=16*h.BYTES_PER_ELEMENT,w=new Float64Array(h.buffer,g),S(w,s),g+=4*h.BYTES_PER_ELEMENT,i&&(w=new Float64Array(h.buffer,g),S(w,i));const E=l,j={isDraco:!1,isLegacy:!1,color:r.layouts.some((e=>e.some((e=>"color"===e.name)))),normal:r.needNormals&&r.layouts.some((e=>e.some((e=>"normalCompressed"===e.name)))),uv0:r.layouts.some((e=>e.some((e=>"uv0"===e.name)))),uvRegion:r.layouts.some((e=>e.some((e=>"uvRegion"===e.name)))),featureIndex:E.featureIndex},A=e.process(o,!!r.obbData,y,b.byteLength,E,j,d,f,u,m,r.normalReferenceFrame);if(e._free(d),e._free(y),A.error.length>0)throw new Error(`i3s.wasm: ${A.error}`);if(A.discarded)return null;const L=A.componentOffsets.length>0?A.componentOffsets.slice():null,I=A.featureIds.length>0?A.featureIds.slice():null,_=A.anchorIds.length>0?Array.from(A.anchorIds):null,x=A.anchors.length>0?Array.from(A.anchors):null,M=A.interleavedVertedData.slice().buffer,N=A.indicesType===a.Int16?new Uint16Array(A.indices.buffer,A.indices.byteOffset,A.indices.byteLength/2).slice():new Uint32Array(A.indices.buffer,A.indices.byteOffset,A.indices.byteLength/4).slice(),P=A.positions.slice(),U=A.positionIndicesType===a.Int16?new Uint16Array(A.positionIndices.buffer,A.positionIndices.byteOffset,A.positionIndices.byteLength/2).slice():new Uint32Array(A.positionIndices.buffer,A.positionIndices.byteOffset,A.positionIndices.byteLength/4).slice(),T={layout:r.layouts[0],interleavedVertexData:M,indices:N,hasColors:A.hasColors,hasModifications:A.hasModifications,positionData:{data:P,indices:U}};return I&&t.push(I.buffer),L&&t.push(L.buffer),t.push(M),t.push(N.buffer),t.push(P.buffer),t.push(U.buffer),{componentOffsets:L,featureIds:I,anchorIds:_,anchors:x,transformedGeometry:T,obb:A.obb,globalTrafo:n}}function A(e){return 0===e?c.Unmodified:1===e?c.PotentiallyModified:2===e?c.Culled:c.Unknown}function L(e){if(!w)return;const{context:r,buffer:t}=e,o=w._malloc(t.byteLength),n=t.byteLength/Float64Array.BYTES_PER_ELEMENT,s=new Float64Array(w.HEAPU8.buffer,o,n),i=new Float64Array(t);s.set(i),w.filterOBBs(r,o,n),i.set(s),w._free(o)}function I(e){w&&0===w.destroy(e)&&(w=null)}function S(e,r){for(let t=0;t<r.length;++t)e[t]=r[t]}async function _(){w||await x()}function x(){return w?Promise.resolve(w):(g||(g=f().then((e=>(w=e,g=null,w)))),g)}const M={transform:(e,r)=>w&&j(w,e,r),destroy:I};export{h as destroyContext,u as dracoDecompressPointCloudData,m as filterObbsForModifications,L as filterObbsForModificationsSync,_ as initialize,A as interpretObbModificationResults,l as process,d as project,p as setLegacySchema,y as setModifications,E as setModificationsSync,M as test,b as transformNormals};
