/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../core/Error.js";import has from"../../../core/has.js";import r from"../../../core/Logger.js";import{destroyMaybe as i}from"../../../core/maybe.js";import{watch as s,initial as o}from"../../../core/reactiveUtils.js";import{schedule as n}from"../../../core/scheduling.js";import{property as a}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/RandomLCG.js";import{subclass as l}from"../../../core/accessorSupport/decorators/subclass.js";import{fromMat4 as c,invert as m}from"../../../core/libs/gl-matrix-2/math/mat3.js";import{IDENTITY as d,create as h}from"../../../core/libs/gl-matrix-2/factories/mat3f64.js";import{translate as u,getTranslation as p}from"../../../core/libs/gl-matrix-2/math/mat4.js";import{create as f}from"../../../core/libs/gl-matrix-2/factories/mat4f64.js";import{fromValues as g}from"../../../core/libs/gl-matrix-2/factories/quatf64.js";import{g as b,t as y}from"../../../chunks/vec32.js";import{fromArray as w,create as v}from"../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{fromValues as _}from"../../../core/libs/gl-matrix-2/factories/vec4f64.js";import{SphericalECEFSpatialReferenceLike as x}from"../../../geometry/ellipsoidUtils.js";import{computeTranslationToOriginAndRotation as j}from"../../../geometry/projection/computeTranslationToOriginAndRotation.js";import{localLinearScaleFactors as C}from"../../../geometry/projection/localLinearScaleFactors.js";import{projectVectorToVector as T}from"../../../geometry/projection/projectVectorToVector.js";import{BufferViewVec4f as M,BufferViewVec4u8 as P,BufferViewVec4u16 as O,BufferViewVec3f as U,BufferViewVec3u8 as E,BufferViewVec3u16 as V,BufferViewVec2f as I,BufferViewInt16 as H,BufferViewUint32 as R,BufferViewUint16 as A}from"../../../geometry/support/buffer/BufferView.js";import{invalidLayerView as F,wasmFailedToInit as S,Lyr3DPrimitiveType as L,Lyr3DLightingModel as D,Lyr3DUvWrapMode as k,Lyr3DImageFormat as B,Lyr3DPixelFormat as G,Lyr3DVtxAtrbSemantic as N,Lyr3DType as z}from"../../../layers/ILyr3DWasmPerSceneView.js";import{getElevationOffsetInMeters as W}from"../../../support/elevationInfoUtils.js";import{ViewingMode as $}from"../../ViewingMode.js";import{IntegratedMesh3DTilesViewPerformanceInfo as J}from"./IntegratedMesh3DTilesViewPerformanceInfo.js";import{DrapeTargetType as q}from"./interfaces.js";import{LayerView3D as K}from"./LayerView3D.js";import{addLayerViewToWasm as Q,removeLayerViewFromWasm as X,getLyr3DWasm as Y}from"./Lyr3DWasm.js";import{LayerElevationProvider as Z}from"./i3s/LayerElevationProvider.js";import{primTypeConversion as ee,alphaModeConversion as te,faceCullingConversion as re,wrapModeConversion as ie,lyr3DTypeToByteSize as se}from"./support/lyr3dTypeConversions.js";import{Tiles3DIntersectionHandler as oe}from"./support/Tiles3DIntersectionHandler.js";import{ElevationRange as ne}from"../support/ElevationRange.js";import{Obb as ae,compute as le}from"../support/orientedBoundingBox.js";import{ObjectParameters as ce}from"../webgl-engine/collections/Component/ObjectParameters.js";import{createVertexBufferLayout as me}from"../webgl-engine/collections/Component/SourceGeometry.js";import{Transform as de}from"../webgl-engine/collections/Component/Transform.js";import{ComponentParameterSummary as he}from"../webgl-engine/collections/Component/Material/ComponentMaterial.js";import{RenderTexture as ue}from"../webgl-engine/core/material/RenderTexture.js";import{TextureCoordinateAttributeType as pe}from"../webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js";import{getEllipsoidMode as fe}from"../webgl-engine/core/shaderLibrary/util/EllipsoidMode.js";import{Attribute as ge}from"../webgl-engine/lib/Attribute.js";import{CullFaceOptions as be,AlphaDiscardMode as ye,TextureEncodingMimeType as we}from"../webgl-engine/lib/basicInterfaces.js";import{compressAndTransformNormals as ve}from"../webgl-engine/lib/Normals.js";import{Texture as _e}from"../webgl-engine/lib/Texture.js";import{VertexAttribute as xe}from"../webgl-engine/lib/VertexAttribute.js";import{writeDefaultAttribute as je}from"../webgl-engine/materials/internal/bufferWriterUtils.js";import Ce from"../../layers/LayerView.js";import{isInEffectiveScaleRange as Te}from"../../support/layerViewUtils.js";var Me;!function(e){e[e.API=1]="API",e[e.VerboseAPI=2]="VerboseAPI",e[e.Error=3]="Error"}(Me||(Me={}));class Pe{constructor(){this.handle=0,this.isVisible=!1,this.components=[],this.texMemoryUsage=0,this.vboMemoryUsage=0,this.cpuMemoryUsage=0,this.textures=[]}totalMemory(){return this.texMemoryUsage+this.vboMemoryUsage+this.cpuMemoryUsage}}function Oe(e){return Math.round(e/1048.576)/1e3}let Ue=class extends(K(Ce)){constructor(){super(...arguments),this.type="integrated-mesh-3dtiles",this._visibleGeometryChangedSchedulerHandle=null,this._wasmLayerId=-1,this.ignoresMemoryFactor=!1,this.drapeTargetType=q.WithoutRasterImage,this._lyrHandleToObjects=new Map,this._initialCullFace=new Map,this._suspendedHandle=null,this._dbgFlags=new Set}initialize(){if(this._dbgFlags.add(Me.Error),this._dbg(Me.VerboseAPI,"Tiles3DLayerView3D initialize() called"),!this._canProjectWithoutEngine())throw new t("layerview:spatial-reference-incompatible","The spatial reference of this scene layer is incompatible with the spatial reference of the view",{});const e=Q(this).then((e=>{this._intersectionHandler=new oe(this),this.view.sceneIntersectionHelper.addIntersectionHandler(this._intersectionHandler),this._updatingHandles.add((()=>this.slicePlaneEnabled),(e=>this._slicePlaneEnabledChange(e))),this._elevationProvider=new Z({view:this.view,layerElevationSource:this,intersectionHandler:this._intersectionHandler}),this.view.elevationProvider.register("im",this._elevationProvider),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this),this._wasmLayerId=e;const t=this.view.resourceController.memoryController.newCache(`t3d-${this.uid}`,(e=>this._onRemoveFromCache(e)));this._memCache=t,this.addHandles([s((()=>this.layer.elevationInfo),(e=>this._elevationInfoChanged(e)))]),this._suspendedHandle=s((()=>this.suspended),(e=>{const t=Y(this.view);t&&t.setEnabled(this,!e)}),o)})).catch((e=>{if(X(this),this._wasmLayerId=-1,e===F)throw new t("tiles3d:addLayer-failure","The 3d tiles layer description was invalid.",{});if(e===S)throw new t("tiles3d:addLayer-failure","The 3d tiles layer web assembly module failed to download.",{})}));this.addResolvingPromise(e)}destroy(){this._dbg(Me.VerboseAPI,"Tiles3DLayerView3D destroy() called"),X(this),this._suspendedHandle&&(this._suspendedHandle.remove(),this._suspendedHandle=null),this._intersectionHandler&&(this.view.sceneIntersectionHelper.removeIntersectionHandler(this._intersectionHandler),this._intersectionHandler=null),this._elevationProvider&&(this._elevationProvider.objectsChanged(this._obbs),this.view.elevationProvider.unregister(this._elevationProvider),this._elevationProvider=null),this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this),this._lyrHandleToObjects.forEach((e=>this.freeObject(e))),this._lyrHandleToObjects.clear(),this._initialCullFace.clear(),this._memCache=i(this._memCache),this._updatingHandles=i(this._updatingHandles),this.emit("visible-geometry-changed"),this._visibleGeometryChangedSchedulerHandle&&(this._visibleGeometryChangedSchedulerHandle.remove(),this._visibleGeometryChangedSchedulerHandle=null)}_visibleGeometryChanged(){null==this._visibleGeometryChangedSchedulerHandle&&(this._visibleGeometryChangedSchedulerHandle=n((()=>{this.emit("visible-geometry-changed"),this._visibleGeometryChangedSchedulerHandle=null})))}_slicePlaneEnabledChange(e){this._intersectionHandler&&(this._intersectionHandler.slicePlaneEnabled=e),this.objects.forEach((t=>{const r=this._collection.getMaterial(t);r.commonMaterialParameters.hasSlicePlane=e,r.commonMaterialParameters.cullFace=e?be.None:this._initialCullFace.get(t)}))}_elevationInfoChanged(e){const t=Y(this.view);t&&t.setLayerOffset(this,W(e))}get _obbs(){return this.objects.map((e=>this._collection.getComponentObb(e)))}get wasmLayerId(){return this._wasmLayerId}get usedMemory(){let e=0;return this._lyrHandleToObjects.forEach((t=>{t.isVisible&&(e+=t.totalMemory())})),e}get unloadedMemory(){let e=0;return this._lyrHandleToObjects.forEach((t=>{t.isVisible||(e+=t.totalMemory())})),e}get visibleAtCurrentScale(){return Te(this.layer.effectiveScaleRange,this.view.terrainScale)}get performanceInfo(){let e=0,t=0,r=0,i=0,s=0,o=0;return this._lyrHandleToObjects.forEach((n=>{n.isVisible?(e+=n.texMemoryUsage,t+=n.vboMemoryUsage,s++):(r+=n.texMemoryUsage,i+=n.vboMemoryUsage,o++)})),new J(this.usedMemory,s,o,Oe(t),Oe(e),Oe(i),Oe(r))}_canProjectWithoutEngine(){if(this.view.state.viewingMode===$.Local){const e=this.view.renderSpatialReference?.isWebMercator?3857:this.view.renderSpatialReference?.wkid??-1;if(3857!==e&&32662!==e)return!1}return!0}get _stage(){return this.view._stage}get _collection(){return this._stage.renderView.componentObjectCollection}get elevationOffset(){return W(this.layer.elevationInfo)}get elevationRange(){const e=this.fullExtent;return e?.zmin&&e?.zmax?new ne(e.zmin,e.zmax):null}getElevationRange(e){return null}get fullExtent(){return this.layer.fullExtent}get objects(){return Array.from(this._lyrHandleToObjects.values()).reduce(((e,t)=>e.concat(t.components)),new Array)}isUpdating(){const e=Y(this.view);return!(this._wasmLayerId<0||null==e)&&e.isUpdating(this._wasmLayerId)}updatingFlagChanged(){this.notifyChange("updating")}async createRenderable(e){const t=e.meshData;if(null==t.data)throw new Error("meshData.data undefined");if(t.desc=JSON.parse(t.desc),null==t.desc)throw new Error("meshData.desc undefined");const r=w(t.desc.origin),i=new Array,s=new Map,o=new Pe;o.handle=e.handle,this._lyrHandleToObjects.set(e.handle,o);const n=this.view.basemapTerrain.spatialReference;let a,l;if("global"===this.view.viewingMode){const e=f();j(x,r,e,n),a=c(h(),e),l=m(h(),a)}else a=d,l=d;const M=f();u(M,M,r);const P=p(v(),M);let O=null;const U=v();if(t.desc.obb){const e=t.desc.obb.quaternion;O=new ae(t.desc.obb.center,t.desc.obb.halfSize,g(e[0],e[1],e[2],e[3]))}for(let c=0;c<t.desc.prims.length;c++){const e=t.desc.prims[c];if(this._dbg(Me.VerboseAPI,JSON.stringify(e)),e.ptype===L.Lines)continue;if(null==ee[e.ptype]||null==t.data){this._dbg(Me.VerboseAPI,"[Unsupported Feature] Unsupported primitive mode ("+e.ptype+"). Skipping primitive.");continue}const m=t.desc?.materials&&null!=e.materialId?t.desc.materials[e.materialId]:null,h=null!=m?m.lightingModel:D.Unlit,u=!has("disable-feature:im-shading"),{positionView:p,positionAttr:f,normalsView:g,normalsAttr:w,colorAttr:x,texCoord0Attr:j,indicesView:M}=this.getBufferViews(e,t.data.buffer,a,u);if(null==f||null==p||null==M)continue;const E={colors:null!=x,textureCoordinates:null!=j?pe.Default:pe.None,hasNormals:null!=g,needsNormals:u},V=f.data.length/f.size,I=(e,t)=>!e||e.data.length/e.size===V||(this._dbg(Me.Error,`${t} !== numPos. Skipping primitive.`),!1);if(!I(j,"numTexcoord")||!I(x,"numColors")||!I(w,"normals"))continue;const H=me(E);if(null!=O?O=O.clone():(O=le(f),b(U,O.center,r),O.center=U),a!==d)for(let t=0;t<p.count;t++)p.getVec(t,U),y(U,U,a),p.setVec(t,U);const R=H.createBuffer(f.data.length),A=new Map([[xe.POSITION,f]]);null!=j&&A.set(xe.UV0,j),null!=x&&A.set(xe.COLOR,x),null!=w&&A.set(xe.NORMALCOMPRESSED,w),A.forEach(((e,t)=>{null!=e&&je(t,e,null,null,R,0)}));const F=new Uint32Array([0,M.typedBuffer.length]),S={vertices:{data:R.buffer,count:R.byteLength/H.stride,layoutParameters:E},positionData:{positions:p.typedBuffer,indices:M.typedBuffer},indices:M.typedBuffer,componentOffsets:F};o.cpuMemoryUsage+=p.count,o.cpuMemoryUsage+=M.count;const k=this.view.renderSpatialReference,B=v(),G=[1,1,1];C(P,k,G,n)||this._dbg(Me.Error,"Unsupported coordinate system for IM overlay"),T(P,k,B,n);const N=this._collection.createObject(new ce(_(B[0],B[1],G[0],G[1]),new de(P,l),O,S));m&&this._collection.updateMaterial(N,(e=>{e.baseColor=m.baseColorFactor,e.usePBR=h===D.Pbr,e.hasParametersFromSource=!1,e.baseColorTexture=this._getTexture(m.baseColorTex,t,s),e.usePBR&&(e.mrrFactors=[m.metallicFactor,m.roughnessFactor,0],e.emissiveFactor=m.emissiveFactor??[0,0,0],e.metallicRoughnessTexture=this._getTexture(m.metalTex,t,s),e.emissionTexture=this._getTexture(m.emissiveTex,t,s),e.occlusionTexture=this._getTexture(m.occlusionTex,t,s),e.normalTexture=this._getTexture(m.normalTex,t,s)),e.objectOpacity=0,e.alphaDiscardMode=ye.Mask;const r=[];e.baseColorTexture&&r.push(e.baseColorTexture.loadPromise),e.usePBR&&e.metallicRoughnessTexture&&r.push(e.metallicRoughnessTexture.loadPromise),e.usePBR&&e.emissionTexture&&r.push(e.emissionTexture.loadPromise),e.usePBR&&e.occlusionTexture&&r.push(e.occlusionTexture.loadPromise),e.usePBR&&e.normalTexture&&r.push(e.normalTexture.loadPromise);const n=Promise.all(r);i.push(n),n.then((()=>{e.alphaDiscardMode=te[m.alphaMode],e.objectOpacity=1,o.texMemoryUsage+=e.baseColorTexture?.glTexture?.usedMemory||0,e.usePBR&&(o.texMemoryUsage+=e.metallicRoughnessTexture?.glTexture?.usedMemory||0,o.texMemoryUsage+=e.emissionTexture?.glTexture?.usedMemory||0,o.texMemoryUsage+=e.occlusionTexture?.glTexture?.usedMemory||0,o.texMemoryUsage+=e.normalTexture?.glTexture?.usedMemory||0)})),e.commonMaterialParameters.doubleSided=m.isDoubleSided,e.commonMaterialParameters.cullFace=m.faceCulling?re[m.faceCulling]:be.Back,this._initialCullFace.set(N,e.commonMaterialParameters.cullFace),e.commonMaterialParameters.hasSlicePlane=this.slicePlaneEnabled,e.componentParameters.castShadows=he.All,e.textureAlphaCutoff=m.alphaCutoff??.1,e.alphaDiscardMode=te[m.alphaMode],e.isIntegratedMesh=!0,e.polygonOffsetEnabled=!1,e.hasOccludees=!1,e.ellipsoidMode=fe(this.view.spatialReference)})),o.components.push(N),o.vboMemoryUsage+=this._collection.getObjectGPUMemoryUsage(N)}if(await Promise.all(i),s.forEach((e=>{o.textures.push(e)})),!this._memCache)throw new Error("no memCache");return this._memCache.put(`${o.handle}`,o,o.totalMemory()),{memUsageBytes:o.totalMemory()}}freeRenderable(e){const t=this._lyrHandleToObjects.get(e);t&&(this.freeObject(t),this._lyrHandleToObjects.delete(e))}freeObject(e){this._memCache&&this._memCache.pop(`${e.handle}`),e.components.forEach((t=>{e.textures.forEach((e=>{this._stage.remove(e)})),this._collection.destroyObject(t),this._initialCullFace.delete(t)}))}setRenderableVisibility(e,t,r){if(this._memCache){for(let i=0;i<r;++i){const r=e[i],s=t[i];if(!s)continue;const o=this._lyrHandleToObjects.get(r);o&&(this._visibleGeometryChanged(),o.isVisible=s,o.components.forEach((e=>{this._collection.setObjectVisibility(e,s),this._elevationProvider.objectChanged(this._collection.getComponentObb(e))})),this._memCache.pop(`${r}`))}for(let i=0;i<r;++i){const r=e[i],s=t[i];if(s)continue;const o=this._lyrHandleToObjects.get(r);o&&(this._visibleGeometryChanged(),o.isVisible=s,o.components.forEach((e=>{this._collection.setObjectVisibility(e,s),this._elevationProvider.objectChanged(this._collection.getComponentObb(e))})),this._memCache.put(`${r}`,o,o.totalMemory()))}}}_getTexture(e,t,r){let i=null;if(e&&t.desc?.images&&t.data?.buffer){const s=t.desc.images[e?.imageId];if(i=r.get(s),!i&&s){const o=this._stage.renderView.renderingContext.parameters.maxMaxAnisotropy,n=o>1,a=ie[e.wrapMode??k.None];let l=s.alpha?4:3;const c=new Uint8Array(t.data.buffer,s.data.byteOffset,s.data.byteCount);let m=null,d=null,h=null;switch(s.format){case B.Raw:s.pixelFormat===G.R8?(m=c.buffer,l=1,d=""):s.pixelFormat===G.Rgb8?(m=c.buffer,l=3,d=""):s.pixelFormat===G.Rgba8&&(m=c.buffer,l=4,d="");break;case B.Dxt1:m=c.buffer,l=3,d=we.DDS_ENCODING;break;case B.Dxt5:m=c.buffer,l=4,d=we.DDS_ENCODING;break;case B.Png:d="image/png",h=document.createElement("img");break;case B.Jpeg:d="image/jpeg",h=document.createElement("img");break;case B.Etc2:d="image/ktx",h=document.createElement("img");break;case B.Astc:this._dbg(Me.Error,"Astc texture not supported");break;case B.Pvrtc:this._dbg(Me.Error,"Pvrtc texture not supported")}if(h&&d){const e=new Blob([c],{type:d});h.src=URL.createObjectURL(e),m=h}m&&null!=d&&(i=new _e(m,{mipmap:n,maxAnisotropy:o,encoding:d,wrap:a,components:l,noUnpackFlip:!0,width:s.mip0Width,height:s.mip0Height}),this._stage.add(i),r.set(s,i))}}return i?new ue(this.view._stage.renderView.textures,i.id):null}getBufferViews(e,t,r,i){let s,o,n,a,l,c,m,d=null;for(let u=0;u<e.atrbs.length;u++){const m=e.atrbs[u],p=m.view,f=void 0,g=p.byteOffset+p.byteCount,b=p.byteCount/se[p.type],y=[...Array(b).keys()].map((e=>e));try{switch(m.sem){case N.Position:3!==p.ncomp||p.type!==z.F32?this._dbg(Me.Error,"[Unsupported Feature] Unsupported view for Position ("+p+")"):(s=new U(t,p.byteOffset,f,g),o=new ge(s.typedBuffer,y,3));break;case N.Normal:if(3!==p.ncomp||p.type!==z.F32)this._dbg(Me.Error,"[Unsupported Feature] Unsupported view for Normal ("+p+")");else if(i){const e=new U(t,p.byteOffset,f,g),i=ve(e.typedBuffer,r);l=new H(i),c=new ge(l.typedBuffer,y,2)}break;case N.TexCoord:2!==p.ncomp||p.type!==z.F32?this._dbg(Me.Error,"[Unsupported Feature] Unsupported view for Texcoord ("+p+")"):void 0===a&&(a=new ge(new I(t,p.byteOffset,f,g).typedBuffer,y,2));break;case N.Color:4===p.ncomp?(p.type===z.F32&&(d=new M(t,p.byteOffset,f,g)),p.type===z.U8&&(d=new P(t,p.byteOffset,f,g)),p.type===z.U16&&(d=new O(t,p.byteOffset,f,g))):3===p.ncomp&&(p.type===z.F32&&(d=new U(t,p.byteOffset,f,g)),p.type===z.U8&&(d=new E(t,p.byteOffset,f,g)),p.type===z.U16&&(d=new V(t,p.byteOffset,f,g))),null==d?this._dbg(Me.VerboseAPI,"[Unsupported Feature] Unsupported view for Color ("+p+")"):n=new ge(d.typedBuffer,y,p.ncomp);break;case N.FeatureIndex:break;default:this._dbg(Me.VerboseAPI,"[Unsupported Feature] Unsupported semantic ("+m.sem+"). Skipping vertex attribute.")}}catch(h){this._dbg(Me.VerboseAPI,"Error Creating buffer ("+h+"). Skipping vertex attribute.")}}if(e.index){const r=e.index.view,i=void 0,s=r.byteOffset+r.byteCount;switch(e.index.view.type){case z.U16:m=new A(t,r.byteOffset,i,s);break;case z.U32:m=new R(t,r.byteOffset,i,s);break;case z.U8:default:this._dbg(Me.Error,"[Unsupported Feature] index type not supported ("+r.type+").")}}if(null==m&&null!=s){const e=s.count;if(e<65535){const t=new Uint16Array(e);m=new A(t)}else{const t=new Uint32Array(e);m=new R(t)}for(let t=0;t<e;t++)m.set(t,t)}return{positionView:s,positionAttr:o,colorAttr:n,texCoord0Attr:a,indicesView:m,normalsView:l,normalsAttr:c}}_onRemoveFromCache(e){const t=Y(this.view);t&&t.onRenderableEvicted(this,e.handle,e.totalMemory()),this.freeRenderable(e.handle)}_dbg(e,t){this._dbgFlags.has(e)&&(e===Me.Error?r.getLogger(this).error(t):r.getLogger(this).warn(t))}};e([a()],Ue.prototype,"_visibleGeometryChangedSchedulerHandle",void 0),e([a()],Ue.prototype,"layer",void 0),e([a({readOnly:!0})],Ue.prototype,"visibleAtCurrentScale",null),e([a()],Ue.prototype,"elevationOffset",null),Ue=e([l("esri.views.3d.layers.IntegratedMesh3DTilesLayerView3D")],Ue);const Ee=Ue;export{Ee as default};
