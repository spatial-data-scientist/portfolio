/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import e from"../../../../core/Error.js";import has from"../../../../core/has.js";import{releaseMaybe as t}from"../../../../core/maybe.js";import{isPromiseLike as r}from"../../../../core/promiseUtils.js";import{pt2px as n}from"../../../../core/screenUtils.js";import{fromValues as s,ZEROS as i,create as o}from"../../../../core/libs/gl-matrix-2/factories/vec2f64.js";import{fromValues as l}from"../../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{hasCalloutSupport as a,textSymbolLayerSupportsVerticalOffset as c}from"../../../../symbols/callouts/calloutUtils.js";import{perObjectElevationAligner as m}from"./ElevationAligners.js";import{SymbolUpdateType as f,needsElevationUpdates2D as h}from"./elevationAlignmentUtils.js";import{ElevationContext as p}from"./ElevationContext.js";import{Graphics3DObject3DGraphicLayer as u}from"./Graphics3DObject3DGraphicLayer.js";import{Graphics3DObjectMetadata as d}from"./Graphics3DObjectMetadata.js";import{Graphics3DSymbolLayer as g}from"./Graphics3DSymbolLayer.js";import{validateSymbolLayerSize as y}from"./graphicUtils.js";import{LabelParameters as x,LabelPlacement as v}from"./LabelParameters.js";import{verticalScreenOffsetFromAlignment as b,verticalPlacementFromAlignment as O,textRenderAlignmentFromHorizontalPlacement as P,horizontalPlacementToAnchorX as j,anchorFromPlacements as w,namedAnchorToHUDMaterialAnchorPos as S}from"./placementUtils.js";import{placePointOnGeometry as _,updateStageObjectGeometry as E,getLocalOriginForPoint as L,extendPointGraphicElevationContext as G,createStageObject as z}from"./pointUtils.js";import{getFontMetrics as C}from"../../webgl-engine/lib/FontMetrics.js";import{createPointGeometry as U}from"../../webgl-engine/lib/GeometryUtil.js";import{TextRenderParameters as D}from"../../webgl-engine/lib/TextRenderParameters.js";import R from"../../webgl-engine/lib/TextTextureFactory.js";import{HUDMaterial as A}from"../../webgl-engine/materials/HUDMaterial.js";const T=l(0,0,1);class H extends g{constructor(e,t,r,n){super(e,t,r,n),this._elevationOptions={supportsOffsetAdjustment:!0,supportsOnTheGround:!1},this.ensureDrapedStatus(!1)}async doLoad(){if(!this._drivenProperties.size){const t=y(this.symbolLayer.size);if(t)throw new e("graphics3dtextsymbollayer:invalid-size",t)}await this._createTextRenderParameters()}async _createTextRenderParameters(){const e=this._context.graphicsCoreOwner.view.state.rasterPixelRatio;this._textRenderParameters=await D.fromSymbol(this.symbolLayer,e)}destroy(){super.destroy()}createGraphics3DGraphic(e){const t=e.graphic,r=_(t.geometry);if(null==r)return this.logger.warn(`unsupported geometry type for text symbol: ${t.geometry.type}`),null;const n=this.symbolLayer.text;if(null==n||""===n)return null;const s=a(this.symbol)&&this.symbol.hasVisibleVerticalOffset()?this.symbol.verticalOffset:null;if(null!=s&&!c(this.symbolLayer))return this.logger.errorOncePerTick(`Callouts and vertical offset on text symbols are currently only supported with 'center' horizontal alignment (not with '${this.symbolLayer.horizontalAlignment}' alignment)`),null;const{verticalAlignment:i}=this.symbolLayer,o=new v(s);b(i,o.screenOffset);const l=new x(o,this.symbolLayer.horizontalAlignment,O(i));return this._createAs3DShape(t,r,n,l)}createLabel(e,t,r,n,s){const i=e.graphic,o=_(i.geometry);if(null==o)return this.logger.warn(`unsupported geometry type for label: ${i.geometry.type}`),null;const l=t.text;return!l||/^\s+$/.test(l)?null:this._createAs3DShape(i,o,l,t,r,n,s)}setGraphicElevationContext(e,t,r=0){return super.setGraphicElevationContext(e,t),t.addOffsetRenderUnits(r),t}layerOpacityChanged(){return this.logger.warn("layer opacity change not yet implemented in Graphics3DTextSymbolLayer"),!1}layerElevationInfoChanged(e,t){return W(e,t,((e,t)=>{this.updateGraphicElevationContext(t,e)})),f.UPDATE}slicePlaneEnabledChanged(e,t){return W(e,t,(e=>{for(const t of e.stageObject.geometries)t.material.setParameters({hasSlicePlane:this._context.slicePlaneEnabled})})),!0}physicalBasedRenderingChanged(){return!0}get pixelRatioChanged(){return!1}updateGraphicElevationContext(e,t){const r=t.elevationContext;this.setGraphicElevationContext(e,r,null!=t.metadata?t.metadata.elevationOffset:0),t.needsElevationUpdates=h(r.mode)||"absolute-height"===r.mode}updateGeometry(e,t){if(this.draped||!this._validateGeometry(t))return!1;const{elevationContext:r,stageObject:n}=e;if(r.mode!==this.getGeometryElevationMode(t))return!1;const s=_(t);if(!s)return!1;const i=E(n,this._context,s,r);if(null==i)return!1;const o=L(this._context,s);return n.geometries[0].localOrigin===o&&(e.alignedSampledElevation=i,G(e,s,this._context.elevationProvider),!0)}_defaultElevationInfoNoZ(){return M}_createAs3DShape(e,l,a,c,f=null,g=null,y=(()=>c.placement.elevationOffset)){const x=this.setGraphicElevationContext(e,new p,c.placement.elevationOffset),v="polyline"===e.geometry?.type,b=e.uid;let O=null,j=null;if(null==g){const e=P(c.horizontalPlacement);O=new R(a,e,this._textRenderParameters);let n=null;if(null!=this._context.sharedResources.textures){j=this._context.sharedResources.textures.fromData(O.key,(()=>O.create())),j.texture.events.on("unloaded",(()=>n=t(n)));const e=this._context.stage.renderView.textures.acquire(j.texture.id);if(null==e||r(e))return j.release(),null;n=e}}const w=I(O,c),S={occlusionTest:!has("enable-feature:non-occluded-hud"),screenOffset:c.placement.screenOffset,anchorPosition:w,polygonOffset:!0,color:[1,1,1,1],centerOffsetUnits:c.placement.centerOffsetUnits,drawInSecondSlot:!0};if(v&&(S.shaderPolygonOffset=1e-4),g?S.textureId=g.id:j&&(S.textureId=j.texture.id),null!=c.placement.verticalOffset){const{screenLength:e,minWorldLength:t,maxWorldLength:r}=c.placement.verticalOffset;S.verticalOffset={screenLength:n(e),minWorldLength:t||0,maxWorldLength:null!=r?r:1/0}}const _={screenOffset:S.screenOffset,anchorPosition:w,centerOffsetUnits:S.centerOffsetUnits,verticalOffset:S.verticalOffset,shaderPolygonOffset:S.shaderPolygonOffset};if(this._context.screenSizePerspectiveEnabled){const{screenSizePerspectiveSettings:e,screenSizePerspectiveSettingsLabels:t}=this._context.sharedResources,r=C(this._textRenderParameters);S.screenSizePerspective=t.overrideFontHeight(r.maxHeight),S.screenSizePerspectiveAlignment=e,_.fontHeight=r.maxHeight}S.hasSlicePlane=this._context.slicePlaneEnabled;const E=(e,t,r)=>{let n=e.get(r);return null==n&&(n=new A(t),e.add(r,n)),n},L=f?E(f,S,JSON.stringify(_)):new A(S),D=c.placement.translation,H=O?s(O.displayWidth,O.displayHeight):i,W=c.placement.centerOffset,M=T,V=o(),$=U(L,M,D,null,H,W,V,null),F=z(this._context,l,$,x,b);if(null==F)return null;const k=(t,r,n,s,i,o)=>{const l=y()||c.placement.elevationOffset,a=this.setGraphicElevationContext(e,r,l);return m(t,a,n,s,i,o)},N=new u(this,F.object,[$],null==f?[L]:null,j,k,x);N.alignedSampledElevation=F.sampledElevation,N.needsElevationUpdates=h(x.mode)||"absolute-height"===x.mode,N.getScreenSize=(e=o())=>(e[0]=O?O.displayWidth:c.displaySize[0],e[1]=O?O.displayHeight:c.displaySize[1],e);const q=new d(c.placement.elevationOffset,a);return N.metadata=q,G(N,l,this._context.elevationProvider),N}}function W(e,t,r){e&&e.forEach((e=>{const n=t(e);null!=n&&r(n,e.graphic)}))}function I(e,t){if("baseline"===t.verticalPlacement){const r=j[t.horizontalPlacement],n=null!=e?e.baselineAnchorY:0;return s(r,n)}const r=w(t.horizontalPlacement,t.verticalPlacement);return S[r]}const M={mode:"relative-to-ground",offset:0};export{H as Graphics3DTextSymbolLayer};
