/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{defaultCIMColor as e,defaultCIMValues as t}from"./defaultCIMValues.js";function r(e){return"function"==typeof e}function n(e,t,n,o){return r(e)?e(t,n,o):e}function o(e){return[e.r,e.g,e.b,e.a]}const i=" /-,\n";function a(e){let t=e.length;for(;t--;)if(!i.includes(e.charAt(t)))return!1;return!0}function l(e,t){const r=[];let n=0,o=-1;do{if(o=e.indexOf("[",n),o>=n){if(o>n){const t=e.substr(n,o-n);r.push([t,null,a(t)])}if(n=o+1,o=e.indexOf("]",n),o>=n){if(o>n){const i=t[e.substr(n,o-n)];i&&r.push([null,i,!1])}n=o+1}}}while(-1!==o);if(n<e.length-1){const t=e.substr(n);r.push([t,null,a(t)])}return r}function s(e,t,r,n){let o="",i=null;for(const a of t){const[t,n,l]=a;if(t)l?i=t:(i&&(o+=i,i=null),o+=t);else{let t=n;null!=r&&(t=B(n,r));const a=e.attributes[t];a&&(i&&(o+=i,i=null),o+=a)}}return c(o,n)}function c(e,t){switch("string"!=typeof e&&(e=String(e)),t){case"LowerCase":return e.toLowerCase();case"Allcaps":return e.toUpperCase();default:return e}}function u(e,t,r,n,o,i,a=!0){const l=t/o,s=r/i,c=Math.ceil(l/2),u=Math.ceil(s/2);for(let f=0;f<i;f++)for(let r=0;r<o;r++){const y=4*(r+(a?i-f-1:f)*o);let M=0,m=0,C=0,b=0,I=0,p=0,h=0;const d=(f+.5)*s;for(let n=Math.floor(f*s);n<(f+1)*s;n++){const o=Math.abs(d-(n+.5))/u,i=(r+.5)*l,a=o*o;for(let s=Math.floor(r*l);s<(r+1)*l;s++){let r=Math.abs(i-(s+.5))/c;const o=Math.sqrt(a+r*r);o>=-1&&o<=1&&(M=2*o*o*o-3*o*o+1,M>0&&(r=4*(s+n*t),h+=M*e[r+3],C+=M,e[r+3]<255&&(M=M*e[r+3]/250),b+=M*e[r],I+=M*e[r+1],p+=M*e[r+2],m+=M))}}n[y]=b/m,n[y+1]=I/m,n[y+2]=p/m,n[y+3]=h/C}}function f(e){return e?[e[0],e[1],e[2],e[3]/255]:[0,0,0,0]}function y(e){return e.data?.symbol??null}function M(e){return"CIMVectorMarker"===e.type||"CIMPictureMarker"===e.type||"CIMBarChartMarker"===e.type||"CIMCharacterMarker"===e.type||"CIMPieChartMarker"===e.type||"CIMStackedBarChartMarker"===e.type}function m(e){return"CIMGradientStroke"===e.type||"CIMPictureStroke"===e.type||"CIMSolidStroke"===e.type}function C(e){return null!=e&&("CIMGradientFill"===e.type||"CIMHatchFill"===e.type||"CIMPictureFill"===e.type||"CIMSolidFill"===e.type||"CIMWaterFill"===e.type)}function b(e){return null!=e&&("CIMMarkerPlacementAlongLineRandomSize"===e.type||"CIMMarkerPlacementAlongLineSameSize"===e.type||"CIMMarkerPlacementAlongLineVariableSize"===e.type||"CIMMarkerPlacementAtExtremities"===e.type||"CIMMarkerPlacementAtMeasuredUnits"===e.type||"CIMMarkerPlacementAtRatioPositions"===e.type||"CIMMarkerPlacementOnLine"===e.type||"CIMMarkerPlacementOnVertices"===e.type)}const I=(e,t=0)=>null==e||isNaN(e)?t:e,p=(e,t)=>e??t,h=e=>e.tintColor?f(e.tintColor):[255,255,255,1],d=e=>{if(!e)return!1;for(const t of e)switch(t.type){case"CIMGeometricEffectBuffer":case"CIMGeometricEffectOffset":case"CIMGeometricEffectDonut":return!0}return!1};function k(){return import("../../geometry/geometryEngineJSON.js")}function S(e){if(!e)return"normal";switch(e.toLowerCase()){case"italic":return"italic";case"oblique":return"oblique";default:return"normal"}}function g(e){if(!e)return"normal";switch(e.toLowerCase()){case"bold":return"bold";case"bolder":return"bolder";case"lighter":return"lighter";default:return"normal"}}function P(e){let t="normal",r="normal";if(e){const n=e.toLowerCase();n.includes("italic")?t="italic":n.includes("oblique")&&(t="oblique"),n.includes("bold")?r="bold":n.includes("light")&&(r="lighter")}return{style:t,weight:r}}function w(e){return e.underline?"underline":e.strikethrough?"line-through":"none"}function L(e){if(!e)return null;switch(e.type){case"CIMPolygonSymbol":if(e.symbolLayers)for(const t of e.symbolLayers){const e=L(t);if(null!=e)return e}break;case"CIMTextSymbol":return L(e.symbol);case"CIMSolidFill":return e.color}return null}function N(e){if(e)switch(e.type){case"CIMPolygonSymbol":case"CIMLineSymbol":{const t=e.symbolLayers;if(t)for(const e of t){const t=N(e);if(null!=t)return t}break}case"CIMTextSymbol":return N(e.symbol);case"CIMSolidStroke":return e.color}}function T(e){if(e)switch(e.type){case"CIMPolygonSymbol":case"CIMLineSymbol":if(e.symbolLayers)for(const t of e.symbolLayers){const e=T(t);if(void 0!==e)return e}break;case"CIMTextSymbol":return T(e.symbol);case"CIMSolidStroke":case"CIMGradientStroke":case"CIMPictureStroke":return e.width}}function x(e){switch(e){case"Left":default:return"left";case"Right":return"right";case"Center":case"Justify":return"center"}}function A(e){switch(e){case"Top":default:return"top";case"Center":return"middle";case"Baseline":return"baseline";case"Bottom":return"bottom"}}function F(e){return(e?Object.keys(e):[]).map((t=>({name:t,alias:t,type:"string"==typeof e[t]?"esriFieldTypeString":"esriFieldTypeDouble"})))}const G=e=>e.includes("data:image/svg+xml");function V(e){if(!e)return null;switch(e.type){case"CIMPointSymbol":case"CIMTextSymbol":return"esriGeometryPoint";case"CIMLineSymbol":return"esriGeometryPolyline";case"CIMPolygonSymbol":return"esriGeometryPolygon";default:return null}}function v(e){return e?e.charAt(0).toLowerCase()+e.substring(1):e}function z(e,t,r,n,o,i){const{infos:a}=i;let l=1,s=0,c=0,u=0;for(const{offsetX:M,offsetY:m,rotation:C,size:b,frameHeight:I,rotateClockWise:p}of a){c=U(M,m,s,l,c),u=J(M,m,s,l,u),I&&(l*=b/I),s=W(C,p,s)}const f=U(n,o,s,l,c),y=J(n,o,s,l,u);return{size:e*l,rotation:W(t,r,s),offsetX:f,offsetY:y}}function E(e){if(null==e)return!1;if(Array.isArray(e))return e.every((e=>E(e)));switch(typeof e){case"string":return!!e;case"number":return!isNaN(e)}}function O(r,n){if("color"===n||"outlinecolor"===n||"backgroundcolor"===n||"borderlinecolor"===n||"tintcolor"===n)return[...e[n]];const o=t[r];if(!o)throw new Error(`InternalError: default value for type ${r}.`);return o[n]}function D(e){return e?.dashTemplate&&"string"==typeof e.dashTemplate&&(e.dashTemplate=e.dashTemplate.split(" ").map(Number)),e}function j(e){if(null==e)return"Normal";switch(e.type){case"CIMTextSymbol":return e.textCase??"Normal";case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":{const t=e.symbolLayers;if(!t)return"Normal";for(const e of t)if("CIMVectorMarker"===e.type)return j(e)}break;case"CIMVectorMarker":{const t=e.markerGraphics;if(!t)return"Normal";for(const e of t)if(e.symbol)return j(e.symbol)}}return"Normal"}function q(e){if(e)switch(e.type){case"CIMTextSymbol":return e.height;case"CIMPointSymbol":{let r=0;if(e.symbolLayers)for(const n of e.symbolLayers)if(n)switch(n.type){case"CIMCharacterMarker":case"CIMPictureMarker":case"CIMVectorMarker":case"CIMObjectMarker3D":case"CIMglTFMarker3D":{const e=n.size??t.CIMVectorMarker.size;e>r&&(r=e);break}}return r}case"CIMLineSymbol":case"CIMPolygonSymbol":{let r=0;if(e.symbolLayers)for(const n of e.symbolLayers)if(n)switch(n.type){case"CIMSolidStroke":case"CIMPictureStroke":case"CIMGradientStroke":{const e=n.width;null!=e&&e>r&&(r=e);break}case"CIMCharacterMarker":case"CIMPictureMarker":case"CIMVectorMarker":case"CIMObjectMarker3D":case"CIMglTFMarker3D":if(n.markerPlacement&&b(n.markerPlacement)){const e=n.size??t.CIMVectorMarker.size;e>r&&(r=e)}break;case"CIMPictureFill":{const e=n.height;null!=e&&e>r&&(r=e)}}return r}}}function B(e,t){if(null!==t){const r=t.get(e);return r?r.name:e}return e}function R(e){return e.map((e=>({...e,propertyName:v(e.propertyName)})))}function H(e){const t={};for(const r in e){const n=e[r];t[v(r)]=n}return t}function J(e,t,r,n,o){const i=r*Math.PI/180;if(i){const r=Math.cos(i);return(Math.sin(i)*e+r*t)*n+o}return t*n+o}function U(e,t,r,n,o){const i=r*Math.PI/180;if(i){return(Math.cos(i)*e-Math.sin(i)*t)*n+o}return e*n+o}function W(e,t,r){return t?r-e:r+e}function X(e,t,r){let n=t[v(r)];if(null==n&&(n=O(t.type,r)),null!=t.primitiveName){const o=e[t.primitiveName];if(null!=o){const e=o[r];null==e||(n="string"==typeof e||"number"==typeof e||Array.isArray(e)?e:{valueExpressionInfo:e,defaultValue:n})}}if(null==n)throw new Error(`Failed to derive a value or an expression for "${r}".`);return n}export{c as adjustTextCase,l as analyzeTextParts,z as applyParentTransform,s as assignTextValuesFromFeature,F as attributesToFields,o as colorToArray,n as evaluateValueOrFunction,w as fromCIMFontDecoration,P as fromCIMFontStyle,x as fromCIMHorizontalAlignment,A as fromCIMVerticalAlignment,O as getDefaultCIMValue,p as getEnum,B as getFieldName,L as getFillColor,S as getFontStyle,g as getFontWeight,I as getNumericValue,q as getSize,N as getStrokeColor,T as getStrokeWidth,j as getTextCasing,h as getTintColor,X as getValueOrExpression,k as importGeometryEngine,C as isCIMFill,M as isCIMMarker,b as isCIMMarkerStrokePlacement,m as isCIMStroke,r as isFeatureValueFn,d as isGeometryEngineRequired,G as isSVGImage,E as isValidCIMValue,V as mapCIMSymbolToGeometryType,f as normalizeAlpha,D as normalizeDashTemplate,R as normalizePrimitiveOverrideProps,u as resampleHermite,y as toCIMSymbolJSON,H as toLowerCaseProps,v as uncapitalize};
