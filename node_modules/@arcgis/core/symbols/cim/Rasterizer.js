/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{CIMSymbolHelper as e}from"./CIMSymbolHelper.js";import{rasterizeFillStyle as r,rasterizeDash as t}from"./rasterizingUtils.js";import a from"./Rect.js";import{getSDFInfo as n,buildSDF as s}from"./SDFHelper.js";import{resampleHermite as i}from"./utils.js";import{patternFillRasterizationScale as o}from"../../views/2d/engine/webgl/definitions.js";const c=512;class l{constructor(e){this._resourceManager=e,this._cachedRasterizationCanvas=null}dispose(){this._cachedRasterizationCanvas=null}get _canvas(){return this._cachedRasterizationCanvas||(this._cachedRasterizationCanvas=document.createElement("canvas")),this._cachedRasterizationCanvas}rasterizeJSONResource(e){switch(e.type){case"dash":{const r=e.dashTemplate,a=e.capStyle,[n,s,i]=t(r,a);return{size:[s,i],image:new Uint32Array(n.buffer),sdf:!0,simplePattern:!0,anchorX:0,anchorY:0}}case"fill-style":{const[t,a,n,s]=r(this._canvas,e,o);return{size:[a,n],image:new Uint32Array(t.buffer),sdf:!1,simplePattern:!0,anchorX:0,anchorY:0,rasterizationScale:s}}case"sdf":return h(e);case"CIMHatchFill":case"CIMVectorMarker":case"CIMPictureMarker":return this._rasterizeCIMJSONResource(e)}}_rasterizeCIMJSONResource(r){switch(r.type){case"CIMHatchFill":{const t=e.fromCIMHatchFill(r,o);return this._rasterizeCIMVectorMarker(t)}case"CIMPictureMarker":{const t=e.fromCIMInsidePolygon(r);return this._rasterizeCIMVectorMarker(t)}case"CIMVectorMarker":{if("CIMMarkerPlacementInsidePolygon"===r.markerPlacement?.type){const t=e.fromCIMInsidePolygon(r);return this._rasterizeCIMVectorMarker(t)}const t=n(r);return t&&!r.avoidSDFRasterization?h(t):this._rasterizeCIMVectorMarker(r,!1)}}}_rasterizeCIMVectorMarker(r,t=!0){const n=t?a.fromExtent(r.frame):null,[s,i,o,c,l]=e.rasterize(this._canvas,r,n,this._resourceManager);return s?{size:[i,o],image:new Uint32Array(s.buffer),sdf:!1,simplePattern:!1,anchorX:c,anchorY:l}:null}rasterizeImageResource(e,r,t,a){this._canvas.width=e,this._canvas.height=r;const n=this._canvas.getContext("2d",{willReadFrequently:!0});t instanceof ImageData?n.putImageData(t,0,0):(t.setAttribute("width",`${e}px`),t.setAttribute("height",`${r}px`),n.drawImage(t,0,0,e,r));const s=n.getImageData(0,0,e,r),o=new Uint8Array(s.data);if(a)for(const i of a)if(i&&i.oldColor&&4===i.oldColor.length&&i.newColor&&4===i.newColor.length){const[e,r,t,a]=i.oldColor,[n,s,c,l]=i.newColor;if(e===n&&r===s&&t===c&&a===l)continue;for(let i=0;i<o.length;i+=4)e===o[i]&&r===o[i+1]&&t===o[i+2]&&a===o[i+3]&&(o[i]=n,o[i+1]=s,o[i+2]=c,o[i+3]=l)}let l;for(let i=0;i<o.length;i+=4)l=o[i+3]/255,o[i]=o[i]*l,o[i+1]=o[i+1]*l,o[i+2]=o[i+2]*l;let h=o,u=e,f=r;const m=c;if(u>=m||f>=m){const t=u/f;t>1?(u=m,f=Math.round(m/t)):(f=m,u=Math.round(m*t)),h=new Uint8Array(4*u*f);const a=new Uint8ClampedArray(h.buffer);i(o,e,r,a,u,f,!1)}return{size:[u,f],image:new Uint32Array(h.buffer),sdf:!1,simplePattern:!1,anchorX:0,anchorY:0}}}function h(e){if(!e)return null;const[r,t,a]=s(e);return r?{size:[t,a],image:new Uint32Array(r.buffer),sdf:!0,simplePattern:!0,anchorX:0,anchorY:0}:null}export{l as default};
