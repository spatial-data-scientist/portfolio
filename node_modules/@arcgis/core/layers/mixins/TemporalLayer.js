/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../TimeExtent.js";import o from"../../TimeInterval.js";import{property as r}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{reader as i}from"../../core/accessorSupport/decorators/reader.js";import{subclass as s}from"../../core/accessorSupport/decorators/subclass.js";import{excludeTables as p}from"../../core/accessorSupport/layerContainerType.js";import{fixTimeInfoFields as m}from"../support/fieldUtils.js";import n from"../support/TimeInfo.js";import{timeUnitKebabDictionary as a}from"../../portal/timeUnitKebabDictionary.js";const f={type:Boolean,json:{read:{source:"timeAnimation"},write:{target:"timeAnimation",layerContainerTypes:p}}},l=p=>{let l=class extends p{constructor(){super(...arguments),this.timeExtent=null,this.timeOffset=null,this.useViewTime=!0}readOffset(e,t){const r=t.timeInfo.exportOptions;if(!r)return null;const i=r.timeOffset,s=a.fromJSON(r.timeOffsetUnits);return i&&s?new o({value:i,unit:s}):null}set timeInfo(e){m(e,this.fieldsIndex),this._set("timeInfo",e)}};return e([r({type:t,json:{write:!1}})],l.prototype,"timeExtent",void 0),e([r({type:o})],l.prototype,"timeOffset",void 0),e([i("service","timeOffset",["timeInfo.exportOptions"])],l.prototype,"readOffset",null),e([r({value:null,type:n,json:{write:!0,origins:{"web-document":{read:!1,write:!1},"portal-item":{read:!1,write:!1}}}})],l.prototype,"timeInfo",null),e([r(f)],l.prototype,"useViewTime",void 0),l=e([s("esri.layers.mixins.TemporalLayer")],l),l};export{l as TemporalLayer,f as useViewTimeProperty};
