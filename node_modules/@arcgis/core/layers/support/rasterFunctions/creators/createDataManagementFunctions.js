/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{getNamedColor as t,hex2rgba as n}from"../../../../colorUtils.js";import{colormapName as a}from"../../rasterFunctionConstants.js";import{createRasterFunction as r}from"./utils.js";import{colorRampDict as e}from"../../../../renderers/support/colorRampUtils.js";function o(t){return"colormap"in t?s(t):"colorRamp"in t?i(t):u(t)}function s(a){const e=a.colormap.map((a=>{if("value"in a){const r="string"==typeof a.color?t(a.color)??n(a.color):a.color;(a=[a.value,...r])[4]&&a[4]<=1&&(a[4]=Math.round(255*a[4]))}return a})),{raster:o,outputPixelType:s}=a;return r("Colormap",{colormap:e,raster:o},s)}function i(t){const{raster:n,colorRamp:a,outputPixelType:e}=t,o={colorRamp:"toJSON"in a?a.toJSON():a,raster:n};return r("Colormap",o,e)}function u(t){const{colorRampName:n}=t,o=Object.values(a).find((t=>t.toLowerCase()===n?.toLowerCase())),s=e.toJSON(n),{raster:i,outputPixelType:u="unknown"}=t;return r("Colormap",o?{colormapName:o,raster:i}:{colorRampName:s,raster:i},u)}function l(t){const{raster:n,histograms:a,outputPixelType:e}=t,o=t.statistics?.map((t=>({min:t.min,max:t.max,mean:t.avg,standardDeviation:t.stddev})));return r("StatisticsHistograms",{raster:n,statistics:o,histograms:a},e)}function p(t){const{raster:n,attributeTable:a,outputPixelType:e="unknown"}=t,o="toJSON"in a?a.toJSON():a;return r("Table",{raster:n,attributeTableAsRecordSet:o},e)}function c(t){const{raster:n,outputPixelType:a="unknown"}=t,e={raster:n,missingBandAction:"fail"===t.missingBandAction?1:0};return"bandIds"in t?e.bandIds=t.bandIds:"bandNames"in t?e.bandNames=t.bandNames:"bandWavelengths"in t&&(e.bandWavelengths=t.bandWavelengths),r("ExtractBand",e,a)}function m(t){const{rasters:n,outputPixelType:a}=t;return r("CompositeBand",{rasters:n},a)}function d(t){const{allowUnmatched:n,raster:a,rangeMaps:e,outputPixelType:o}=t,s=e?.filter((({output:t})=>null!=t)),i=s?.flatMap((({range:t})=>t)),u=s?.map((({output:t})=>t)),l=e?.filter((t=>null==t.output))?.flatMap((({range:t})=>t));return r("Remap",{allowUnmatched:n,raster:a,inputRanges:i,outputValues:u,noDataRanges:l},o)}function f(t){const{raster:n,outputPixelType:a="unknown"}=t,e=t.includedRanges?.flatMap((t=>t)),o=t.noDataValues?.map((t=>t.join(" "))),s="match-all"===t.noDataInterpretation?1:0;return r("Mask",{raster:n,includedRanges:e,noDataInterpretation:s,noDataValues:o},a)}function g(t){const{geometry:n,keepOutside:a,outputPixelType:e="unknown",raster:o}=t,s="declaredClass"in n?n.toJSON():n;return r("Clip",{clippingGeometry:s,clippingType:a?2:1,raster:o},e)}function y(t){const{weights:n,outputPixelType:a="unknown",raster:e}=t;return r("Grayscale",{conversionParameters:n,raster:e},a)}export{g as clip,o as colormap,m as compositeBands,c as extractBand,y as grayscale,f as mask,d as remap,l as statisticsHistogram,p as table};
