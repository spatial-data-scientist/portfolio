/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import e from"../../core/Error.js";import{fetchMessageBundle as i}from"../../intl/messages.js";import a from"../../renderers/support/AuthoringInfo.js";import r from"../../renderers/support/AuthoringInfoVisualVariable.js";import{round as n}from"../../renderers/support/numberUtils.js";import s from"../../renderers/visualVariables/OpacityVariable.js";import o from"../../renderers/visualVariables/support/OpacityStop.js";import l from"../../renderers/visualVariables/support/VisualVariableLegendOptions.js";import t from"../heuristics/outline.js";import{createVisualVariables as p}from"./size.js";import{createRenderer as m}from"./type.js";import{verifyBasicFieldValidity as d,getBasemapInfo as u,errorCallback as c,createSymbol as y,getSymbolOutlineFromScheme as b,createColors as f}from"./support/utils.js";import g from"../statistics/predominantCategories.js";import h from"../statistics/summaryStatistics.js";import{getPredominanceExpressions as v}from"../statistics/support/predominanceUtils.js";import{verifyBinningParams as w}from"../support/binningUtils.js";import{binningCapableLayerTypes as V,featureCapableLayerTypes as z,createLayerAdapter as T,getLayerTypeLabels as E}from"../support/adapters/support/layerUtils.js";import{cloneScheme as S,getSchemes as x}from"../symbology/predominance.js";async function I(i){if(!(i?.layer&&i.view&&i.fields?.length))throw new e("predominance-renderer:missing-parameters","'layer', 'view' and 'fields' parameters are required");if(i.fields.length<2)throw new e("predominance-renderer:invalid-parameters","Minimum 2 fields are required");if(i.fields.length>10)throw new e("predominance-renderer:invalid-parameters","Maximum 10 fields are supported");i.forBinning&&w(i,"predominance-renderer");const a={...i,layer:i.layer,fields:i.fields};a.symbolType=a.symbolType||"2d",a.defaultSymbolEnabled??=!0,a.includeOpacityVariable=i.includeOpacityVariable||!1,a.includeSizeVariable=i.includeSizeVariable||!1,a.sortBy??="count";const r=i.forBinning?V:z,n=T(a.layer,r,i.forBinning);if(!n)throw new e("predominance-renderer:invalid-parameters","'layer' must be one of these types: "+E(z).join(", "));a.layer=n;const s=null!=a.signal?{signal:a.signal}:null;await n.load(s);const o=n.geometryType,l=a.symbolType.includes("3d");if(a.outlineOptimizationEnabled="polygon"===o&&a.outlineOptimizationEnabled,a.includeSizeVariable||(a.sizeOptimizationEnabled=("point"===o||"multipoint"===o||"polyline"===o)&&a.sizeOptimizationEnabled),"mesh"===o)a.symbolType="3d-volumetric",a.colorMixMode=a.colorMixMode||"replace",a.edgesType=a.edgesType||"none",a.sizeOptimizationEnabled=!1;else{if(l&&("polyline"===o||"polygon"===o))throw new e("predominance-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");if(a.symbolType.includes("3d-volumetric")&&(!a.view||"3d"!==a.view.type))throw new e("predominance-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'")}const t=a.fields.map((e=>e.name)),p=d(n,t,"predominance-renderer:invalid-parameters");if(p)throw p;return a}async function O(e){let i=e.predominanceScheme,a=null,r=null;const n=await u(e.basemap,e.view);if(a=null!=n.basemapId?n.basemapId:null,r=null!=n.basemapTheme?n.basemapTheme:null,i)return{scheme:S(i),basemapId:a,basemapTheme:r};const s=x({basemapTheme:r,geometryType:e.geometryType,numColors:e.numColors,theme:e.theme,worldScale:e.worldScale,view:e.view});return s&&(i=s.primaryScheme,a=s.basemapId,r=s.basemapTheme),{scheme:i,basemapId:a,basemapTheme:r}}async function M(e,r,n,s){const o=await i("esri/smartMapping/t9n/smartMapping"),l=e.layer,p={layer:e.layer,view:e.view,signal:e.signal},[d,u]=await Promise.all([g({layer:l,fields:s,view:e.view,signal:e.signal}),e.outlineOptimizationEnabled?t(p).catch(c):null]);let h=d;d?.predominantCategoryInfos||(h={predominantCategoryInfos:s.map((e=>({value:e,count:0})))});const v=u?.opacity,w=await m({layer:l,basemap:e.basemap,valueExpression:r.valueExpression,valueExpressionTitle:o.predominantCategory,numTypes:-1,defaultSymbolEnabled:e.defaultSymbolEnabled,sortBy:e.sortBy,typeScheme:n,statistics:{uniqueValueInfos:h.predominantCategoryInfos},legendOptions:e.legendOptions,outlineOptimizationEnabled:!1,sizeOptimizationEnabled:(!e.includeSizeVariable||!e.sizeOptimizationEnabled)&&e.sizeOptimizationEnabled,symbolType:e.symbolType,colorMixMode:e.colorMixMode,edgesType:e.edgesType,view:e.view,signal:e.signal}),{renderer:V,basemapId:z,basemapTheme:T,uniqueValueInfos:E,excludedUniqueValueInfos:S}=w,x=V.uniqueValueInfos??[],I={};for(const i of e.fields){const e=l.getField(i.name);I[e.name]=i.label||e&&e.alias||i.name}if(x.forEach(((e,i)=>{const a=I[e.value];e.label=a,E[i].label=a})),e.includeSizeVariable){let i=l.geometryType,a=null;if("polygon"===i){const r=n.sizeScheme,s=r.background;V.backgroundFillSymbol=y(i,{type:e.symbolType,color:s.color,outline:b(s,i,v)}),a=r.marker.size,i="point"}else if("polyline"===i){a=n.width}else{a=n.size}const r=f(n.colors,x.length);x.forEach(((s,o)=>{const l=y(i,{type:e.symbolType,color:r[o],size:a,outline:b(n,i,v),meshInfo:{colorMixMode:e.colorMixMode,edgesType:e.edgesType}});s.symbol=l,E[o].symbol=l.clone()}))}return u?.visualVariables.length&&(V.visualVariables=u.visualVariables.map((e=>e.clone()))),V.authoringInfo=new a({type:"predominance",fields:[...s]}),{renderer:V,predominantCategoryInfos:E,excludedCategoryInfos:S,predominanceScheme:n,basemapId:z,basemapTheme:T}}async function j(e,a,r){const n=await i("esri/smartMapping/t9n/smartMapping");return p({layer:e.layer,basemap:e.basemap,valueExpression:a.valueExpression,sqlExpression:a.statisticsQuery.sqlExpression,sqlWhere:a.statisticsQuery.sqlWhere,sizeScheme:r,sizeOptimizationEnabled:e.sizeOptimizationEnabled,worldScale:!!e.symbolType?.includes("3d-volumetric"),legendOptions:{title:n.sumOfCategories},view:e.view,signal:e.signal})}async function q(e,t){const p=await i("esri/smartMapping/t9n/smartMapping"),m=await h({layer:e.layer,valueExpression:t.valueExpression,sqlExpression:t.statisticsQuery.sqlExpression,sqlWhere:t.statisticsQuery.sqlWhere,view:e.view,signal:e.signal}),{avg:d,stddev:u}=m,c=null==d||null==u,y=1/e.fields.length*100;let b=c?100:d+1.285*u;b>100&&(b=100);const f=n([y,b],{strictBounds:!0}),g=new s({valueExpression:t.valueExpression,stops:[new o({value:f[0],opacity:.15}),new o({value:f[1],opacity:1})],legendOptions:new l({title:p.strengthOfPredominance})}),v=new r({type:"opacity",minSliderValue:m.min,maxSliderValue:m.max});return{visualVariable:g,statistics:m,defaultValuesUsed:c,authoringInfo:new a({visualVariables:[v]})}}async function C(e){const i=await I(e),r=i.layer,n=(await O({basemap:i.basemap,geometryType:r.geometryType,numColors:i.fields.length,predominanceScheme:i.predominanceScheme,worldScale:!!i.symbolType?.includes("3d-volumetric"),view:i.view})).scheme,s=i.fields.map((e=>e.name)),o=v(r,s),l=M(i,o.predominantCategory,n,s),t=i.includeSizeVariable?j(i,o.size,n.sizeScheme):null,p=i.includeOpacityVariable?q(i,o.opacity):null,[m,d,u]=await Promise.all([l,t,p]),c=[],y=[];if(d&&(Array.prototype.push.apply(c,d.visualVariables.map((e=>e.clone()))),delete d.sizeScheme,m.size=d,Array.prototype.push.apply(y,d.authoringInfo.visualVariables.map((e=>e.clone())))),u&&(c.push(u.visualVariable.clone()),m.opacity=u,Array.prototype.push.apply(y,u.authoringInfo.visualVariables.map((e=>e.clone())))),c.length){const e=m.renderer.visualVariables||[];Array.prototype.push.apply(e,c),m.renderer.visualVariables=e,m.renderer.authoringInfo??=new a,m.renderer.authoringInfo.visualVariables=y}return m}export{C as createRenderer};
