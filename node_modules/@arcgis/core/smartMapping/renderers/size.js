/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import e from"../../renderers/ClassBreaksRenderer.js";import"../../renderers/DictionaryRenderer.js";import"../../renderers/DotDensityRenderer.js";import"../../renderers/HeatmapRenderer.js";import"../../renderers/PieChartRenderer.js";import"../../renderers/Renderer.js";import"../../renderers/SimpleRenderer.js";import"../../renderers/UniqueValueRenderer.js";import"../../renderers/support/jsonUtils.js";import"../../core/Logger.js";import i from"../../core/Error.js";import{toPt as r}from"../../core/screenUtils.js";import{ensureClass as a}from"../../core/accessorSupport/ensureType.js";import{fetchMessageBundle as n}from"../../intl/messages.js";import{substitute as s}from"../../intl/substitute.js";import l from"../../renderers/support/AuthoringInfo.js";import o from"../../renderers/support/AuthoringInfoSizeStop.js";import t from"../../renderers/support/AuthoringInfoVisualVariable.js";import{setLabelsForClassBreaks as m}from"../../renderers/support/utils.js";import u from"../../renderers/visualVariables/SizeVariable.js";import{castSizeFromStringOrNumber as p}from"../../renderers/visualVariables/support/castSizeVariable.js";import d from"../../renderers/visualVariables/support/SizeVariableLegendOptions.js";import{TransformationType as c}from"../../renderers/visualVariables/support/sizeVariableUtils.js";import y from"../heuristics/ageUnit.js";import f from"../heuristics/outline.js";import z from"../heuristics/referenceSize.js";import b from"../heuristics/sizeRange.js";import{createPrimitiveOverrides as v,updateReferenceSizeSymbol as w,createReferenceSizeSymbol as h,getReferenceSizeStops as g}from"./support/referenceSizeUtils.js";import{getSummaryStatistics as S,errorCallback as T,createColors as x,getClassBreaks as V,formatDate as E,updateAgeRendererAuthoringInfoVV as j,verifyBasicFieldValidity as O,getSizeRangeForAxis as I,createSymbol as k,getSymbolOutlineFromScheme as q,getSymbolSizeFromScheme as B,getBasemapInfo as F,getDataRange as R}from"./support/utils.js";import{getAgeExpressions as U,verifyDates as D,supportedAgeUnits as M}from"../statistics/support/ageUtils.js";import{verifyBinningParams as G}from"../support/binningUtils.js";import{getFieldsList as A,getNormalizationType as C,isAnyDateField as L}from"../support/utils.js";import{binningCapableLayerTypes as P,featureCapableLayerTypes as W,createLayerAdapter as $,getLayerTypeLabels as H}from"../support/adapters/support/layerUtils.js";import{cloneScheme as _,getSchemes as J}from"../symbology/size.js";import{getColorFromSymbol as K}from"../../symbols/support/utils.js";const N=2**53-1;async function Q(e){if(!(e&&e.layer&&(e.field||e.valueExpression||e.sqlExpression)))throw new i("size-visual-variable:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(e.valueExpression&&!e.sqlExpression&&!e.view)throw new i("size-visual-variable:missing-parameters","View is required when 'valueExpression' is specified");if("reference-size"===e.theme&&!e.view&&!e.field)throw new i("size-visual-variable:missing-parameters","'view' and 'field' are required when 'theme' is 'reference-size'");if("reference-size"===e.theme&&e.valueExpression)throw new i("size-visual-variable:missing-parameters","'valueExpression' is not supported when 'theme' is 'reference-size'");e.forBinning&&G(e,"size-visual-variable");const r={...e},a=e.forBinning?P:W,n=$(r.layer,a,e.forBinning);if(!n)throw new i("size-visual-variable:invalid-parameters","'layer' must be one of these types: "+H(a).join(", "));r.layer=n,"height"===r.axis&&(r.sizeOptimizationEnabled=!1);const s=null!=r.signal?{signal:r.signal}:null;await n.load(s);const l=n.geometryType;if("mesh"===l)throw new i("size-visual-variable:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(r.worldScale){if("polyline"===l||"polygon"===l)throw new i("size-visual-variable:not-supported","'worldScale' sizing is not supported for polyline and polygon layers");if(!r.view||"3d"!==r.view.type)throw new i("size-visual-variable:invalid-parameters","'view' parameter should be an instance of SceneView when 'worldScale' parameter is true")}if("reference-size"===r.theme&&!e.forBinning&&"polygon"!==l)throw new i("size-visual-variable:invalid-parameters","Reference size is only supported for polygon layers");const o=await A({field:r.field,normalizationField:r.normalizationField,valueExpression:r.valueExpression}),t=O(n,o,"size-visual-variable:invalid-parameters");if(t)throw t;return await Y(r),r}async function X(e){if(!(e&&e.layer&&(e.field||e.valueExpression||e.sqlExpression)))throw new i("size-continuous-renderer:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(e.valueExpression&&!e.sqlExpression&&!e.view)throw new i("size-continuous-renderer:missing-parameters","View is required when 'valueExpression' is specified");e.forBinning&&G(e,"size-continuous-renderer");const r={...e};r.symbolType=r.symbolType||"2d",r.defaultSymbolEnabled??=!0;const a=e.forBinning?P:W,n=$(r.layer,a,e.forBinning);if(!n)throw new i("size-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+H(a).join(", "));r.layer=n;const s=null!=r.signal?{signal:r.signal}:null;await n.load(s);const l=n.geometryType,o=r.symbolType.includes("3d");if(r.outlineOptimizationEnabled="reference-size"!==r.theme&&"polygon"===l&&r.outlineOptimizationEnabled,"mesh"===l)throw new i("size-continuous-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(o&&("polyline"===l||"polygon"===l))throw new i("size-continuous-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");if(r.symbolType.includes("3d-volumetric")&&(!r.view||"3d"!==r.view.type))throw new i("size-continuous-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform");if("reference-size"===r.theme&&!e.forBinning&&"polygon"!==l)throw new i("size-continuous-renderer:invalid-parameters","Reference size is only supported for polygon layers");const t=await A({field:r.field,normalizationField:r.normalizationField,valueExpression:r.valueExpression}),m=O(n,t,"size-continuous-renderer:invalid-parameters");if(m)throw m;return await Y(r),r}async function Y(e){const i=e.layer;if(("polygon"===i.geometryType||e.forBinning)&&e.view&&e.field&&!e.valueExpression&&(!e.theme||"reference-size"===e.theme)){try{e.referenceSizeResult=e.referenceSizeResult??await z({layer:i,view:e.view,forBinning:e.forBinning,signal:e.signal})}catch{}!e.theme&&e.referenceSizeResult?.isGrid&&(e.theme="reference-size"),e.referenceSizeOptions?.symbolStyle||(e.referenceSizeOptions?e.referenceSizeOptions.symbolStyle="circle":e.referenceSizeOptions={symbolStyle:"circle"})}}function Z(e){if(!e||!(e.layer&&e.view&&e.sizeStops))throw new i("update-renderer-with-reference-size:missing-parameters","'layer', 'view and 'sizeStops' parameters are required");const r=e.layer;let a=e.renderer;if(!a)if(e.forBinning){if(!("featureReduction"in r&&r.featureReduction&&"renderer"in r.featureReduction&&r.featureReduction.renderer)||"class-breaks"!==r.featureReduction.renderer.type&&"unique-value"!==r.featureReduction.renderer.type)throw new i("update-renderer-with-reference-size:invalid-parameters","Feature reduction renderer is not supported");a=r.featureReduction.renderer}else{if(!("renderer"in r)||!r.renderer||"class-breaks"!==r.renderer.type&&"unique-value"!==r.renderer.type)throw new i("update-renderer-with-reference-size:invalid-parameters","Renderer is not supported");a=r.renderer}const n=a.authoringInfo;if(!n||!n?.visualVariables?.some((e=>"reference-size"===e.theme)))throw new i("update-renderer-with-reference-size:invalid-parameters","'renderer.authoringInfo.visualVariables' should have an authoringInfoVisualVariable with 'theme' set to 'reference-size'");return{...e,renderer:a}}async function ee(e){if(!e||!e.layer||!e.field&&!e.valueExpression)throw new i("size-class-breaks-renderer:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required");if(e.valueExpression&&!e.view)throw new i("size-class-breaks-renderer:missing-parameters","View is required when 'valueExpression' is specified");e.forBinning&&G(e,"size-class-breaks-renderer");const r={...e};r.symbolType=r.symbolType||"2d",r.defaultSymbolEnabled??=!0,r.classificationMethod??="equal-interval",r.normalizationType=C(r);const a=e.forBinning?P:W,n=$(r.layer,a,e.forBinning);if(!n)throw new i("size-class-breaks-renderer:invalid-parameters","'layer' must be one of these types: "+H(a).join(", "));r.layer=n;if(!(null!=r.minValue&&null!=r.maxValue)&&(null!=r.minValue||null!=r.maxValue))throw new i("size-class-breaks-renderer:missing-parameters","Both 'minValue' and 'maxValue' are required when specifying custom data range");const s=null!=r.signal?{signal:r.signal}:null;await n.load(s);const l=n.geometryType,o=r.symbolType.includes("3d");if(r.outlineOptimizationEnabled="polygon"===l&&r.outlineOptimizationEnabled,"mesh"===l)throw new i("size-class-breaks-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(o&&("polyline"===l||"polygon"===l))throw new i("size-class-breaks-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");if(r.symbolType.includes("3d-volumetric")&&(!r.view||"3d"!==r.view.type))throw new i("size-class-breaks-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform");const t=await A({field:r.field,normalizationField:r.normalizationField}),m=O(n,t,"size-class-breaks-renderer:invalid-parameters");if(m)throw m;return r}function ie(e){const i={...e};delete i.basemap,delete i.sizeScheme,delete i.legendOptions,delete i.symbolType,delete i.defaultSymbolEnabled;const r=i;return r.analyzeData=!(null!=i.minValue&&null!=i.maxValue),r}function re(e){const i={...e},r=!!i.symbolType?.includes("3d-volumetric"),a=i;return a.worldScale=r,r&&(a.axis="3d-volumetric-uniform"===i.symbolType?"all":"height"),delete i.symbolType,delete i.defaultSymbolEnabled,a}async function ae(e){if(!(e&&e.layer&&e.view&&e.startTime&&e.endTime))throw new i("size-age-renderer:missing-parameters","'layer', 'view', 'startTime', 'endTime' parameters are required");const r={...e};r.symbolType??="2d",r.defaultSymbolEnabled??=!0;const a=$(r.layer,W);if(!a)throw new i("size-age-renderer:invalid-parameters","'layer' must be one of these types: "+H(W).join(", "));r.layer=a;const n=null!=r.signal?{signal:r.signal}:null;await a.load(n);const s=a.geometryType,l=r.symbolType.includes("3d");if(r.outlineOptimizationEnabled="polygon"===s&&r.outlineOptimizationEnabled,"mesh"===s)throw new i("size-age-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(l&&("polyline"===s||"polygon"===s))throw new i("size-age-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");if(r.symbolType.includes("3d-volumetric")&&(!r.view||"3d"!==r.view.type))throw new i("size-age-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform");const o=D(a,r.startTime,r.endTime,"size-age-renderer:invalid-parameters");if(o)throw o;if(r.unit&&!M.includes(r.unit))throw new i("size-age-renderer:invalid-unit",`Supported units are: ${M.join(", ")}`);return r}async function ne(e){let i=e.sizeScheme,r=null,a=null;const n=await F(e.basemap,e.view);if(r=null!=n.basemapId?n.basemapId:null,a=null!=n.basemapTheme?n.basemapTheme:null,i)return{scheme:_(i),basemapId:r,basemapTheme:a};const s=J({basemapTheme:a,geometryType:e.geometryType,worldScale:e.worldScale,view:e.view});return s&&(i=s.primaryScheme,r=s.basemapId,a=s.basemapTheme),{scheme:i,basemapId:r,basemapTheme:a}}function se(e,i){switch(i){case"point":case"multipoint":{const i=e;return[p(i.minSize),p(i.maxSize)]}case"polyline":{const i=e;return[p(i.minWidth),p(i.maxWidth)]}case"polygon":{const i=e;return[p(i.marker.minSize),p(i.marker.maxSize)]}}}function le(e,i){e.transformationType===c.ClampedLinear&&"below"===i&&e.flipSizes()}async function oe(e,i,r,a,n){return"reference-size"===r&&i?[1,i.size]:e?[e.minSize,e.maxSize]:se(a,n)}function te(e,i){if("reference-size"===i.theme&&null!=e.min&&null!=e.max&&null!=e.avg&&null!=e.stddev){const i=100,r=0,a=0,n=1,s=e.avg,l=e.min,o=e.max,t=e.stddev,m=0!==s?t/s:0,u=l>a&&l<n&&o<2*n&&m<.5,p=l>r&&l<i&&o<2*i&&m<.5;return{minDataValue:u?a:p?r:l,maxDataValue:u?n:p?i:s+2*t,defaultValuesUsed:!1}}const{theme:r,field:a}=i,n=i.layer,s=a&&!("function"==typeof a)?n.getField(a):null,l=L(s);return R(e,r,l,"above"===r||"below"===r)}async function me(e,r,n,s){const{theme:m,field:p,normalizationField:c,minValue:y,maxValue:f,axis:z}=e,b=e.layer.geometryType,v=await ne({basemap:e.basemap,geometryType:b,sizeScheme:e.sizeScheme,worldScale:e.worldScale,view:e.view}),w=v.scheme;if(!w)throw new i("size-visual-variable:insufficient-info","Unable to find size scheme");const h=await oe(n,s,m,w,b),{minDataValue:S,maxDataValue:T,defaultValuesUsed:x}=te(r,e),V=[],E="height"===z,j=E?z:void 0,O=h[0];let k=h[1];if(E&&"number"==typeof O&&"number"==typeof k){const e=I({minSize:O,maxSize:k},j);V.push(new u({axis:"width-and-depth",minSize:e.minSize})),k=e.maxSize}const q=new u({field:p??void 0,valueExpression:e.valueExpression,valueExpressionTitle:e.valueExpressionTitle,valueUnit:"unknown",normalizationField:c,axis:j,minSize:O,maxSize:k,minDataValue:S,maxDataValue:T,legendOptions:a(d,e.legendOptions)});le(q,m),V.unshift(q);const B=new t("reference-size"===m?{type:"size",field:e.field,normalizationField:e.normalizationField,sizeStops:g(q).map((({label:e,size:i,value:r})=>new o({label:e,size:i,value:r}))),theme:m,referenceSizeScale:s?.isGrid||e.sizeOptimizationEnabled?e?.view?.scale:void 0,referenceSizeSymbolStyle:e.referenceSizeOptions?.symbolStyle,minSliderValue:null!=y?y:r.min,maxSliderValue:null!=f?f:r.max}:{type:"size",theme:m,minSliderValue:null!=y?y:r.min,maxSliderValue:null!=f?f:r.max}),F=new l({visualVariables:[B]});return{basemapId:v.basemapId,basemapTheme:v.basemapTheme,visualVariables:V,statistics:r,isGrid:s?.isGrid,defaultValuesUsed:x,sizeScheme:_(w),authoringInfo:F}}async function ue(i,r,a,s,l){const o=await n("esri/smartMapping/t9n/smartMapping"),t=l.layer,m=l.field,u=t.geometryType,p=l.defaultSymbolEnabled,d=_(i.sizeScheme),c="polygon"===u,y=c?d.marker:d,f=c?d.background:null,z=c?"point":u,b=r?.opacity,w=i.isGrid,S="reference-size"===l.theme,T=S?[]:i.visualVariables.map((e=>e.clone()));r?.visualVariables?.length&&T.push(...r.visualVariables.map((e=>e.clone())));const x=S?v({view:l.view,field:m,normalizationField:s,sizeStops:g(i.visualVariables[0]),sizeByScaleEnabled:w||!!l.sizeOptimizationEnabled}):null;return{renderer:new e({backgroundFillSymbol:!w&&f?k(u,{type:l.symbolType,color:f.color,outline:q(f,u,b)}):null,classBreakInfos:[{minValue:-N,maxValue:N,symbol:x?h({type:l.referenceSizeOptions?.symbolStyle||"circle",color:y.color,primitiveOverrides:x}):k(z,{type:l.symbolType,color:y.color,size:B(y,z),outline:q(y,z,b)})}],defaultLabel:p?o.other:null,defaultSymbol:p&&!S?k(z,{type:l.symbolType,color:y.noDataColor,size:B(y,z,!0),outline:q(y,z,b)}):null,field:m,normalizationField:s,normalizationType:a,valueExpression:l.valueExpression,valueExpressionTitle:l.valueExpressionTitle,visualVariables:T,authoringInfo:i.authoringInfo?.clone()}),visualVariables:i.visualVariables.map((e=>e.clone())),statistics:i.statistics,defaultValuesUsed:i.defaultValuesUsed,isGrid:w,sizeScheme:_(i.sizeScheme),basemapId:i.basemapId,basemapTheme:i.basemapTheme}}function pe(e,i){const a=r(e.minSize),n=(r(e.maxSize)-a)/(i>=4?i-1:i),s=[];for(let r=0;r<i;r++)s.push(a+n*r);return s}async function de(i,r){const a=await n("esri/smartMapping/t9n/smartMapping"),s=i.layer,o=i.defaultSymbolEnabled,t=s.geometryType,u="polygon"===t,p=i.symbolType?.includes("3d-volumetric"),d=await ne({basemap:i.basemap,geometryType:t,sizeScheme:i.sizeScheme,worldScale:p,view:i.view}),c=d.scheme,{result:y,outlineResult:f}=r,z=y?.classBreakInfos??[],b=i.classificationMethod,v=i.normalizationType,w=u?c.marker:c,h=u?c.background:null,g=u?"point":t,S=se(w,g),T=p?I({minSize:S[0],maxSize:S[1]},"height"):null,x=pe({minSize:S[0],maxSize:T?T.maxSize:S[1]},z.length),V=f?.opacity,E=new e({backgroundFillSymbol:h&&k(t,{type:i.symbolType,color:h.color,outline:q(h,t,V)}),classBreakInfos:z.map(((e,r)=>({minValue:e.minValue,maxValue:e.maxValue,symbol:k(g,{type:i.symbolType,color:w.color,size:x[r],widthAndDepth:T?.minSize,outline:q(w,g,V)}),label:e.label}))),defaultLabel:o?a.other:null,defaultSymbol:o?k(g,{type:i.symbolType,color:w.noDataColor,size:B(w,g,!0),widthAndDepth:T?.minSize,outline:q(w,g,V)}):null,field:i.field,valueExpression:i.valueExpression,valueExpressionTitle:i.valueExpressionTitle,normalizationType:v,normalizationField:i.normalizationField,normalizationTotal:"percent-of-total"===v?y?.normalizationTotal:void 0,legendOptions:i.legendOptions,authoringInfo:new l({type:"class-breaks-size",classificationMethod:b,standardDeviationInterval:i.standardDeviationInterval})});return"standard-deviation"!==b&&m({classBreakInfos:E.classBreakInfos,classificationMethod:b,normalizationType:v,round:!0}),f?.visualVariables?.length&&(E.visualVariables=f.visualVariables.map((e=>e.clone()))),{renderer:E,sizeScheme:_(c),classBreaksResult:y,defaultValuesUsed:!!r.defaultValuesUsed,basemapId:d.basemapId,basemapTheme:d.basemapTheme}}async function ce(e){const i=await Q(e),{view:r,field:a,valueExpression:n,minValue:s,maxValue:l,layer:o,normalizationField:t,signal:m,statistics:u}=i,p=t?"field":void 0,[d,c]=await Promise.all([u??S({layer:o,field:a,valueExpression:n,sqlExpression:i.sqlExpression,sqlWhere:i.sqlWhere,normalizationType:p,normalizationField:t,minValue:s,maxValue:l,view:r,signal:m}),i.sizeOptimizationEnabled?b({view:r,layer:o,signal:m}).catch(T):null]);return me(i,d,c,i.referenceSizeResult)}async function ye(e){const i=await X(e),r={layer:i.layer,view:i.view,signal:i.signal},[a,n]=await Promise.all([ce(re(i)),i.outlineOptimizationEnabled?f(r).catch(T):null]),s=i.normalizationField;return ue(a,n,s?"field":void 0,s,i)}async function fe(e){const{forBinning:r,layer:a,referenceSizeOptions:n,renderer:s,sizeScheme:t,sizeStops:m,typeScheme:u,view:p}=Z(e),{isGrid:d}=await z({view:p,layer:a,forBinning:r}),c=s.clone();c.authoringInfo??=new l;const y=c.authoringInfo.visualVariables.find((e=>"reference-size"===e.theme)),f=e.field??y?.field,b=e.normalizationField??y?.normalizationField;if(!f)throw new i("update-renderer-with-reference-size:invalid-parameters","'field' parameter or authoring info with 'field' is required.");const g=v({view:p,field:f,normalizationField:b,sizeStops:m,sizeByScaleEnabled:d||!!e.sizeOptimizationEnabled}),S=n?.symbolStyle||y?.referenceSizeSymbolStyle||"circle";if("class-breaks"===c.type){const e="polygon"===("geometryType"in a?a.geometryType:null)&&t&&"marker"in t?t.marker:null;c.classBreakInfos.forEach((i=>{const r=e?.color??K(i.symbol,1);"cim"===i.symbol.type?w(i.symbol,{type:S,color:r,primitiveOverrides:g}):r&&(i.symbol=h({type:S,color:r,primitiveOverrides:g}))}))}else if("unique-value"===c.type){const e=c.uniqueValueGroups,i="polygon"===("geometryType"in a?a.geometryType:null)&&u&&"colors"in u?u.colors:null,r=i?x(i,c.uniqueValueInfos?.length??0):null;let n=0;if(e){for(const i of e)for(const e of i.classes??[]){const i=r?r[n]:K(e.symbol,1);"cim"===e.symbol?.type?w(e.symbol,{type:S,color:i,primitiveOverrides:g}):i&&(e.symbol=h({type:S,color:i,primitiveOverrides:g})),n++}c.uniqueValueGroups=e}}return y&&(y.field=f,y.normalizationField=b,y.sizeStops=m.map((({label:e,size:i,value:r})=>new o({label:e,size:i,value:r}))),y.referenceSizeScale=d||e.sizeOptimizationEnabled?p.scale:void 0,y.referenceSizeSymbolStyle=S),c}async function ze(e){const i=await ee(e);return de(i,await V(ie(i),i.outlineOptimizationEnabled))}async function be(e){const i=await ae(e),{defaultSymbolEnabled:r,view:a,startTime:l,endTime:o,symbolType:t,minValue:m,maxValue:u,signal:p}=i,d=i.layer,c={layer:i.layer,view:i.view,signal:p},[z,b]=await Promise.all([i.unit?{unit:i.unit,statistics:null,valueExpression:null}:await y({view:a,layer:d,startTime:l,endTime:o,minValue:m,maxValue:u,signal:p}),i.outlineOptimizationEnabled?f(c).catch(T):null]),{unit:v,statistics:w}=z,h=U({layer:d,startTime:l,endTime:o,unit:v}).valueExpression,g=await n("esri/smartMapping/t9n/smartMapping"),S=s(g[`ageInfo_${v}`],{unit:v,startTime:E(l,v,d,a),endTime:E(o,v,d,a)}),x=await ce(re({layer:d,basemap:i.basemap,valueExpression:h,symbolType:t,statistics:w,legendOptions:{title:S},theme:i.theme,sizeScheme:i.sizeScheme,sizeOptimizationEnabled:i.sizeOptimizationEnabled,view:i.view,minValue:m,maxValue:u,signal:p})),V={layer:d,valueExpression:h,defaultSymbolEnabled:r,symbolType:t},O=await ue(x,b,null,null,V),I=O.renderer.authoringInfo?.visualVariables;return I?.forEach((e=>j(e,l,o,v))),{...O,unit:v}}export{be as createAgeRenderer,ze as createClassBreaksRenderer,ye as createContinuousRenderer,ce as createVisualVariables,fe as updateRendererWithReferenceSize};
