/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import e from"../../../core/Error.js";import a from"../../../renderers/support/AuthoringInfo.js";import r from"../../../renderers/support/AuthoringInfoVisualVariable.js";import{createFlowRenderer as i,estimateMagnitudeRange as t}from"../../../renderers/support/rasterRendererHelper.js";import n from"../../../renderers/visualVariables/ColorVariable.js";import o from"../../../renderers/visualVariables/OpacityVariable.js";import l from"../../../renderers/visualVariables/SizeVariable.js";import s from"../../../renderers/visualVariables/support/ColorStop.js";import m from"../../../renderers/visualVariables/support/OpacityStop.js";import p from"../../../renderers/visualVariables/support/SizeStop.js";import{processRasterRendererParameters as u}from"../support/utils.js";import{getDataRange as c,createDataValues as f,createColors as d,getBasemapInfo as h}from"../../renderers/support/utils.js";import{cloneScheme as w,getSchemes as b}from"../../symbology/flow.js";const y=5;async function V(e){const a={...e};return a.theme||(a.theme="flow-line"),u(a)}async function S(e){let a=e.flowScheme,r=null,i=null;const t=await h(null,e.view);if(r=null!=t.basemapId?t.basemapId:null,i=null!=t.basemapTheme?t.basemapTheme:null,a)return{scheme:w(a),basemapId:r,basemapTheme:i};const n=b({basemapTheme:i,theme:e.theme,hasSizeVariable:e.hasSizeVariable});return n&&(a=n.primaryScheme,r=n.basemapId,i=n.basemapTheme),{scheme:a,basemapId:r,basemapTheme:i}}async function v(i,u){u.flowRepresentation&&(i.flowRepresentation=u.flowRepresentation);const h=await S({theme:u.theme,flowScheme:u.flowScheme,view:u.view,hasSizeVariable:u.includeSizeVariable}),b=h.scheme;if(!b)throw new e("flow-renderer:insufficient-info","Unable to find flow scheme");i.flowSpeed=b.flowSpeed,i.density=b.density,i.trailLength=b.trailLength,i.trailWidth=b.trailWidth,i.trailCap=b.trailCap,i.color=b.color;const V=[],v=[],g="Magnitude",x=u.layer.rasterInfo,j=null==x?.statistics||"vector-magdir"!==x.dataType&&"vector-uv"!==x.dataType?{minMagnitude:0,maxMagnitude:10}:t(x.dataType,x.statistics);if(null==j?.minMagnitude||null==j.maxMagnitude)throw new e("flow-renderer:insufficient-info","stats not available");const z={min:j.minMagnitude,max:j.maxMagnitude},I={min:z.min,max:null!=z.max?z.max/2:null},T=c(I,null,null),O=f(T,I,null);if(u.includeColorVariable){const a=d(b.colors,y);if(a.length<y)throw new e("flow-renderer:insufficient-info","Flow scheme does not have enough colors");const i=new n({field:g,stops:O.map(((e,r)=>new s({value:e,color:a[r]})))});V.push(i);const t=new r({type:"color",minSliderValue:z.min,maxSliderValue:z.max,theme:"high-to-low"});v.push(t)}if(u.includeOpacityVariable){const e=new o({field:g,stops:[new m({value:O[0],opacity:b.minOpacity}),new m({value:O[4],opacity:b.maxOpacity})]});V.push(e);const a=new r({type:"opacity",minSliderValue:z.min,maxSliderValue:z.max});v.push(a)}if(u.includeSizeVariable){const e=new l({field:g,stops:[new p({value:z.min,size:b.minSize}),new p({value:z.max,size:b.maxSize})]});V.push(e);const a=new r({type:"size",minSliderValue:z.min,maxSliderValue:z.max,theme:"high-to-low"});v.push(a)}const M=new a({type:"flow",visualVariables:v.length?v:void 0,flowTheme:b.theme});return i.visualVariables=V,i.authoringInfo=M,i.legendOptions=u.legendOptions,{renderer:i,visualVariables:V.map((e=>e.clone())),flowScheme:w(b),basemapId:h.basemapId,basemapTheme:h.basemapTheme,layerEffect:b.layerEffect,statistics:z}}async function g(a){a=await V(a);const r=i(a.layer.rasterInfo);if(null==r)throw new e("flow-renderer:not-supported","Only vector data is supported");return v(r,a)}export{g as createRenderer};
