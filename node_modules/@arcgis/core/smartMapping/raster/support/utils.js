/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import r from"../../../core/Error.js";import{getSupportedRendererTypes as e,getFunctionColorramp as a,createDefaultRenderer as t,getDefaultBandCombination as s}from"../../../renderers/support/rasterRendererHelper.js";import n from"./adapters/ImageryLayerAdapter.js";import o from"./adapters/ImageryTileLayerAdapter.js";const l={imagery:{adapter:n,label:"ImageryLayer"},"imagery-tile":{adapter:o,label:"ImageryTileLayer"},wcs:{adapter:o,label:"WCSLayer"}},i={"raster-stretch":"raster-stretch","unique-value":"raster-unique-value","raster-rgb":"raster-rgb","class-breaks":"raster-class-breaks","raster-colormap":"raster-colormap","raster-shaded-relief":"raster-shaded-relief","vector-field":"raster-vector-field",flow:"raster-flow"},c=Object.keys(l).map((r=>l[r].label));function p(r){if("raster-layer-adapter"===r.type)return r;const e=l[r.type]?.adapter;return null==e?null:new e({layer:r})}async function u(r){const s=p((r=await d(r)).layer),n=await s.generateRasterInfo(r),o=e(n,!0).map((r=>i[r])),l="imagery-tile"===s.layer.type?a(s.layer.raster):void 0,c=t(n,{rasterFunctionColorRamp:l}),{bandCount:u}=n;return u>1&&o.push("raster-rgb"),!o.includes("raster-class-breaks")&&1===u&&+s.layer?.version>=10.3&&o.push("raster-class-breaks"),{supportedTypes:o,defaultRenderer:c}}async function y(r){const e=p((r=await d(r)).layer),a=await e.generateRasterInfo(r);return s(a)}async function d(e){const{layer:a}=e;if(!a)throw new r("raster-renderer-creator:missing-parameters","'layer' parameter is required");const t=p(a);if(null==t)throw new r("raster-renderer-creator:invalid-parameters","'layer' must be one of these types: "+c.join(", "));await t.load();const s=e.rasterFunction??e.renderingRule??a.rasterFunction;return await t.updateRasterInfo({rasterFunction:s,signal:e.signal}),{...e,layer:t,rasterFunction:s}}export{p as createRasterLayerAdapter,y as getDefaultBandCombination,u as getSupportedRendererInfo,d as processRasterRendererParameters};
